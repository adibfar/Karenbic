//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets8CA3AC5BBAEA0ECE0F4D42533AE1AB3A85587FACEB180B7679998E8805CE73F7))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets8CA3AC5BBAEA0ECE0F4D42533AE1AB3A85587FACEB180B7679998E8805CE73F7 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets8CA3AC5BBAEA0ECE0F4D42533AE1AB3A85587FACEB180B7679998E8805CE73F7()
        {
            this.EdmEntityContainerName = "Context";
            this.StoreEntityContainerName = "CodeFirstDatabase";
            this.HashOverMappingClosure = "70cd90f88980dfc16df50aa4a6554dbe1752b632a60e4f1acbc19e54e588d40c";
            this.HashOverAllExtentViews = "89b8eccb82d73efa31a1dc6658bfa63e66d7a822e3cfb6255cb2381f6c6ab97f";
            this.ViewCount = 121;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_AdminMessage_Admin
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_AdminMessage_Admin", @"
    SELECT VALUE -- Constructing tbl_AdminMessage_Admin
        [CodeFirstDatabaseSchema.tbl_AdminMessage_Admin](T1.[tbl_AdminMessage_Admin.Id], T1.[tbl_AdminMessage_Admin.IsCustomerGroupFilter], T1.[tbl_AdminMessage_Admin.IsCustomerFilter], T1.[tbl_AdminMessage_Admin.IsShowAdmin])
    FROM (
        SELECT 
            T.Id AS [tbl_AdminMessage_Admin.Id], 
            TREAT(T AS [Karenbic.DataAccess.AdminMessage_Admin]).IsCustomerGroupFilter AS [tbl_AdminMessage_Admin.IsCustomerGroupFilter], 
            TREAT(T AS [Karenbic.DataAccess.AdminMessage_Admin]).IsCustomerFilter AS [tbl_AdminMessage_Admin.IsCustomerFilter], 
            TREAT(T AS [Karenbic.DataAccess.AdminMessage_Admin]).IsShowAdmin AS [tbl_AdminMessage_Admin.IsShowAdmin], 
            True AS _from0
        FROM Context.Messages AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.AdminMessage_Admin])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_AdminMessage_Customer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_AdminMessage_Customer", "\r\n    SELECT VALUE -- Constructing tbl_AdminMessage_Customer\r\n        [CodeFirstD" +
                    "atabaseSchema.tbl_AdminMessage_Customer](T4.[tbl_AdminMessage_Customer.Id], T4.[" +
                    "tbl_AdminMessage_Customer.Customer_Id], T4.[tbl_AdminMessage_Customer.AdminMessa" +
                    "ge_Admin_Id], T4.[tbl_AdminMessage_Customer.IsRead])\r\n    FROM (\r\n        SELECT" +
                    " T1.[tbl_AdminMessage_Customer.Id], T2.[tbl_AdminMessage_Customer.Customer_Id], " +
                    "T1.[tbl_AdminMessage_Customer.AdminMessage_Admin_Id], T3.[tbl_AdminMessage_Custo" +
                    "mer.IsRead], T3._from0, T2._from1, T1._from2\r\n        FROM  (\r\n            SELEC" +
                    "T \r\n                Key(T.AdminMessage_Admin_AdminMessages_Customer_Target).Id A" +
                    "S [tbl_AdminMessage_Customer.Id], \r\n                Key(T.AdminMessage_Admin_Adm" +
                    "inMessages_Customer_Source).Id AS [tbl_AdminMessage_Customer.AdminMessage_Admin_" +
                    "Id], \r\n                True AS _from2\r\n            FROM Context.AdminMessage_Adm" +
                    "in_AdminMessages_Customer AS T) AS T1\r\n            INNER JOIN (\r\n            SEL" +
                    "ECT \r\n                Key(T.AdminMessage_Customer_Customer_Source).Id AS [tbl_Ad" +
                    "minMessage_Customer.Id], \r\n                Key(T.AdminMessage_Customer_Customer_" +
                    "Target).Id AS [tbl_AdminMessage_Customer.Customer_Id], \r\n                True AS" +
                    " _from1\r\n            FROM Context.AdminMessage_Customer_Customer AS T) AS T2\r\n  " +
                    "          ON T1.[tbl_AdminMessage_Customer.Id] = T2.[tbl_AdminMessage_Customer.I" +
                    "d]\r\n            INNER JOIN (\r\n            SELECT \r\n                T.Id AS [tbl_" +
                    "AdminMessage_Customer.Id], \r\n                TREAT(T AS [Karenbic.DataAccess.Adm" +
                    "inMessage_Customer]).IsRead AS [tbl_AdminMessage_Customer.IsRead], \r\n           " +
                    "     True AS _from0\r\n            FROM Context.Messages AS T\r\n            WHERE T" +
                    " IS OF (ONLY [Karenbic.DataAccess.AdminMessage_Customer])) AS T3\r\n            ON" +
                    " T1.[tbl_AdminMessage_Customer.Id] = T3.[tbl_AdminMessage_Customer.Id]\r\n    ) AS" +
                    " T4");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_CustomerMessage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2125);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tbl_CustomerMessage\r\n        [CodeFirstDataba");
            viewString.Append("seSchema.tbl_CustomerMessage](T3.[tbl_CustomerMessage.Id], T3.[tbl_CustomerMessa");
            viewString.Append("ge.Sender_Id], T3.[tbl_CustomerMessage.IsShowAdmin], T3.[tbl_CustomerMessage.IsS");
            viewString.Append("howCustomer], T3.[tbl_CustomerMessage.IsReadAdmin], T3.[tbl_CustomerMessage.IsRe");
            viewString.Append("adCustomer], T3.[tbl_CustomerMessage.IsAdminReply], T3.[tbl_CustomerMessage.Admi");
            viewString.Append("nReply])\r\n    FROM (\r\n        SELECT T1.[tbl_CustomerMessage.Id], T1.[tbl_Custom");
            viewString.Append("erMessage.Sender_Id], T2.[tbl_CustomerMessage.IsShowAdmin], T2.[tbl_CustomerMess");
            viewString.Append("age.IsShowCustomer], T2.[tbl_CustomerMessage.IsReadAdmin], T2.[tbl_CustomerMessa");
            viewString.Append("ge.IsReadCustomer], T2.[tbl_CustomerMessage.IsAdminReply], T2.[tbl_CustomerMessa");
            viewString.Append("ge.AdminReply], T2._from0, T1._from1\r\n        FROM  (\r\n            SELECT \r\n    ");
            viewString.Append("            Key(T.CustomerMessage_Sender_Source).Id AS [tbl_CustomerMessage.Id],");
            viewString.Append(" \r\n                Key(T.CustomerMessage_Sender_Target).Id AS [tbl_CustomerMessa");
            viewString.Append("ge.Sender_Id], \r\n                True AS _from1\r\n            FROM Context.Custom");
            viewString.Append("erMessage_Sender AS T) AS T1\r\n            INNER JOIN (\r\n            SELECT \r\n   ");
            viewString.Append("             T.Id AS [tbl_CustomerMessage.Id], \r\n                TREAT(T AS [Kar");
            viewString.Append("enbic.DataAccess.CustomerMessage]).IsShowAdmin AS [tbl_CustomerMessage.IsShowAdm");
            viewString.Append("in], \r\n                TREAT(T AS [Karenbic.DataAccess.CustomerMessage]).IsShowC");
            viewString.Append("ustomer AS [tbl_CustomerMessage.IsShowCustomer], \r\n                TREAT(T AS [K");
            viewString.Append("arenbic.DataAccess.CustomerMessage]).IsReadAdmin AS [tbl_CustomerMessage.IsReadA");
            viewString.Append("dmin], \r\n                TREAT(T AS [Karenbic.DataAccess.CustomerMessage]).IsRea");
            viewString.Append("dCustomer AS [tbl_CustomerMessage.IsReadCustomer], \r\n                TREAT(T AS ");
            viewString.Append("[Karenbic.DataAccess.CustomerMessage]).IsAdminReply AS [tbl_CustomerMessage.IsAd");
            viewString.Append("minReply], \r\n                TREAT(T AS [Karenbic.DataAccess.CustomerMessage]).A");
            viewString.Append("dminReply AS [tbl_CustomerMessage.AdminReply], \r\n                True AS _from0\r");
            viewString.Append("\n            FROM Context.Messages AS T\r\n            WHERE T IS OF (ONLY [Karenb");
            viewString.Append("ic.DataAccess.CustomerMessage])) AS T2\r\n            ON T1.[tbl_CustomerMessage.I");
            viewString.Append("d] = T2.[tbl_CustomerMessage.Id]\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_CustomerMessage", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Message
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Message", @"
    SELECT VALUE -- Constructing Message
        [CodeFirstDatabaseSchema.Message](T1.Message_Id, T1.Message_Title, T1.Message_Text, T1.Message_SendDate)
    FROM (
        SELECT 
            T.Id AS Message_Id, 
            T.Title AS Message_Title, 
            T.Text AS Message_Text, 
            T.SendDate AS Message_SendDate, 
            True AS _from0
        FROM Context.Messages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Customer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2354);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Customer\r\n        [CodeFirstDatabaseSchema.Cu");
            viewString.Append("stomer](T5.Customer_Id, T5.Customer_Name, T5.Customer_Surname, T5.Customer_Usern");
            viewString.Append("ame, T5.Customer_Gender, T5.Customer_RegisterDate, T5.Customer_Phone, T5.Custome");
            viewString.Append("r_Mobile, T5.Customer_Email, T5.Customer_Address, T5.[Customer.City_Id], T5.[Cus");
            viewString.Append("tomer.Group_Id])\r\n    FROM (\r\n        SELECT T3.Customer_Id, T3.Customer_Name, T");
            viewString.Append("3.Customer_Surname, T3.Customer_Username, T3.Customer_Gender, T3.Customer_Regist");
            viewString.Append("erDate, T3.Customer_Phone, T3.Customer_Mobile, T3.Customer_Email, T3.Customer_Ad");
            viewString.Append("dress, T3.[Customer.City_Id], T4.[Customer.Group_Id], T3._from0, T3._from1, (T4.");
            viewString.Append("_from2 AND T4._from2 IS NOT NULL) AS _from2\r\n        FROM  (\r\n            SELECT");
            viewString.Append(" T1.Customer_Id, T1.Customer_Name, T1.Customer_Surname, T1.Customer_Username, T1");
            viewString.Append(".Customer_Gender, T1.Customer_RegisterDate, T1.Customer_Phone, T1.Customer_Mobil");
            viewString.Append("e, T1.Customer_Email, T1.Customer_Address, T2.[Customer.City_Id], T1._from0, T2.");
            viewString.Append("_from1\r\n            FROM  (\r\n                SELECT \r\n                    T.Id A");
            viewString.Append("S Customer_Id, \r\n                    T.Name AS Customer_Name, \r\n                ");
            viewString.Append("    T.Surname AS Customer_Surname, \r\n                    T.Username AS Customer_");
            viewString.Append("Username, \r\n                    CAST(T.Gender AS [Edm.Int32]) AS Customer_Gender");
            viewString.Append(", \r\n                    T.RegisterDate AS Customer_RegisterDate, \r\n             ");
            viewString.Append("       T.Phone AS Customer_Phone, \r\n                    T.Mobile AS Customer_Mob");
            viewString.Append("ile, \r\n                    T.Email AS Customer_Email, \r\n                    T.Ad");
            viewString.Append("dress AS Customer_Address, \r\n                    True AS _from0\r\n               ");
            viewString.Append(" FROM Context.Customers AS T) AS T1\r\n                INNER JOIN (\r\n             ");
            viewString.Append("   SELECT \r\n                    Key(T.City_Customers_Target).Id AS Customer_Id, ");
            viewString.Append("\r\n                    Key(T.City_Customers_Source).Id AS [Customer.City_Id], \r\n ");
            viewString.Append("                   True AS _from1\r\n                FROM Context.City_Customers A");
            viewString.Append("S T) AS T2\r\n                ON T1.Customer_Id = T2.Customer_Id) AS T3\r\n         ");
            viewString.Append("   LEFT OUTER JOIN (\r\n            SELECT \r\n                Key(T.CustomerGroup_C");
            viewString.Append("ustomers_Target).Id AS Customer_Id, \r\n                Key(T.CustomerGroup_Custom");
            viewString.Append("ers_Source).Id AS [Customer.Group_Id], \r\n                True AS _from2\r\n       ");
            viewString.Append("     FROM Context.CustomerGroup_Customers AS T) AS T4\r\n            ON T3.Custome");
            viewString.Append("r_Id = T4.Customer_Id\r\n    ) AS T5");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Customer", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.City
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.City", @"
    SELECT VALUE -- Constructing City
        [CodeFirstDatabaseSchema.City](T3.City_Id, T3.City_Name, T3.[City.Province_Id])
    FROM (
        SELECT T1.City_Id, T2.City_Name, T1.[City.Province_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.City_Province_Source).Id AS City_Id, 
                Key(T.City_Province_Target).Id AS [City.Province_Id], 
                True AS _from1
            FROM Context.City_Province AS T) AS T1
            INNER JOIN (
            SELECT 
                T.Id AS City_Id, 
                T.Name AS City_Name, 
                True AS _from0
            FROM Context.Cities AS T) AS T2
            ON T1.City_Id = T2.City_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Province
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Province", @"
    SELECT VALUE -- Constructing Province
        [CodeFirstDatabaseSchema.Province](T1.Province_Id, T1.Province_Name)
    FROM (
        SELECT 
            T.Id AS Province_Id, 
            T.Name AS Province_Name, 
            True AS _from0
        FROM Context.Province AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.CustomerGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.CustomerGroup", @"
    SELECT VALUE -- Constructing CustomerGroup
        [CodeFirstDatabaseSchema.CustomerGroup](T1.CustomerGroup_Id, T1.CustomerGroup_Title)
    FROM (
        SELECT 
            T.Id AS CustomerGroup_Id, 
            T.Title AS CustomerGroup_Title, 
            True AS _from0
        FROM Context.CustomerGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Order
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Order", "\r\n    SELECT VALUE -- Constructing Order\r\n        [CodeFirstDatabaseSchema.Order]" +
                    "(T4.Order_Id, T4.Order_RegisterDate, T4.Order_IsConfirm, T4.Order_ConfirmDate, T" +
                    "4.Order_IsCanceled, T4.Order_CancelDate, T4.[Order.Form_Id], T4.[Order.Customer_" +
                    "Id])\r\n    FROM (\r\n        SELECT T1.Order_Id, T3.Order_RegisterDate, T3.Order_Is" +
                    "Confirm, T3.Order_ConfirmDate, T3.Order_IsCanceled, T3.Order_CancelDate, T2.[Ord" +
                    "er.Form_Id], T1.[Order.Customer_Id], T3._from0, T2._from1, T1._from2\r\n        FR" +
                    "OM  (\r\n            SELECT \r\n                Key(T.Customer_Orders_Target).Id AS " +
                    "Order_Id, \r\n                Key(T.Customer_Orders_Source).Id AS [Order.Customer_" +
                    "Id], \r\n                True AS _from2\r\n            FROM Context.Customer_Orders " +
                    "AS T) AS T1\r\n            INNER JOIN (\r\n            SELECT \r\n                Key(" +
                    "T.Form_Orders_Target).Id AS Order_Id, \r\n                Key(T.Form_Orders_Source" +
                    ").Id AS [Order.Form_Id], \r\n                True AS _from1\r\n            FROM Cont" +
                    "ext.Form_Orders AS T) AS T2\r\n            ON T1.Order_Id = T2.Order_Id\r\n         " +
                    "   INNER JOIN (\r\n            SELECT \r\n                T.Id AS Order_Id, \r\n      " +
                    "          T.RegisterDate AS Order_RegisterDate, \r\n                T.IsConfirm AS" +
                    " Order_IsConfirm, \r\n                T.ConfirmDate AS Order_ConfirmDate, \r\n      " +
                    "          T.IsCanceled AS Order_IsCanceled, \r\n                T.CancelDate AS Or" +
                    "der_CancelDate, \r\n                True AS _from0\r\n            FROM Context.Order" +
                    "s AS T) AS T3\r\n            ON T1.Order_Id = T3.Order_Id\r\n    ) AS T4");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_DesignOrder
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_DesignOrder", @"
    SELECT VALUE -- Constructing tbl_DesignOrder
        [CodeFirstDatabaseSchema.tbl_DesignOrder](T1.[tbl_DesignOrder.Id], T1.[tbl_DesignOrder.LastChange], T1.[tbl_DesignOrder.Price], T1.[tbl_DesignOrder.SpecialCreativity], T1.[tbl_DesignOrder.Prepayment], T1.[tbl_DesignOrder.IsPaidPrepayment], T1.[tbl_DesignOrder.IsPaidFinal], T1.[tbl_DesignOrder.IsPreAcceptDesign], T1.[tbl_DesignOrder.IsAcceptDesign])
    FROM (
        SELECT 
            T.Id AS [tbl_DesignOrder.Id], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).LastChange AS [tbl_DesignOrder.LastChange], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).Price AS [tbl_DesignOrder.Price], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).SpecialCreativity AS [tbl_DesignOrder.SpecialCreativity], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).Prepayment AS [tbl_DesignOrder.Prepayment], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).IsPaidPrepayment AS [tbl_DesignOrder.IsPaidPrepayment], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).IsPaidFinal AS [tbl_DesignOrder.IsPaidFinal], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).IsPreAcceptDesign AS [tbl_DesignOrder.IsPreAcceptDesign], 
            TREAT(T AS [Karenbic.DataAccess.DesignOrder]).IsAcceptDesign AS [tbl_DesignOrder.IsAcceptDesign], 
            True AS _from0
        FROM Context.Orders AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.DesignOrder])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_PrintOrder
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_PrintOrder", @"
    SELECT VALUE -- Constructing tbl_PrintOrder
        [CodeFirstDatabaseSchema.tbl_PrintOrder](T1.[tbl_PrintOrder.Id], T1.[tbl_PrintOrder.PrintPrice], T1.[tbl_PrintOrder.PackingPrice], T1.[tbl_PrintOrder.IsPaid], T1.[tbl_PrintOrder.OrderState])
    FROM (
        SELECT 
            T.Id AS [tbl_PrintOrder.Id], 
            TREAT(T AS [Karenbic.DataAccess.PrintOrder]).PrintPrice AS [tbl_PrintOrder.PrintPrice], 
            TREAT(T AS [Karenbic.DataAccess.PrintOrder]).PackingPrice AS [tbl_PrintOrder.PackingPrice], 
            TREAT(T AS [Karenbic.DataAccess.PrintOrder]).IsPaid AS [tbl_PrintOrder.IsPaid], 
            CAST(TREAT(T AS [Karenbic.DataAccess.PrintOrder]).OrderState AS [Edm.Int32]) AS [tbl_PrintOrder.OrderState], 
            True AS _from0
        FROM Context.Orders AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.PrintOrder])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Form
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Form", @"
    SELECT VALUE -- Constructing Form
        [CodeFirstDatabaseSchema.Form](T3.Form_Id, T3.Form_Portal, T3.Form_Title, T3.Form_Priority, T3.Form_SpecialCreativity, T3.Form_IsShow, T3.Form_Description, T3.Form_CanDelete, T3.[Form.Group_Id])
    FROM (
        SELECT T1.Form_Id, T2.Form_Portal, T2.Form_Title, T2.Form_Priority, T2.Form_SpecialCreativity, T2.Form_IsShow, T2.Form_Description, T2.Form_CanDelete, T1.[Form.Group_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.FormGroup_Forms_Target).Id AS Form_Id, 
                Key(T.FormGroup_Forms_Source).Id AS [Form.Group_Id], 
                True AS _from1
            FROM Context.FormGroup_Forms AS T) AS T1
            INNER JOIN (
            SELECT 
                T.Id AS Form_Id, 
                CAST(T.Portal AS [Edm.Int32]) AS Form_Portal, 
                T.Title AS Form_Title, 
                T.Priority AS Form_Priority, 
                T.SpecialCreativity AS Form_SpecialCreativity, 
                T.IsShow AS Form_IsShow, 
                T.Description AS Form_Description, 
                T.CanDelete AS Form_CanDelete, 
                True AS _from0
            FROM Context.Forms AS T) AS T2
            ON T1.Form_Id = T2.Form_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2687);
            viewString.Append("\r\n    SELECT VALUE -- Constructing FormField\r\n        [CodeFirstDatabaseSchema.F");
            viewString.Append("ormField](T6.FormField_Id, T6.FormField_Title, T6.FormField_ShowCustomer, T6.For");
            viewString.Append("mField_ShowAdmin, T6.FormField_Description, T6.FormField_PictureHelpFile, T6.For");
            viewString.Append("mField_CanDelete, T6.[FormField.DesktopPosition_Id], T6.[FormField.Form_Id], T6.");
            viewString.Append("[FormField.MobilePosition_Id], T6.[FormField.TabletPosition_Id])\r\n    FROM (\r\n  ");
            viewString.Append("      SELECT T1.FormField_Id, T3.FormField_Title, T3.FormField_ShowCustomer, T3.");
            viewString.Append("FormField_ShowAdmin, T3.FormField_Description, T3.FormField_PictureHelpFile, T3.");
            viewString.Append("FormField_CanDelete, T2.[FormField.DesktopPosition_Id], T5.[FormField.Form_Id], ");
            viewString.Append("T4.[FormField.MobilePosition_Id], T1.[FormField.TabletPosition_Id], T3._from0, T");
            viewString.Append("2._from1, T5._from2, T4._from3, T1._from4\r\n        FROM  (\r\n            SELECT \r");
            viewString.Append("\n                Key(T.FormField_TabletPosition_Source).Id AS FormField_Id, \r\n  ");
            viewString.Append("              Key(T.FormField_TabletPosition_Target).Id AS [FormField.TabletPosi");
            viewString.Append("tion_Id], \r\n                True AS _from4\r\n            FROM Context.FormField_T");
            viewString.Append("abletPosition AS T) AS T1\r\n            INNER JOIN (\r\n            SELECT \r\n      ");
            viewString.Append("          Key(T.FormField_DesktopPosition_Source).Id AS FormField_Id, \r\n        ");
            viewString.Append("        Key(T.FormField_DesktopPosition_Target).Id AS [FormField.DesktopPosition");
            viewString.Append("_Id], \r\n                True AS _from1\r\n            FROM Context.FormField_Deskt");
            viewString.Append("opPosition AS T) AS T2\r\n            ON T1.FormField_Id = T2.FormField_Id\r\n      ");
            viewString.Append("      INNER JOIN (\r\n            SELECT \r\n                T.Id AS FormField_Id, \r");
            viewString.Append("\n                T.Title AS FormField_Title, \r\n                T.ShowCustomer AS");
            viewString.Append(" FormField_ShowCustomer, \r\n                T.ShowAdmin AS FormField_ShowAdmin, \r");
            viewString.Append("\n                T.Description AS FormField_Description, \r\n                T.Pic");
            viewString.Append("tureHelpFile AS FormField_PictureHelpFile, \r\n                T.CanDelete AS Form");
            viewString.Append("Field_CanDelete, \r\n                True AS _from0\r\n            FROM Context.Form");
            viewString.Append("Fields AS T) AS T3\r\n            ON T1.FormField_Id = T3.FormField_Id\r\n          ");
            viewString.Append("  INNER JOIN (\r\n            SELECT \r\n                Key(T.FormField_MobilePosit");
            viewString.Append("ion_Source).Id AS FormField_Id, \r\n                Key(T.FormField_MobilePosition");
            viewString.Append("_Target).Id AS [FormField.MobilePosition_Id], \r\n                True AS _from3\r\n");
            viewString.Append("            FROM Context.FormField_MobilePosition AS T) AS T4\r\n            ON T1");
            viewString.Append(".FormField_Id = T4.FormField_Id\r\n            INNER JOIN (\r\n            SELECT \r\n");
            viewString.Append("                Key(T.FormField_Form_Source).Id AS FormField_Id, \r\n             ");
            viewString.Append("   Key(T.FormField_Form_Target).Id AS [FormField.Form_Id], \r\n                Tru");
            viewString.Append("e AS _from2\r\n            FROM Context.FormField_Form AS T) AS T5\r\n            ON");
            viewString.Append(" T1.FormField_Id = T5.FormField_Id\r\n    ) AS T6");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_CheckBoxGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_CheckBoxGroup", @"
    SELECT VALUE -- Constructing tbl_FormField_CheckBoxGroup
        [CodeFirstDatabaseSchema.tbl_FormField_CheckBoxGroup](T1.[tbl_FormField_CheckBoxGroup.Id], T1.[tbl_FormField_CheckBoxGroup.ShowInFactor], T1.[tbl_FormField_CheckBoxGroup.FactorOrder])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_CheckBoxGroup.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_CheckBoxGroup]).ShowInFactor AS [tbl_FormField_CheckBoxGroup.ShowInFactor], 
            TREAT(T AS [Karenbic.DataAccess.FormField_CheckBoxGroup]).FactorOrder AS [tbl_FormField_CheckBoxGroup.FactorOrder], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_CheckBoxGroup])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_DropDown
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_DropDown", @"
    SELECT VALUE -- Constructing tbl_FormField_DropDown
        [CodeFirstDatabaseSchema.tbl_FormField_DropDown](T1.[tbl_FormField_DropDown.Id], T1.[tbl_FormField_DropDown.IsRequired], T1.[tbl_FormField_DropDown.ShowInFactor], T1.[tbl_FormField_DropDown.FactorOrder])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_DropDown.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DropDown]).IsRequired AS [tbl_FormField_DropDown.IsRequired], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DropDown]).ShowInFactor AS [tbl_FormField_DropDown.ShowInFactor], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DropDown]).FactorOrder AS [tbl_FormField_DropDown.FactorOrder], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_DropDown])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_RadioButtonGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_RadioButtonGroup", @"
    SELECT VALUE -- Constructing tbl_FormField_RadioButtonGroup
        [CodeFirstDatabaseSchema.tbl_FormField_RadioButtonGroup](T1.[tbl_FormField_RadioButtonGroup.Id], T1.[tbl_FormField_RadioButtonGroup.IsRequired], T1.[tbl_FormField_RadioButtonGroup.ShowInFactor], T1.[tbl_FormField_RadioButtonGroup.FactorOrder])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_RadioButtonGroup.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_RadioButtonGroup]).IsRequired AS [tbl_FormField_RadioButtonGroup.IsRequired], 
            TREAT(T AS [Karenbic.DataAccess.FormField_RadioButtonGroup]).ShowInFactor AS [tbl_FormField_RadioButtonGroup.ShowInFactor], 
            TREAT(T AS [Karenbic.DataAccess.FormField_RadioButtonGroup]).FactorOrder AS [tbl_FormField_RadioButtonGroup.FactorOrder], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_RadioButtonGroup])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_CheckBox
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_CheckBox", @"
    SELECT VALUE -- Constructing tbl_FormField_CheckBox
        [CodeFirstDatabaseSchema.tbl_FormField_CheckBox](T1.[tbl_FormField_CheckBox.Id], T1.[tbl_FormField_CheckBox.ShowInFactor], T1.[tbl_FormField_CheckBox.FactorOrder])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_CheckBox.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_CheckBox]).ShowInFactor AS [tbl_FormField_CheckBox.ShowInFactor], 
            TREAT(T AS [Karenbic.DataAccess.FormField_CheckBox]).FactorOrder AS [tbl_FormField_CheckBox.FactorOrder], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_CheckBox])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_ColorPicker
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_ColorPicker", @"
    SELECT VALUE -- Constructing tbl_FormField_ColorPicker
        [CodeFirstDatabaseSchema.tbl_FormField_ColorPicker](T1.[tbl_FormField_ColorPicker.Id], T1.[tbl_FormField_ColorPicker.IsRequired])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_ColorPicker.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_ColorPicker]).IsRequired AS [tbl_FormField_ColorPicker.IsRequired], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_ColorPicker])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_DatePicker
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_DatePicker", @"
    SELECT VALUE -- Constructing tbl_FormField_DatePicker
        [CodeFirstDatabaseSchema.tbl_FormField_DatePicker](T1.[tbl_FormField_DatePicker.Id], T1.[tbl_FormField_DatePicker.IsRequired], T1.[tbl_FormField_DatePicker.Limits], T1.[tbl_FormField_DatePicker.Min], T1.[tbl_FormField_DatePicker.Max], T1.[tbl_FormField_DatePicker.ShowInFactor], T1.[tbl_FormField_DatePicker.FactorOrder])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_DatePicker.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DatePicker]).IsRequired AS [tbl_FormField_DatePicker.IsRequired], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DatePicker]).Limits AS [tbl_FormField_DatePicker.Limits], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DatePicker]).Min AS [tbl_FormField_DatePicker.Min], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DatePicker]).Max AS [tbl_FormField_DatePicker.Max], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DatePicker]).ShowInFactor AS [tbl_FormField_DatePicker.ShowInFactor], 
            TREAT(T AS [Karenbic.DataAccess.FormField_DatePicker]).FactorOrder AS [tbl_FormField_DatePicker.FactorOrder], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_DatePicker])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_FileUploader
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_FileUploader", @"
    SELECT VALUE -- Constructing tbl_FormField_FileUploader
        [CodeFirstDatabaseSchema.tbl_FormField_FileUploader](T1.[tbl_FormField_FileUploader.Id], T1.[tbl_FormField_FileUploader.IsRequired], T1.[tbl_FormField_FileUploader.SizeLimits], T1.[tbl_FormField_FileUploader.MinSize], T1.[tbl_FormField_FileUploader.MaxSize])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_FileUploader.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_FileUploader]).IsRequired AS [tbl_FormField_FileUploader.IsRequired], 
            TREAT(T AS [Karenbic.DataAccess.FormField_FileUploader]).SizeLimits AS [tbl_FormField_FileUploader.SizeLimits], 
            TREAT(T AS [Karenbic.DataAccess.FormField_FileUploader]).MinSize AS [tbl_FormField_FileUploader.MinSize], 
            TREAT(T AS [Karenbic.DataAccess.FormField_FileUploader]).MaxSize AS [tbl_FormField_FileUploader.MaxSize], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_FileUploader])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormFiled_Numeric
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormFiled_Numeric", "\r\n    SELECT VALUE -- Constructing tbl_FormFiled_Numeric\r\n        [CodeFirstDatab" +
                    "aseSchema.tbl_FormFiled_Numeric](T1.[tbl_FormFiled_Numeric.Id], T1.[tbl_FormFile" +
                    "d_Numeric.IsInt], T1.[tbl_FormFiled_Numeric.IsFloat], T1.[tbl_FormFiled_Numeric." +
                    "Defualt], T1.[tbl_FormFiled_Numeric.IsRequired], T1.[tbl_FormFiled_Numeric.Limit" +
                    "s], T1.[tbl_FormFiled_Numeric.Min], T1.[tbl_FormFiled_Numeric.Max], T1.[tbl_Form" +
                    "Filed_Numeric.ShowInFactor], T1.[tbl_FormFiled_Numeric.FactorOrder])\r\n    FROM (" +
                    "\r\n        SELECT \r\n            T.Id AS [tbl_FormFiled_Numeric.Id], \r\n           " +
                    " TREAT(T AS [Karenbic.DataAccess.FormField_Numeric]).IsInt AS [tbl_FormFiled_Num" +
                    "eric.IsInt], \r\n            TREAT(T AS [Karenbic.DataAccess.FormField_Numeric]).I" +
                    "sFloat AS [tbl_FormFiled_Numeric.IsFloat], \r\n            TREAT(T AS [Karenbic.Da" +
                    "taAccess.FormField_Numeric]).Defualt AS [tbl_FormFiled_Numeric.Defualt], \r\n     " +
                    "       TREAT(T AS [Karenbic.DataAccess.FormField_Numeric]).IsRequired AS [tbl_Fo" +
                    "rmFiled_Numeric.IsRequired], \r\n            TREAT(T AS [Karenbic.DataAccess.FormF" +
                    "ield_Numeric]).Limits AS [tbl_FormFiled_Numeric.Limits], \r\n            TREAT(T A" +
                    "S [Karenbic.DataAccess.FormField_Numeric]).Min AS [tbl_FormFiled_Numeric.Min], \r" +
                    "\n            TREAT(T AS [Karenbic.DataAccess.FormField_Numeric]).Max AS [tbl_For" +
                    "mFiled_Numeric.Max], \r\n            TREAT(T AS [Karenbic.DataAccess.FormField_Num" +
                    "eric]).ShowInFactor AS [tbl_FormFiled_Numeric.ShowInFactor], \r\n            TREAT" +
                    "(T AS [Karenbic.DataAccess.FormField_Numeric]).FactorOrder AS [tbl_FormFiled_Num" +
                    "eric.FactorOrder], \r\n            True AS _from0\r\n        FROM Context.FormFields" +
                    " AS T\r\n        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_Numeric])\r\n   " +
                    " ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_TextArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_TextArea", "\r\n    SELECT VALUE -- Constructing tbl_FormField_TextArea\r\n        [CodeFirstData" +
                    "baseSchema.tbl_FormField_TextArea](T1.[tbl_FormField_TextArea.Id], T1.[tbl_FormF" +
                    "ield_TextArea.IsRequired], T1.[tbl_FormField_TextArea.CharacterLimits], T1.[tbl_" +
                    "FormField_TextArea.MinCharacters], T1.[tbl_FormField_TextArea.MaxCharacters], T1" +
                    ".[tbl_FormField_TextArea.ShowInFactor], T1.[tbl_FormField_TextArea.FactorOrder]," +
                    " T1.[tbl_FormField_TextArea.Height])\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".Id AS [tbl_FormField_TextArea.Id], \r\n            TREAT(T AS [Karenbic.DataAcces" +
                    "s.FormField_TextArea]).IsRequired AS [tbl_FormField_TextArea.IsRequired], \r\n    " +
                    "        TREAT(T AS [Karenbic.DataAccess.FormField_TextArea]).CharacterLimits AS " +
                    "[tbl_FormField_TextArea.CharacterLimits], \r\n            TREAT(T AS [Karenbic.Dat" +
                    "aAccess.FormField_TextArea]).MinCharacters AS [tbl_FormField_TextArea.MinCharact" +
                    "ers], \r\n            TREAT(T AS [Karenbic.DataAccess.FormField_TextArea]).MaxChar" +
                    "acters AS [tbl_FormField_TextArea.MaxCharacters], \r\n            TREAT(T AS [Kare" +
                    "nbic.DataAccess.FormField_TextArea]).ShowInFactor AS [tbl_FormField_TextArea.Sho" +
                    "wInFactor], \r\n            TREAT(T AS [Karenbic.DataAccess.FormField_TextArea]).F" +
                    "actorOrder AS [tbl_FormField_TextArea.FactorOrder], \r\n            TREAT(T AS [Ka" +
                    "renbic.DataAccess.FormField_TextArea]).Height AS [tbl_FormField_TextArea.Height]" +
                    ", \r\n            True AS _from0\r\n        FROM Context.FormFields AS T\r\n        WH" +
                    "ERE T IS OF (ONLY [Karenbic.DataAccess.FormField_TextArea])\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_TextBox
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_TextBox", @"
    SELECT VALUE -- Constructing tbl_FormField_TextBox
        [CodeFirstDatabaseSchema.tbl_FormField_TextBox](T1.[tbl_FormField_TextBox.Id], T1.[tbl_FormField_TextBox.Defualt], T1.[tbl_FormField_TextBox.IsRequired], T1.[tbl_FormField_TextBox.CharacterLimits], T1.[tbl_FormField_TextBox.MinCharacters], T1.[tbl_FormField_TextBox.MaxCharacters], T1.[tbl_FormField_TextBox.ShowInFactor], T1.[tbl_FormField_TextBox.FactorOrder])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_TextBox.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_TextBox]).Defualt AS [tbl_FormField_TextBox.Defualt], 
            TREAT(T AS [Karenbic.DataAccess.FormField_TextBox]).IsRequired AS [tbl_FormField_TextBox.IsRequired], 
            TREAT(T AS [Karenbic.DataAccess.FormField_TextBox]).CharacterLimits AS [tbl_FormField_TextBox.CharacterLimits], 
            TREAT(T AS [Karenbic.DataAccess.FormField_TextBox]).MinCharacters AS [tbl_FormField_TextBox.MinCharacters], 
            TREAT(T AS [Karenbic.DataAccess.FormField_TextBox]).MaxCharacters AS [tbl_FormField_TextBox.MaxCharacters], 
            TREAT(T AS [Karenbic.DataAccess.FormField_TextBox]).ShowInFactor AS [tbl_FormField_TextBox.ShowInFactor], 
            TREAT(T AS [Karenbic.DataAccess.FormField_TextBox]).FactorOrder AS [tbl_FormField_TextBox.FactorOrder], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_TextBox])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_FormField_WebUrl
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_FormField_WebUrl", @"
    SELECT VALUE -- Constructing tbl_FormField_WebUrl
        [CodeFirstDatabaseSchema.tbl_FormField_WebUrl](T1.[tbl_FormField_WebUrl.Id], T1.[tbl_FormField_WebUrl.IsRequired])
    FROM (
        SELECT 
            T.Id AS [tbl_FormField_WebUrl.Id], 
            TREAT(T AS [Karenbic.DataAccess.FormField_WebUrl]).IsRequired AS [tbl_FormField_WebUrl.IsRequired], 
            True AS _from0
        FROM Context.FormFields AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.FormField_WebUrl])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField_Position_Desktop
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField_Position_Desktop", @"
    SELECT VALUE -- Constructing FormField_Position_Desktop
        [CodeFirstDatabaseSchema.FormField_Position_Desktop](T1.[FormField_Position_Desktop.Id], T1.[FormField_Position_Desktop.SizeX], T1.[FormField_Position_Desktop.SizeY], T1.[FormField_Position_Desktop.Row], T1.[FormField_Position_Desktop.Column])
    FROM (
        SELECT 
            T.Id AS [FormField_Position_Desktop.Id], 
            T.SizeX AS [FormField_Position_Desktop.SizeX], 
            T.SizeY AS [FormField_Position_Desktop.SizeY], 
            T.[Row] AS [FormField_Position_Desktop.Row], 
            T.Column AS [FormField_Position_Desktop.Column], 
            True AS _from0
        FROM Context.FormField_Position_Desktop AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField_Position_Mobile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField_Position_Mobile", @"
    SELECT VALUE -- Constructing FormField_Position_Mobile
        [CodeFirstDatabaseSchema.FormField_Position_Mobile](T1.[FormField_Position_Mobile.Id], T1.[FormField_Position_Mobile.SizeY], T1.[FormField_Position_Mobile.Row])
    FROM (
        SELECT 
            T.Id AS [FormField_Position_Mobile.Id], 
            T.SizeY AS [FormField_Position_Mobile.SizeY], 
            T.[Row] AS [FormField_Position_Mobile.Row], 
            True AS _from0
        FROM Context.FormField_Position_Mobile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Order_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Order_Value", @"
    SELECT VALUE -- Constructing Order_Value
        [CodeFirstDatabaseSchema.Order_Value](T3.[Order_Value.Id], T3.[Order_Value.Order_Id], T3.[Order_Value.Field_Id])
    FROM (
        SELECT T1.[Order_Value.Id], T2.[Order_Value.Order_Id], T1.[Order_Value.Field_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.FormField_Orders_Value_Target).Id AS [Order_Value.Id], 
                Key(T.FormField_Orders_Value_Source).Id AS [Order_Value.Field_Id], 
                True AS _from1
            FROM Context.FormField_Orders_Value AS T) AS T1
            INNER JOIN (
            SELECT 
                Key(T.Order_Value_Order_Source).Id AS [Order_Value.Id], 
                Key(T.Order_Value_Order_Target).Id AS [Order_Value.Order_Id], 
                True AS _from0
            FROM Context.Order_Value_Order AS T) AS T2
            ON T1.[Order_Value.Id] = T2.[Order_Value.Id]
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_Checkbox
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_Checkbox", @"
    SELECT VALUE -- Constructing tbl_Order_Value_Checkbox
        [CodeFirstDatabaseSchema.tbl_Order_Value_Checkbox](T1.[tbl_Order_Value_Checkbox.Id], T1.[tbl_Order_Value_Checkbox.Value])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_Checkbox.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_Checkbox]).[Value] AS [tbl_Order_Value_Checkbox.Value], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_Checkbox])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_CheckboxGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_CheckboxGroup", @"
    SELECT VALUE -- Constructing tbl_Order_Value_CheckboxGroup
        [CodeFirstDatabaseSchema.tbl_Order_Value_CheckboxGroup](T1.[tbl_Order_Value_CheckboxGroup.Id])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_CheckboxGroup.Id], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_CheckboxGroup])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_ColorPicker
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_ColorPicker", @"
    SELECT VALUE -- Constructing tbl_Order_Value_ColorPicker
        [CodeFirstDatabaseSchema.tbl_Order_Value_ColorPicker](T1.[tbl_Order_Value_ColorPicker.Id], T1.[tbl_Order_Value_ColorPicker.Value])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_ColorPicker.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_ColorPicker]).[Value] AS [tbl_Order_Value_ColorPicker.Value], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_ColorPicker])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_DatePicker
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_DatePicker", @"
    SELECT VALUE -- Constructing tbl_Order_Value_DatePicker
        [CodeFirstDatabaseSchema.tbl_Order_Value_DatePicker](T1.[tbl_Order_Value_DatePicker.Id], T1.[tbl_Order_Value_DatePicker.Value])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_DatePicker.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_DatePicker]).[Value] AS [tbl_Order_Value_DatePicker.Value], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_DatePicker])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_DropDown
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_DropDown", @"
    SELECT VALUE -- Constructing tbl_Order_Value_DropDown
        [CodeFirstDatabaseSchema.tbl_Order_Value_DropDown](T3.[tbl_Order_Value_DropDown.Id], T3.[tbl_Order_Value_DropDown.Value_Id])
    FROM (
        SELECT T1.[tbl_Order_Value_DropDown.Id], T2.[tbl_Order_Value_DropDown.Value_Id], (T2._from0 AND T2._from0 IS NOT NULL) AS _from0, T1._from1
        FROM  (
            SELECT 
                T.Id AS [tbl_Order_Value_DropDown.Id], 
                True AS _from1
            FROM Context.Order_Values AS T
            WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_DropDown])) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.FormField_DropDown_Item_Orders_Value_Target).Id AS [tbl_Order_Value_DropDown.Id], 
                Key(T.FormField_DropDown_Item_Orders_Value_Source).Id AS [tbl_Order_Value_DropDown.Value_Id], 
                True AS _from0
            FROM Context.FormField_DropDown_Item_Orders_Value AS T) AS T2
            ON T1.[tbl_Order_Value_DropDown.Id] = T2.[tbl_Order_Value_DropDown.Id]
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_FileUploader
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_FileUploader", @"
    SELECT VALUE -- Constructing tbl_Order_Value_FileUploader
        [CodeFirstDatabaseSchema.tbl_Order_Value_FileUploader](T1.[tbl_Order_Value_FileUploader.Id], T1.[tbl_Order_Value_FileUploader.FileName])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_FileUploader.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_FileUploader]).FileName AS [tbl_Order_Value_FileUploader.FileName], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_FileUploader])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_Numeric
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_Numeric", @"
    SELECT VALUE -- Constructing tbl_Order_Value_Numeric
        [CodeFirstDatabaseSchema.tbl_Order_Value_Numeric](T1.[tbl_Order_Value_Numeric.Id], T1.[tbl_Order_Value_Numeric.Value])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_Numeric.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_Numeric]).[Value] AS [tbl_Order_Value_Numeric.Value], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_Numeric])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_RadioButtonGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_RadioButtonGroup", @"
    SELECT VALUE -- Constructing tbl_Order_Value_RadioButtonGroup
        [CodeFirstDatabaseSchema.tbl_Order_Value_RadioButtonGroup](T3.[tbl_Order_Value_RadioButtonGroup.Id], T3.[tbl_Order_Value_RadioButtonGroup.Value_Id])
    FROM (
        SELECT T1.[tbl_Order_Value_RadioButtonGroup.Id], T2.[tbl_Order_Value_RadioButtonGroup.Value_Id], (T2._from0 AND T2._from0 IS NOT NULL) AS _from0, T1._from1
        FROM  (
            SELECT 
                T.Id AS [tbl_Order_Value_RadioButtonGroup.Id], 
                True AS _from1
            FROM Context.Order_Values AS T
            WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_RadioButtonGroup])) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.FormField_RadioButtonGroup_Item_Orders_Value_Target).Id AS [tbl_Order_Value_RadioButtonGroup.Id], 
                Key(T.FormField_RadioButtonGroup_Item_Orders_Value_Source).Id AS [tbl_Order_Value_RadioButtonGroup.Value_Id], 
                True AS _from0
            FROM Context.FormField_RadioButtonGroup_Item_Orders_Value AS T) AS T2
            ON T1.[tbl_Order_Value_RadioButtonGroup.Id] = T2.[tbl_Order_Value_RadioButtonGroup.Id]
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_TextArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_TextArea", @"
    SELECT VALUE -- Constructing tbl_Order_Value_TextArea
        [CodeFirstDatabaseSchema.tbl_Order_Value_TextArea](T1.[tbl_Order_Value_TextArea.Id], T1.[tbl_Order_Value_TextArea.Value])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_TextArea.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_TextArea]).[Value] AS [tbl_Order_Value_TextArea.Value], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_TextArea])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_TextBox
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_TextBox", @"
    SELECT VALUE -- Constructing tbl_Order_Value_TextBox
        [CodeFirstDatabaseSchema.tbl_Order_Value_TextBox](T1.[tbl_Order_Value_TextBox.Id], T1.[tbl_Order_Value_TextBox.Value])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_TextBox.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_TextBox]).[Value] AS [tbl_Order_Value_TextBox.Value], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_TextBox])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_Order_Value_WebUrl
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_Order_Value_WebUrl", @"
    SELECT VALUE -- Constructing tbl_Order_Value_WebUrl
        [CodeFirstDatabaseSchema.tbl_Order_Value_WebUrl](T1.[tbl_Order_Value_WebUrl.Id], T1.[tbl_Order_Value_WebUrl.Value])
    FROM (
        SELECT 
            T.Id AS [tbl_Order_Value_WebUrl.Id], 
            TREAT(T AS [Karenbic.DataAccess.Order_Value_WebUrl]).[Value] AS [tbl_Order_Value_WebUrl.Value], 
            True AS _from0
        FROM Context.Order_Values AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.Order_Value_WebUrl])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField_CheckBoxGroup_Item
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField_CheckBoxGroup_Item", "\r\n    SELECT VALUE -- Constructing FormField_CheckBoxGroup_Item\r\n        [CodeFir" +
                    "stDatabaseSchema.FormField_CheckBoxGroup_Item](T3.[FormField_CheckBoxGroup_Item." +
                    "Id], T3.[FormField_CheckBoxGroup_Item.Title], T3.[FormField_CheckBoxGroup_Item.O" +
                    "rder], T3.[FormField_CheckBoxGroup_Item.ShowCustomer], T3.[FormField_CheckBoxGro" +
                    "up_Item.ShowAdmin], T3.[FormField_CheckBoxGroup_Item.CanDelete], T3.[FormField_C" +
                    "heckBoxGroup_Item.CheckBoxGroup_Id])\r\n    FROM (\r\n        SELECT T1.[FormField_C" +
                    "heckBoxGroup_Item.Id], T2.[FormField_CheckBoxGroup_Item.Title], T2.[FormField_Ch" +
                    "eckBoxGroup_Item.Order], T2.[FormField_CheckBoxGroup_Item.ShowCustomer], T2.[For" +
                    "mField_CheckBoxGroup_Item.ShowAdmin], T2.[FormField_CheckBoxGroup_Item.CanDelete" +
                    "], T1.[FormField_CheckBoxGroup_Item.CheckBoxGroup_Id], T2._from0, T1._from1\r\n   " +
                    "     FROM  (\r\n            SELECT \r\n                Key(T.FormField_CheckBoxGroup" +
                    "_Item_CheckBoxGroup_Source).Id AS [FormField_CheckBoxGroup_Item.Id], \r\n         " +
                    "       Key(T.FormField_CheckBoxGroup_Item_CheckBoxGroup_Target).Id AS [FormField" +
                    "_CheckBoxGroup_Item.CheckBoxGroup_Id], \r\n                True AS _from1\r\n       " +
                    "     FROM Context.FormField_CheckBoxGroup_Item_CheckBoxGroup AS T) AS T1\r\n      " +
                    "      INNER JOIN (\r\n            SELECT \r\n                T.Id AS [FormField_Chec" +
                    "kBoxGroup_Item.Id], \r\n                T.Title AS [FormField_CheckBoxGroup_Item.T" +
                    "itle], \r\n                T.[Order] AS [FormField_CheckBoxGroup_Item.Order], \r\n  " +
                    "              T.ShowCustomer AS [FormField_CheckBoxGroup_Item.ShowCustomer], \r\n " +
                    "               T.ShowAdmin AS [FormField_CheckBoxGroup_Item.ShowAdmin], \r\n      " +
                    "          T.CanDelete AS [FormField_CheckBoxGroup_Item.CanDelete], \r\n           " +
                    "     True AS _from0\r\n            FROM Context.FormField_CheckBoxGroup_Items AS T" +
                    ") AS T2\r\n            ON T1.[FormField_CheckBoxGroup_Item.Id] = T2.[FormField_Che" +
                    "ckBoxGroup_Item.Id]\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField_Position_Tablet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField_Position_Tablet", @"
    SELECT VALUE -- Constructing FormField_Position_Tablet
        [CodeFirstDatabaseSchema.FormField_Position_Tablet](T1.[FormField_Position_Tablet.Id], T1.[FormField_Position_Tablet.SizeX], T1.[FormField_Position_Tablet.SizeY], T1.[FormField_Position_Tablet.Row], T1.[FormField_Position_Tablet.Column])
    FROM (
        SELECT 
            T.Id AS [FormField_Position_Tablet.Id], 
            T.SizeX AS [FormField_Position_Tablet.SizeX], 
            T.SizeY AS [FormField_Position_Tablet.SizeY], 
            T.[Row] AS [FormField_Position_Tablet.Row], 
            T.Column AS [FormField_Position_Tablet.Column], 
            True AS _from0
        FROM Context.FormField_Position_Tablet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField_DropDown_Item
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField_DropDown_Item", "\r\n    SELECT VALUE -- Constructing FormField_DropDown_Item\r\n        [CodeFirstDat" +
                    "abaseSchema.FormField_DropDown_Item](T3.[FormField_DropDown_Item.Id], T3.[FormFi" +
                    "eld_DropDown_Item.Title], T3.[FormField_DropDown_Item.Order], T3.[FormField_Drop" +
                    "Down_Item.ShowCustomer], T3.[FormField_DropDown_Item.ShowAdmin], T3.[FormField_D" +
                    "ropDown_Item.CanDelete], T3.[FormField_DropDown_Item.DropDown_Id])\r\n    FROM (\r\n" +
                    "        SELECT T1.[FormField_DropDown_Item.Id], T2.[FormField_DropDown_Item.Titl" +
                    "e], T2.[FormField_DropDown_Item.Order], T2.[FormField_DropDown_Item.ShowCustomer" +
                    "], T2.[FormField_DropDown_Item.ShowAdmin], T2.[FormField_DropDown_Item.CanDelete" +
                    "], T1.[FormField_DropDown_Item.DropDown_Id], T2._from0, T1._from1\r\n        FROM " +
                    " (\r\n            SELECT \r\n                Key(T.FormField_DropDown_Item_DropDown_" +
                    "Source).Id AS [FormField_DropDown_Item.Id], \r\n                Key(T.FormField_Dr" +
                    "opDown_Item_DropDown_Target).Id AS [FormField_DropDown_Item.DropDown_Id], \r\n    " +
                    "            True AS _from1\r\n            FROM Context.FormField_DropDown_Item_Dro" +
                    "pDown AS T) AS T1\r\n            INNER JOIN (\r\n            SELECT \r\n              " +
                    "  T.Id AS [FormField_DropDown_Item.Id], \r\n                T.Title AS [FormField_" +
                    "DropDown_Item.Title], \r\n                T.[Order] AS [FormField_DropDown_Item.Or" +
                    "der], \r\n                T.ShowCustomer AS [FormField_DropDown_Item.ShowCustomer]" +
                    ", \r\n                T.ShowAdmin AS [FormField_DropDown_Item.ShowAdmin], \r\n      " +
                    "          T.CanDelete AS [FormField_DropDown_Item.CanDelete], \r\n                " +
                    "True AS _from0\r\n            FROM Context.FormField_DropDown_Items AS T) AS T2\r\n " +
                    "           ON T1.[FormField_DropDown_Item.Id] = T2.[FormField_DropDown_Item.Id]\r" +
                    "\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField_RadioButtonGroup_Item
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField_RadioButtonGroup_Item", "\r\n    SELECT VALUE -- Constructing FormField_RadioButtonGroup_Item\r\n        [Code" +
                    "FirstDatabaseSchema.FormField_RadioButtonGroup_Item](T3.[FormField_RadioButtonGr" +
                    "oup_Item.Id], T3.[FormField_RadioButtonGroup_Item.Title], T3.[FormField_RadioBut" +
                    "tonGroup_Item.Order], T3.[FormField_RadioButtonGroup_Item.ShowCustomer], T3.[For" +
                    "mField_RadioButtonGroup_Item.ShowAdmin], T3.[FormField_RadioButtonGroup_Item.Can" +
                    "Delete], T3.[FormField_RadioButtonGroup_Item.RadioButtonGroup_Id])\r\n    FROM (\r\n" +
                    "        SELECT T1.[FormField_RadioButtonGroup_Item.Id], T2.[FormField_RadioButto" +
                    "nGroup_Item.Title], T2.[FormField_RadioButtonGroup_Item.Order], T2.[FormField_Ra" +
                    "dioButtonGroup_Item.ShowCustomer], T2.[FormField_RadioButtonGroup_Item.ShowAdmin" +
                    "], T2.[FormField_RadioButtonGroup_Item.CanDelete], T1.[FormField_RadioButtonGrou" +
                    "p_Item.RadioButtonGroup_Id], T2._from0, T1._from1\r\n        FROM  (\r\n            " +
                    "SELECT \r\n                Key(T.FormField_RadioButtonGroup_Item_RadioButtonGroup_" +
                    "Source).Id AS [FormField_RadioButtonGroup_Item.Id], \r\n                Key(T.Form" +
                    "Field_RadioButtonGroup_Item_RadioButtonGroup_Target).Id AS [FormField_RadioButto" +
                    "nGroup_Item.RadioButtonGroup_Id], \r\n                True AS _from1\r\n            " +
                    "FROM Context.FormField_RadioButtonGroup_Item_RadioButtonGroup AS T) AS T1\r\n     " +
                    "       INNER JOIN (\r\n            SELECT \r\n                T.Id AS [FormField_Rad" +
                    "ioButtonGroup_Item.Id], \r\n                T.Title AS [FormField_RadioButtonGroup" +
                    "_Item.Title], \r\n                T.[Order] AS [FormField_RadioButtonGroup_Item.Or" +
                    "der], \r\n                T.ShowCustomer AS [FormField_RadioButtonGroup_Item.ShowC" +
                    "ustomer], \r\n                T.ShowAdmin AS [FormField_RadioButtonGroup_Item.Show" +
                    "Admin], \r\n                T.CanDelete AS [FormField_RadioButtonGroup_Item.CanDel" +
                    "ete], \r\n                True AS _from0\r\n            FROM Context.FormField_Radio" +
                    "ButtonGroup_Items AS T) AS T2\r\n            ON T1.[FormField_RadioButtonGroup_Ite" +
                    "m.Id] = T2.[FormField_RadioButtonGroup_Item.Id]\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FileFormat
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FileFormat", @"
    SELECT VALUE -- Constructing FileFormat
        [CodeFirstDatabaseSchema.FileFormat](T1.FileFormat_Id, T1.FileFormat_Title, T1.FileFormat_Extention)
    FROM (
        SELECT 
            T.Id AS FileFormat_Id, 
            T.Title AS FileFormat_Title, 
            T.Extention AS FileFormat_Extention, 
            True AS _from0
        FROM Context.FileFormats AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormGroup", @"
    SELECT VALUE -- Constructing FormGroup
        [CodeFirstDatabaseSchema.FormGroup](T1.FormGroup_Id, T1.FormGroup_Portal, T1.FormGroup_IsShow, T1.FormGroup_Title, T1.FormGroup_Column, T1.FormGroup_Priority)
    FROM (
        SELECT 
            T.Id AS FormGroup_Id, 
            CAST(T.Portal AS [Edm.Int32]) AS FormGroup_Portal, 
            T.IsShow AS FormGroup_IsShow, 
            T.Title AS FormGroup_Title, 
            T.Column AS FormGroup_Column, 
            T.Priority AS FormGroup_Priority, 
            True AS _from0
        FROM Context.FormGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DesignOrder_Design
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DesignOrder_Design", @"
    SELECT VALUE -- Constructing DesignOrder_Design
        [CodeFirstDatabaseSchema.DesignOrder_Design](T3.[DesignOrder_Design.Id], T3.[DesignOrder_Design.RegisterDate], T3.[DesignOrder_Design.Description], T3.[DesignOrder_Design.IsReview], T3.[DesignOrder_Design.Order_Id])
    FROM (
        SELECT T1.[DesignOrder_Design.Id], T2.[DesignOrder_Design.RegisterDate], T2.[DesignOrder_Design.Description], T2.[DesignOrder_Design.IsReview], T1.[DesignOrder_Design.Order_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.DesignOrder_Design_Order_Source).Id AS [DesignOrder_Design.Id], 
                Key(T.DesignOrder_Design_Order_Target).Id AS [DesignOrder_Design.Order_Id], 
                True AS _from1
            FROM Context.DesignOrder_Design_Order AS T) AS T1
            INNER JOIN (
            SELECT 
                T.Id AS [DesignOrder_Design.Id], 
                T.RegisterDate AS [DesignOrder_Design.RegisterDate], 
                T.Description AS [DesignOrder_Design.Description], 
                T.IsReview AS [DesignOrder_Design.IsReview], 
                True AS _from0
            FROM Context.DesignOrder_Designs AS T) AS T2
            ON T1.[DesignOrder_Design.Id] = T2.[DesignOrder_Design.Id]
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DesignOrder_Design_File
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DesignOrder_Design_File", "\r\n    SELECT VALUE -- Constructing DesignOrder_Design_File\r\n        [CodeFirstDat" +
                    "abaseSchema.DesignOrder_Design_File](T3.[DesignOrder_Design_File.Id], T3.[Design" +
                    "Order_Design_File.PictureFile], T3.[DesignOrder_Design_File.State], T3.[DesignOr" +
                    "der_Design_File.TempState], T3.[DesignOrder_Design_File.CustomerDescription], T3" +
                    ".[DesignOrder_Design_File.Design_Id])\r\n    FROM (\r\n        SELECT T1.[DesignOrde" +
                    "r_Design_File.Id], T2.[DesignOrder_Design_File.PictureFile], T2.[DesignOrder_Des" +
                    "ign_File.State], T2.[DesignOrder_Design_File.TempState], T2.[DesignOrder_Design_" +
                    "File.CustomerDescription], T1.[DesignOrder_Design_File.Design_Id], T2._from0, T1" +
                    "._from1\r\n        FROM  (\r\n            SELECT \r\n                Key(T.DesignOrder" +
                    "_Design_File_Design_Source).Id AS [DesignOrder_Design_File.Id], \r\n              " +
                    "  Key(T.DesignOrder_Design_File_Design_Target).Id AS [DesignOrder_Design_File.De" +
                    "sign_Id], \r\n                True AS _from1\r\n            FROM Context.DesignOrder" +
                    "_Design_File_Design AS T) AS T1\r\n            INNER JOIN (\r\n            SELECT \r\n" +
                    "                T.Id AS [DesignOrder_Design_File.Id], \r\n                T.Pictur" +
                    "eFile AS [DesignOrder_Design_File.PictureFile], \r\n                CAST(T.State A" +
                    "S [Edm.Int32]) AS [DesignOrder_Design_File.State], \r\n                CAST(T.Temp" +
                    "State AS [Edm.Int32]) AS [DesignOrder_Design_File.TempState], \r\n                " +
                    "T.CustomerDescription AS [DesignOrder_Design_File.CustomerDescription], \r\n      " +
                    "          True AS _from0\r\n            FROM Context.DesignOrder_Design_Files AS T" +
                    ") AS T2\r\n            ON T1.[DesignOrder_Design_File.Id] = T2.[DesignOrder_Design" +
                    "_File.Id]\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FinalDesignFactor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FinalDesignFactor", @"
    SELECT VALUE -- Constructing FinalDesignFactor
        [CodeFirstDatabaseSchema.FinalDesignFactor](T3.FinalDesignFactor_Id, T3.FinalDesignFactor_Price, T3.FinalDesignFactor_RegisterDate, T3.FinalDesignFactor_IsPaid, T3.FinalDesignFactor_PaidDate, T3.[FinalDesignFactor.Payment_Id])
    FROM (
        SELECT T1.FinalDesignFactor_Id, T1.FinalDesignFactor_Price, T1.FinalDesignFactor_RegisterDate, T1.FinalDesignFactor_IsPaid, T1.FinalDesignFactor_PaidDate, T2.[FinalDesignFactor.Payment_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS FinalDesignFactor_Id, 
                T.Price AS FinalDesignFactor_Price, 
                T.RegisterDate AS FinalDesignFactor_RegisterDate, 
                T.IsPaid AS FinalDesignFactor_IsPaid, 
                T.PaidDate AS FinalDesignFactor_PaidDate, 
                True AS _from0
            FROM Context.FinalDesignFactors AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.DesignPayment_FinalFactors_Target).Id AS FinalDesignFactor_Id, 
                Key(T.DesignPayment_FinalFactors_Source).Id AS [FinalDesignFactor.Payment_Id], 
                True AS _from1
            FROM Context.DesignPayment_FinalFactors AS T) AS T2
            ON T1.FinalDesignFactor_Id = T2.FinalDesignFactor_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_DesignPayment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_DesignPayment", @"
    SELECT VALUE -- Constructing tbl_DesignPayment
        [CodeFirstDatabaseSchema.tbl_DesignPayment](T1.[tbl_DesignPayment.Id])
    FROM (
        SELECT 
            T.Id AS [tbl_DesignPayment.Id], 
            True AS _from0
        FROM Context.Payments AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.DesignPayment])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.tbl_PrintPayment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.tbl_PrintPayment", @"
    SELECT VALUE -- Constructing tbl_PrintPayment
        [CodeFirstDatabaseSchema.tbl_PrintPayment](T1.[tbl_PrintPayment.Id])
    FROM (
        SELECT 
            T.Id AS [tbl_PrintPayment.Id], 
            True AS _from0
        FROM Context.Payments AS T
        WHERE T IS OF (ONLY [Karenbic.DataAccess.PrintPayment])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Payment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Payment", @"
    SELECT VALUE -- Constructing Payment
        [CodeFirstDatabaseSchema.Payment](T1.Payment_Id, T1.Payment_Money, T1.Payment_RegisterDate, T1.Payment_IsComplete, T1.Payment_IsPaid, T1.Payment_RefId, T1.Payment_ResCode, T1.Payment_SaleOrderId, T1.Payment_SaleReferenceId)
    FROM (
        SELECT 
            T.Id AS Payment_Id, 
            T.Money AS Payment_Money, 
            T.RegisterDate AS Payment_RegisterDate, 
            T.IsComplete AS Payment_IsComplete, 
            T.IsPaid AS Payment_IsPaid, 
            T.RefId AS Payment_RefId, 
            T.ResCode AS Payment_ResCode, 
            T.SaleOrderId AS Payment_SaleOrderId, 
            T.SaleReferenceId AS Payment_SaleReferenceId, 
            True AS _from0
        FROM Context.Payments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FinalDesignPaymentItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FinalDesignPaymentItem", @"
    SELECT VALUE -- Constructing FinalDesignPaymentItem
        [CodeFirstDatabaseSchema.FinalDesignPaymentItem](T3.FinalDesignPaymentItem_id, T3.FinalDesignPaymentItem_FactorId, T3.[FinalDesignPaymentItem.Payment_Id])
    FROM (
        SELECT T1.FinalDesignPaymentItem_id, T2.FinalDesignPaymentItem_FactorId, T1.[FinalDesignPaymentItem.Payment_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.DesignPayment_FinalItems_Target).id AS FinalDesignPaymentItem_id, 
                Key(T.DesignPayment_FinalItems_Source).Id AS [FinalDesignPaymentItem.Payment_Id], 
                True AS _from1
            FROM Context.DesignPayment_FinalItems AS T) AS T1
            INNER JOIN (
            SELECT 
                T.id AS FinalDesignPaymentItem_id, 
                T.FactorId AS FinalDesignPaymentItem_FactorId, 
                True AS _from0
            FROM Context.FinalDesignPaymentItems AS T) AS T2
            ON T1.FinalDesignPaymentItem_id = T2.FinalDesignPaymentItem_id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PrepaymentDesignFactor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PrepaymentDesignFactor", "\r\n    SELECT VALUE -- Constructing PrepaymentDesignFactor\r\n        [CodeFirstData" +
                    "baseSchema.PrepaymentDesignFactor](T3.PrepaymentDesignFactor_Id, T3.PrepaymentDe" +
                    "signFactor_Price, T3.PrepaymentDesignFactor_RegisterDate, T3.PrepaymentDesignFac" +
                    "tor_IsPaid, T3.PrepaymentDesignFactor_PaidDate, T3.[PrepaymentDesignFactor.Payme" +
                    "nt_Id])\r\n    FROM (\r\n        SELECT T1.PrepaymentDesignFactor_Id, T1.PrepaymentD" +
                    "esignFactor_Price, T1.PrepaymentDesignFactor_RegisterDate, T1.PrepaymentDesignFa" +
                    "ctor_IsPaid, T1.PrepaymentDesignFactor_PaidDate, T2.[PrepaymentDesignFactor.Paym" +
                    "ent_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1\r\n        FRO" +
                    "M  (\r\n            SELECT \r\n                T.Id AS PrepaymentDesignFactor_Id, \r\n" +
                    "                T.Price AS PrepaymentDesignFactor_Price, \r\n                T.Reg" +
                    "isterDate AS PrepaymentDesignFactor_RegisterDate, \r\n                T.IsPaid AS " +
                    "PrepaymentDesignFactor_IsPaid, \r\n                T.PaidDate AS PrepaymentDesignF" +
                    "actor_PaidDate, \r\n                True AS _from0\r\n            FROM Context.Prepa" +
                    "ymentDesignFactors AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n            SELEC" +
                    "T \r\n                Key(T.DesignPayment_PrepaymentFactors_Target).Id AS Prepayme" +
                    "ntDesignFactor_Id, \r\n                Key(T.DesignPayment_PrepaymentFactors_Sourc" +
                    "e).Id AS [PrepaymentDesignFactor.Payment_Id], \r\n                True AS _from1\r\n" +
                    "            FROM Context.DesignPayment_PrepaymentFactors AS T) AS T2\r\n          " +
                    "  ON T1.PrepaymentDesignFactor_Id = T2.PrepaymentDesignFactor_Id\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PrepaymentDesignPaymentItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PrepaymentDesignPaymentItem", @"
    SELECT VALUE -- Constructing PrepaymentDesignPaymentItem
        [CodeFirstDatabaseSchema.PrepaymentDesignPaymentItem](T3.PrepaymentDesignPaymentItem_id, T3.PrepaymentDesignPaymentItem_FactorId, T3.[PrepaymentDesignPaymentItem.Payment_Id])
    FROM (
        SELECT T1.PrepaymentDesignPaymentItem_id, T2.PrepaymentDesignPaymentItem_FactorId, T1.[PrepaymentDesignPaymentItem.Payment_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.DesignPayment_PrepaymentItems_Target).id AS PrepaymentDesignPaymentItem_id, 
                Key(T.DesignPayment_PrepaymentItems_Source).Id AS [PrepaymentDesignPaymentItem.Payment_Id], 
                True AS _from1
            FROM Context.DesignPayment_PrepaymentItems AS T) AS T1
            INNER JOIN (
            SELECT 
                T.id AS PrepaymentDesignPaymentItem_id, 
                T.FactorId AS PrepaymentDesignPaymentItem_FactorId, 
                True AS _from0
            FROM Context.PrepaymentDesignPaymentItems AS T) AS T2
            ON T1.PrepaymentDesignPaymentItem_id = T2.PrepaymentDesignPaymentItem_id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PrintFactor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PrintFactor", @"
    SELECT VALUE -- Constructing PrintFactor
        [CodeFirstDatabaseSchema.PrintFactor](T3.PrintFactor_Id, T3.PrintFactor_Price, T3.PrintFactor_RegisterDate, T3.PrintFactor_IsPaid, T3.PrintFactor_PaidDate, T3.[PrintFactor.Payment_Id])
    FROM (
        SELECT T1.PrintFactor_Id, T1.PrintFactor_Price, T1.PrintFactor_RegisterDate, T1.PrintFactor_IsPaid, T1.PrintFactor_PaidDate, T2.[PrintFactor.Payment_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS PrintFactor_Id, 
                T.Price AS PrintFactor_Price, 
                T.RegisterDate AS PrintFactor_RegisterDate, 
                T.IsPaid AS PrintFactor_IsPaid, 
                T.PaidDate AS PrintFactor_PaidDate, 
                True AS _from0
            FROM Context.PrintFactors AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.PrintFactor_Payment_Source).Id AS PrintFactor_Id, 
                Key(T.PrintFactor_Payment_Target).Id AS [PrintFactor.Payment_Id], 
                True AS _from1
            FROM Context.PrintFactor_Payment AS T) AS T2
            ON T1.PrintFactor_Id = T2.PrintFactor_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PrintPaymentItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PrintPaymentItem", @"
    SELECT VALUE -- Constructing PrintPaymentItem
        [CodeFirstDatabaseSchema.PrintPaymentItem](T3.PrintPaymentItem_id, T3.PrintPaymentItem_FactorId, T3.[PrintPaymentItem.Payment_Id])
    FROM (
        SELECT T1.PrintPaymentItem_id, T2.PrintPaymentItem_FactorId, T1.[PrintPaymentItem.Payment_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.PrintPaymentItem_Payment_Source).id AS PrintPaymentItem_id, 
                Key(T.PrintPaymentItem_Payment_Target).Id AS [PrintPaymentItem.Payment_Id], 
                True AS _from1
            FROM Context.PrintPaymentItem_Payment AS T) AS T1
            INNER JOIN (
            SELECT 
                T.id AS PrintPaymentItem_id, 
                T.FactorId AS PrintPaymentItem_FactorId, 
                True AS _from0
            FROM Context.PrintPaymentItems AS T) AS T2
            ON T1.PrintPaymentItem_id = T2.PrintPaymentItem_id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup", @"
    SELECT VALUE -- Constructing FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup
        [CodeFirstDatabaseSchema.FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup](T1.[FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup.Order_Value_CheckBoxGroup_Id], T1.[FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup.FormField_CheckBoxGroup_Item_Id])
    FROM (
        SELECT 
            Key(T.FormField_CheckBoxGroup_Item_Orders_Value_Source).Id AS [FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup.Order_Value_CheckBoxGroup_Id], 
            Key(T.FormField_CheckBoxGroup_Item_Orders_Value_Target).Id AS [FormField_CheckBoxGroup_ItemOrder_Value_CheckboxGroup.FormField_CheckBoxGroup_Item_Id], 
            True AS _from0
        FROM Context.FormField_CheckBoxGroup_Item_Orders_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FileFormatFormField_FileUploader
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FileFormatFormField_FileUploader", @"
    SELECT VALUE -- Constructing FileFormatFormField_FileUploader
        [CodeFirstDatabaseSchema.FileFormatFormField_FileUploader](T1.[FileFormatFormField_FileUploader.FormField_FileUploader_Id], T1.[FileFormatFormField_FileUploader.FileFormat_Id])
    FROM (
        SELECT 
            Key(T.FileFormat_FileUploaders_Source).Id AS [FileFormatFormField_FileUploader.FormField_FileUploader_Id], 
            Key(T.FileFormat_FileUploaders_Target).Id AS [FileFormatFormField_FileUploader.FileFormat_Id], 
            True AS _from0
        FROM Context.FileFormat_FileUploaders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AdminMessage_AdminCustomerGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AdminMessage_AdminCustomerGroup", @"
    SELECT VALUE -- Constructing AdminMessage_AdminCustomerGroup
        [CodeFirstDatabaseSchema.AdminMessage_AdminCustomerGroup](T1.[AdminMessage_AdminCustomerGroup.CustomerGroup_Id], T1.[AdminMessage_AdminCustomerGroup.AdminMessages_Admin_Id])
    FROM (
        SELECT 
            Key(T.AdminMessage_Admin_CustomerGroups_Source).Id AS [AdminMessage_AdminCustomerGroup.CustomerGroup_Id], 
            Key(T.AdminMessage_Admin_CustomerGroups_Target).Id AS [AdminMessage_AdminCustomerGroup.AdminMessages_Admin_Id], 
            True AS _from0
        FROM Context.AdminMessage_Admin_CustomerGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AdminMessage_AdminCustomer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AdminMessage_AdminCustomer", @"
    SELECT VALUE -- Constructing AdminMessage_AdminCustomer
        [CodeFirstDatabaseSchema.AdminMessage_AdminCustomer](T1.[AdminMessage_AdminCustomer.Customer_Id], T1.[AdminMessage_AdminCustomer.AdminMessages_Admin_Id])
    FROM (
        SELECT 
            Key(T.AdminMessage_Admin_Customers_Source).Id AS [AdminMessage_AdminCustomer.Customer_Id], 
            Key(T.AdminMessage_Admin_Customers_Target).Id AS [AdminMessage_AdminCustomer.AdminMessages_Admin_Id], 
            True AS _from0
        FROM Context.AdminMessage_Admin_Customers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.Messages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4900);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Messages\r\n        CASE\r\n            WHEN (NOT");
            viewString.Append("(T5._from0) AND NOT(T5._from1) AND NOT(T5._from3)) THEN [Karenbic.DataAccess.Mes");
            viewString.Append("sage](T5.Message_Id, T5.Message_Title, T5.Message_Text, T5.Message_SendDate)\r\n  ");
            viewString.Append("          WHEN T5._from1 THEN [Karenbic.DataAccess.AdminMessage_Admin](T5.Messag");
            viewString.Append("e_Id, T5.Message_Title, T5.Message_Text, T5.Message_SendDate, T5.[AdminMessage_A");
            viewString.Append("dmin.IsCustomerGroupFilter], T5.[AdminMessage_Admin.IsCustomerFilter], T5.[Admin");
            viewString.Append("Message_Admin.IsShowAdmin])\r\n            WHEN T5._from3 THEN [Karenbic.DataAcces");
            viewString.Append("s.AdminMessage_Customer](T5.Message_Id, T5.Message_Title, T5.Message_Text, T5.Me");
            viewString.Append("ssage_SendDate, T5.[AdminMessage_Customer.IsRead]) WITH \r\n                RELATI");
            viewString.Append("ONSHIP(CREATEREF(Context.Customers, ROW(T5.[AdminMessage_Customer_Customer.Admin");
            viewString.Append("Message_Customer_Customer_Target.Id]),[Karenbic.DataAccess.Customer]),[Karenbic.");
            viewString.Append("DataAccess.AdminMessage_Customer_Customer],AdminMessage_Customer_Customer_Source");
            viewString.Append(",AdminMessage_Customer_Customer_Target) \r\n                RELATIONSHIP(CREATEREF");
            viewString.Append("(Context.Messages, ROW(T5.[AdminMessage_Admin_AdminMessages_Customer.AdminMessag");
            viewString.Append("e_Admin_AdminMessages_Customer_Source.Id]),[Karenbic.DataAccess.AdminMessage_Adm");
            viewString.Append("in]),[Karenbic.DataAccess.AdminMessage_Admin_AdminMessages_Customer],AdminMessag");
            viewString.Append("e_Admin_AdminMessages_Customer_Target,AdminMessage_Admin_AdminMessages_Customer_");
            viewString.Append("Source) \r\n            ELSE [Karenbic.DataAccess.CustomerMessage](T5.Message_Id, ");
            viewString.Append("T5.Message_Title, T5.Message_Text, T5.Message_SendDate, T5.CustomerMessage_IsSho");
            viewString.Append("wAdmin, T5.CustomerMessage_IsShowCustomer, T5.CustomerMessage_IsReadAdmin, T5.Cu");
            viewString.Append("stomerMessage_IsReadCustomer, T5.CustomerMessage_IsAdminReply, T5.CustomerMessag");
            viewString.Append("e_AdminReply) WITH \r\n                RELATIONSHIP(CREATEREF(Context.Customers, R");
            viewString.Append("OW(T5.[CustomerMessage_Sender.CustomerMessage_Sender_Target.Id]),[Karenbic.DataA");
            viewString.Append("ccess.Customer]),[Karenbic.DataAccess.CustomerMessage_Sender],CustomerMessage_Se");
            viewString.Append("nder_Source,CustomerMessage_Sender_Target) \r\n        END\r\n    FROM (\r\n        SE");
            viewString.Append("LECT T1.Message_Id, T1.Message_Title, T1.Message_Text, T1.Message_SendDate, T2.[");
            viewString.Append("AdminMessage_Admin.IsCustomerGroupFilter], T2.[AdminMessage_Admin.IsCustomerFilt");
            viewString.Append("er], T2.[AdminMessage_Admin.IsShowAdmin], T3.[AdminMessage_Customer.IsRead], T4.");
            viewString.Append("CustomerMessage_IsShowAdmin, T4.CustomerMessage_IsShowCustomer, T4.CustomerMessa");
            viewString.Append("ge_IsReadAdmin, T4.CustomerMessage_IsReadCustomer, T4.CustomerMessage_IsAdminRep");
            viewString.Append("ly, T4.CustomerMessage_AdminReply, (T4._from0 AND T4._from0 IS NOT NULL) AS _fro");
            viewString.Append("m0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, T1._from2, (T3._from3 AND T");
            viewString.Append("3._from3 IS NOT NULL) AS _from3, T3.[AdminMessage_Customer_Customer.AdminMessage");
            viewString.Append("_Customer_Customer_Target.Id], T3.[AdminMessage_Admin_AdminMessages_Customer.Adm");
            viewString.Append("inMessage_Admin_AdminMessages_Customer_Source.Id], T4.[CustomerMessage_Sender.Cu");
            viewString.Append("stomerMessage_Sender_Target.Id]\r\n        FROM  (\r\n            SELECT \r\n         ");
            viewString.Append("       T.Id AS Message_Id, \r\n                T.Title AS Message_Title, \r\n       ");
            viewString.Append("         T.Text AS Message_Text, \r\n                T.SendDate AS Message_SendDat");
            viewString.Append("e, \r\n                True AS _from2\r\n            FROM CodeFirstDatabase.Message ");
            viewString.Append("AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n               ");
            viewString.Append(" T.Id AS Message_Id, \r\n                T.IsCustomerGroupFilter AS [AdminMessage_");
            viewString.Append("Admin.IsCustomerGroupFilter], \r\n                T.IsCustomerFilter AS [AdminMess");
            viewString.Append("age_Admin.IsCustomerFilter], \r\n                T.IsShowAdmin AS [AdminMessage_Ad");
            viewString.Append("min.IsShowAdmin], \r\n                True AS _from1\r\n            FROM CodeFirstDa");
            viewString.Append("tabase.tbl_AdminMessage_Admin AS T) AS T2\r\n            ON T1.Message_Id = T2.Mes");
            viewString.Append("sage_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.I");
            viewString.Append("d AS Message_Id, \r\n                T.IsRead AS [AdminMessage_Customer.IsRead], \r");
            viewString.Append("\n                True AS _from3, \r\n                T.Customer_Id AS [AdminMessag");
            viewString.Append("e_Customer_Customer.AdminMessage_Customer_Customer_Target.Id], \r\n               ");
            viewString.Append(" T.AdminMessage_Admin_Id AS [AdminMessage_Admin_AdminMessages_Customer.AdminMess");
            viewString.Append("age_Admin_AdminMessages_Customer_Source.Id]\r\n            FROM CodeFirstDatabase.");
            viewString.Append("tbl_AdminMessage_Customer AS T) AS T3\r\n            ON T1.Message_Id = T3.Message");
            viewString.Append("_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS");
            viewString.Append(" Message_Id, \r\n                T.IsShowAdmin AS CustomerMessage_IsShowAdmin, \r\n ");
            viewString.Append("               T.IsShowCustomer AS CustomerMessage_IsShowCustomer, \r\n           ");
            viewString.Append("     T.IsReadAdmin AS CustomerMessage_IsReadAdmin, \r\n                T.IsReadCus");
            viewString.Append("tomer AS CustomerMessage_IsReadCustomer, \r\n                T.IsAdminReply AS Cus");
            viewString.Append("tomerMessage_IsAdminReply, \r\n                T.AdminReply AS CustomerMessage_Adm");
            viewString.Append("inReply, \r\n                True AS _from0, \r\n                T.Sender_Id AS [Cus");
            viewString.Append("tomerMessage_Sender.CustomerMessage_Sender_Target.Id]\r\n            FROM CodeFirs");
            viewString.Append("tDatabase.tbl_CustomerMessage AS T) AS T4\r\n            ON T1.Message_Id = T4.Mes");
            viewString.Append("sage_Id\r\n    ) AS T5");
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Messages", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Context.Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Customers", "\r\n    SELECT VALUE -- Constructing Customers\r\n        [Karenbic.DataAccess.Custom" +
                    "er](T1.Customer_Id, T1.Customer_Name, T1.Customer_Surname, T1.Customer_Username," +
                    " T1.Customer_Gender, T1.Customer_RegisterDate, T1.Customer_Phone, T1.Customer_Mo" +
                    "bile, T1.Customer_Email, T1.Customer_Address) WITH \r\n        RELATIONSHIP(CREATE" +
                    "REF(Context.Cities, ROW(T1.[City_Customers.City_Customers_Source.Id]),[Karenbic." +
                    "DataAccess.City]),[Karenbic.DataAccess.City_Customers],City_Customers_Target,Cit" +
                    "y_Customers_Source) \r\n        RELATIONSHIP(CREATEREF(Context.CustomerGroups, ROW" +
                    "(T1.[CustomerGroup_Customers.CustomerGroup_Customers_Source.Id]),[Karenbic.DataA" +
                    "ccess.CustomerGroup]),[Karenbic.DataAccess.CustomerGroup_Customers],CustomerGrou" +
                    "p_Customers_Target,CustomerGroup_Customers_Source) \r\n    FROM (\r\n        SELECT " +
                    "\r\n            T.Id AS Customer_Id, \r\n            T.Name AS Customer_Name, \r\n    " +
                    "        T.Surname AS Customer_Surname, \r\n            T.Username AS Customer_User" +
                    "name, \r\n            CAST(T.Gender AS [Karenbic.DataAccess.Gender]) AS Customer_G" +
                    "ender, \r\n            T.RegisterDate AS Customer_RegisterDate, \r\n            T.Ph" +
                    "one AS Customer_Phone, \r\n            T.Mobile AS Customer_Mobile, \r\n            " +
                    "T.Email AS Customer_Email, \r\n            T.Address AS Customer_Address, \r\n      " +
                    "      True AS _from0, \r\n            T.City_Id AS [City_Customers.City_Customers_" +
                    "Source.Id], \r\n            T.Group_Id AS [CustomerGroup_Customers.CustomerGroup_C" +
                    "ustomers_Source.Id]\r\n        FROM CodeFirstDatabase.Customer AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.Cities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Cities", @"
    SELECT VALUE -- Constructing Cities
        [Karenbic.DataAccess.City](T1.City_Id, T1.City_Name) WITH 
        RELATIONSHIP(CREATEREF(Context.Province, ROW(T1.[City_Province.City_Province_Target.Id]),[Karenbic.DataAccess.Province]),[Karenbic.DataAccess.City_Province],City_Province_Source,City_Province_Target) 
    FROM (
        SELECT 
            T.Id AS City_Id, 
            T.Name AS City_Name, 
            True AS _from0, 
            T.Province_Id AS [City_Province.City_Province_Target.Id]
        FROM CodeFirstDatabase.City AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.Province
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Province", @"
    SELECT VALUE -- Constructing Province
        [Karenbic.DataAccess.Province](T1.Province_Id, T1.Province_Name)
    FROM (
        SELECT 
            T.Id AS Province_Id, 
            T.Name AS Province_Name, 
            True AS _from0
        FROM CodeFirstDatabase.Province AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.CustomerGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.CustomerGroups", @"
    SELECT VALUE -- Constructing CustomerGroups
        [Karenbic.DataAccess.CustomerGroup](T1.CustomerGroup_Id, T1.CustomerGroup_Title)
    FROM (
        SELECT 
            T.Id AS CustomerGroup_Id, 
            T.Title AS CustomerGroup_Title, 
            True AS _from0
        FROM CodeFirstDatabase.CustomerGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4774);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Orders\r\n        CASE\r\n            WHEN (NOT(T");
            viewString.Append("4._from0) AND NOT(T4._from2)) THEN [Karenbic.DataAccess.Order](T4.Order_Id, T4.O");
            viewString.Append("rder_RegisterDate, T4.Order_IsConfirm, T4.Order_ConfirmDate, T4.Order_IsCanceled");
            viewString.Append(", T4.Order_CancelDate) WITH \r\n                RELATIONSHIP(CREATEREF(Context.For");
            viewString.Append("ms, ROW(T4.[Form_Orders.Form_Orders_Source.Id]),[Karenbic.DataAccess.Form]),[Kar");
            viewString.Append("enbic.DataAccess.Form_Orders],Form_Orders_Target,Form_Orders_Source) \r\n         ");
            viewString.Append("       RELATIONSHIP(CREATEREF(Context.Customers, ROW(T4.[Customer_Orders.Custome");
            viewString.Append("r_Orders_Source.Id]),[Karenbic.DataAccess.Customer]),[Karenbic.DataAccess.Custom");
            viewString.Append("er_Orders],Customer_Orders_Target,Customer_Orders_Source) \r\n            WHEN T4.");
            viewString.Append("_from0 THEN [Karenbic.DataAccess.DesignOrder](T4.Order_Id, T4.Order_RegisterDate");
            viewString.Append(", T4.Order_IsConfirm, T4.Order_ConfirmDate, T4.Order_IsCanceled, T4.Order_Cancel");
            viewString.Append("Date, T4.DesignOrder_LastChange, T4.DesignOrder_Price, T4.DesignOrder_SpecialCre");
            viewString.Append("ativity, T4.DesignOrder_Prepayment, T4.DesignOrder_IsPaidPrepayment, T4.DesignOr");
            viewString.Append("der_IsPaidFinal, T4.DesignOrder_IsPreAcceptDesign, T4.DesignOrder_IsAcceptDesign");
            viewString.Append(") WITH \r\n                RELATIONSHIP(CREATEREF(Context.Forms, ROW(T4.[Form_Orde");
            viewString.Append("rs.Form_Orders_Source.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.Form");
            viewString.Append("_Orders],Form_Orders_Target,Form_Orders_Source) \r\n                RELATIONSHIP(C");
            viewString.Append("REATEREF(Context.Customers, ROW(T4.[Customer_Orders.Customer_Orders_Source.Id]),");
            viewString.Append("[Karenbic.DataAccess.Customer]),[Karenbic.DataAccess.Customer_Orders],Customer_O");
            viewString.Append("rders_Target,Customer_Orders_Source) \r\n            ELSE [Karenbic.DataAccess.Pri");
            viewString.Append("ntOrder](T4.Order_Id, T4.Order_RegisterDate, T4.Order_IsConfirm, T4.Order_Confir");
            viewString.Append("mDate, T4.Order_IsCanceled, T4.Order_CancelDate, T4.PrintOrder_PrintPrice, T4.Pr");
            viewString.Append("intOrder_PackingPrice, T4.PrintOrder_IsPaid, T4.PrintOrder_OrderState) WITH \r\n  ");
            viewString.Append("              RELATIONSHIP(CREATEREF(Context.Forms, ROW(T4.[Form_Orders.Form_Ord");
            viewString.Append("ers_Source.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.Form_Orders],Fo");
            viewString.Append("rm_Orders_Target,Form_Orders_Source) \r\n                RELATIONSHIP(CREATEREF(Co");
            viewString.Append("ntext.Customers, ROW(T4.[Customer_Orders.Customer_Orders_Source.Id]),[Karenbic.D");
            viewString.Append("ataAccess.Customer]),[Karenbic.DataAccess.Customer_Orders],Customer_Orders_Targe");
            viewString.Append("t,Customer_Orders_Source) \r\n        END\r\n    FROM (\r\n        SELECT T1.Order_Id,");
            viewString.Append(" T1.Order_RegisterDate, T1.Order_IsConfirm, T1.Order_ConfirmDate, T1.Order_IsCan");
            viewString.Append("celed, T1.Order_CancelDate, T2.DesignOrder_LastChange, T2.DesignOrder_Price, T2.");
            viewString.Append("DesignOrder_SpecialCreativity, T2.DesignOrder_Prepayment, T2.DesignOrder_IsPaidP");
            viewString.Append("repayment, T2.DesignOrder_IsPaidFinal, T2.DesignOrder_IsPreAcceptDesign, T2.Desi");
            viewString.Append("gnOrder_IsAcceptDesign, T3.PrintOrder_PrintPrice, T3.PrintOrder_PackingPrice, T3");
            viewString.Append(".PrintOrder_IsPaid, T3.PrintOrder_OrderState, (T2._from0 AND T2._from0 IS NOT NU");
            viewString.Append("LL) AS _from0, T1._from1, (T3._from2 AND T3._from2 IS NOT NULL) AS _from2, T1.[F");
            viewString.Append("orm_Orders.Form_Orders_Source.Id], T1.[Customer_Orders.Customer_Orders_Source.Id");
            viewString.Append("]\r\n        FROM  (\r\n            SELECT \r\n                T.Id AS Order_Id, \r\n   ");
            viewString.Append("             T.RegisterDate AS Order_RegisterDate, \r\n                T.IsConfirm");
            viewString.Append(" AS Order_IsConfirm, \r\n                T.ConfirmDate AS Order_ConfirmDate, \r\n   ");
            viewString.Append("             T.IsCanceled AS Order_IsCanceled, \r\n                T.CancelDate AS");
            viewString.Append(" Order_CancelDate, \r\n                True AS _from1, \r\n                T.Form_Id");
            viewString.Append(" AS [Form_Orders.Form_Orders_Source.Id], \r\n                T.Customer_Id AS [Cus");
            viewString.Append("tomer_Orders.Customer_Orders_Source.Id]\r\n            FROM CodeFirstDatabase.[Ord");
            viewString.Append("er] AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n           ");
            viewString.Append("     T.Id AS Order_Id, \r\n                T.LastChange AS DesignOrder_LastChange,");
            viewString.Append(" \r\n                T.Price AS DesignOrder_Price, \r\n                T.SpecialCrea");
            viewString.Append("tivity AS DesignOrder_SpecialCreativity, \r\n                T.Prepayment AS Desig");
            viewString.Append("nOrder_Prepayment, \r\n                T.IsPaidPrepayment AS DesignOrder_IsPaidPre");
            viewString.Append("payment, \r\n                T.IsPaidFinal AS DesignOrder_IsPaidFinal, \r\n         ");
            viewString.Append("       T.IsPreAcceptDesign AS DesignOrder_IsPreAcceptDesign, \r\n                T");
            viewString.Append(".IsAcceptDesign AS DesignOrder_IsAcceptDesign, \r\n                True AS _from0\r");
            viewString.Append("\n            FROM CodeFirstDatabase.tbl_DesignOrder AS T) AS T2\r\n            ON ");
            viewString.Append("T1.Order_Id = T2.Order_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n ");
            viewString.Append("               T.Id AS Order_Id, \r\n                T.PrintPrice AS PrintOrder_Pr");
            viewString.Append("intPrice, \r\n                T.PackingPrice AS PrintOrder_PackingPrice, \r\n       ");
            viewString.Append("         T.IsPaid AS PrintOrder_IsPaid, \r\n                CAST(T.OrderState AS [");
            viewString.Append("Karenbic.DataAccess.PrintOrderState]) AS PrintOrder_OrderState, \r\n              ");
            viewString.Append("  True AS _from2\r\n            FROM CodeFirstDatabase.tbl_PrintOrder AS T) AS T3\r");
            viewString.Append("\n            ON T1.Order_Id = T3.Order_Id\r\n    ) AS T4");
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Orders", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Context.Forms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Forms", @"
    SELECT VALUE -- Constructing Forms
        [Karenbic.DataAccess.Form](T1.Form_Id, T1.Form_Portal, T1.Form_Title, T1.Form_Priority, T1.Form_SpecialCreativity, T1.Form_IsShow, T1.Form_Description, T1.Form_CanDelete) WITH 
        RELATIONSHIP(CREATEREF(Context.FormGroups, ROW(T1.[FormGroup_Forms.FormGroup_Forms_Source.Id]),[Karenbic.DataAccess.FormGroup]),[Karenbic.DataAccess.FormGroup_Forms],FormGroup_Forms_Target,FormGroup_Forms_Source) 
    FROM (
        SELECT 
            T.Id AS Form_Id, 
            CAST(T.Portal AS [Karenbic.DataAccess.Portal]) AS Form_Portal, 
            T.Title AS Form_Title, 
            T.Priority AS Form_Priority, 
            T.SpecialCreativity AS Form_SpecialCreativity, 
            T.IsShow AS Form_IsShow, 
            T.Description AS Form_Description, 
            T.CanDelete AS Form_CanDelete, 
            True AS _from0, 
            T.Group_Id AS [FormGroup_Forms.FormGroup_Forms_Source.Id]
        FROM CodeFirstDatabase.Form AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FormFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(28154);
            viewString.Append("\r\n    SELECT VALUE -- Constructing FormFields\r\n        CASE\r\n            WHEN (N");
            viewString.Append("OT(T13._from0) AND NOT(T13._from1) AND NOT(T13._from2) AND NOT(T13._from4) AND N");
            viewString.Append("OT(T13._from5) AND NOT(T13._from6) AND NOT(T13._from7) AND NOT(T13._from8) AND N");
            viewString.Append("OT(T13._from9) AND NOT(T13._from10) AND NOT(T13._from11)) THEN [Karenbic.DataAcc");
            viewString.Append("ess.FormField](T13.FormField_Id, T13.FormField_Title, T13.FormField_ShowCustomer");
            viewString.Append(", T13.FormField_ShowAdmin, T13.FormField_Description, T13.FormField_PictureHelpF");
            viewString.Append("ile, T13.FormField_CanDelete) WITH \r\n                RELATIONSHIP(CREATEREF(Cont");
            viewString.Append("ext.FormField_Position_Desktop, ROW(T13.[FormField_DesktopPosition.FormField_Des");
            viewString.Append("ktopPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Desktop]),[Kare");
            viewString.Append("nbic.DataAccess.FormField_DesktopPosition],FormField_DesktopPosition_Source,Form");
            viewString.Append("Field_DesktopPosition_Target) \r\n                RELATIONSHIP(CREATEREF(Context.F");
            viewString.Append("orms, ROW(T13.[FormField_Form.FormField_Form_Target.Id]),[Karenbic.DataAccess.Fo");
            viewString.Append("rm]),[Karenbic.DataAccess.FormField_Form],FormField_Form_Source,FormField_Form_T");
            viewString.Append("arget) \r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Mobil");
            viewString.Append("e, ROW(T13.[FormField_MobilePosition.FormField_MobilePosition_Target.Id]),[Karen");
            viewString.Append("bic.DataAccess.FormField_Position_Mobile]),[Karenbic.DataAccess.FormField_Mobile");
            viewString.Append("Position],FormField_MobilePosition_Source,FormField_MobilePosition_Target) \r\n   ");
            viewString.Append("             RELATIONSHIP(CREATEREF(Context.FormField_Position_Tablet, ROW(T13.[");
            viewString.Append("FormField_TabletPosition.FormField_TabletPosition_Target.Id]),[Karenbic.DataAcce");
            viewString.Append("ss.FormField_Position_Tablet]),[Karenbic.DataAccess.FormField_TabletPosition],Fo");
            viewString.Append("rmField_TabletPosition_Source,FormField_TabletPosition_Target) \r\n            WHE");
            viewString.Append("N T13._from8 THEN [Karenbic.DataAccess.FormField_CheckBoxGroup](T13.FormField_Id");
            viewString.Append(", T13.FormField_Title, T13.FormField_ShowCustomer, T13.FormField_ShowAdmin, T13.");
            viewString.Append("FormField_Description, T13.FormField_PictureHelpFile, T13.FormField_CanDelete, T");
            viewString.Append("13.[FormField_CheckBoxGroup.ShowInFactor], T13.[FormField_CheckBoxGroup.FactorOr");
            viewString.Append("der]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_D");
            viewString.Append("esktop, ROW(T13.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id])");
            viewString.Append(",[Karenbic.DataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess.FormFiel");
            viewString.Append("d_DesktopPosition],FormField_DesktopPosition_Source,FormField_DesktopPosition_Ta");
            viewString.Append("rget) \r\n                RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[FormField");
            viewString.Append("_Form.FormField_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAcces");
            viewString.Append("s.FormField_Form],FormField_Form_Source,FormField_Form_Target) \r\n               ");
            viewString.Append(" RELATIONSHIP(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[FormField_Mo");
            viewString.Append("bilePosition.FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.FormField");
            viewString.Append("_Position_Mobile]),[Karenbic.DataAccess.FormField_MobilePosition],FormField_Mobi");
            viewString.Append("lePosition_Source,FormField_MobilePosition_Target) \r\n                RELATIONSHI");
            viewString.Append("P(CREATEREF(Context.FormField_Position_Tablet, ROW(T13.[FormField_TabletPosition");
            viewString.Append(".FormField_TabletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Ta");
            viewString.Append("blet]),[Karenbic.DataAccess.FormField_TabletPosition],FormField_TabletPosition_S");
            viewString.Append("ource,FormField_TabletPosition_Target) \r\n            WHEN T13._from6 THEN [Karen");
            viewString.Append("bic.DataAccess.FormField_DropDown](T13.FormField_Id, T13.FormField_Title, T13.Fo");
            viewString.Append("rmField_ShowCustomer, T13.FormField_ShowAdmin, T13.FormField_Description, T13.Fo");
            viewString.Append("rmField_PictureHelpFile, T13.FormField_CanDelete, T13.[FormField_DropDown.IsRequ");
            viewString.Append("ired], T13.[FormField_DropDown.ShowInFactor], T13.[FormField_DropDown.FactorOrde");
            viewString.Append("r]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Des");
            viewString.Append("ktop, ROW(T13.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id]),[");
            viewString.Append("Karenbic.DataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess.FormField_");
            viewString.Append("DesktopPosition],FormField_DesktopPosition_Source,FormField_DesktopPosition_Targ");
            viewString.Append("et) \r\n                RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[FormField_F");
            viewString.Append("orm.FormField_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.");
            viewString.Append("FormField_Form],FormField_Form_Source,FormField_Form_Target) \r\n                R");
            viewString.Append("ELATIONSHIP(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[FormField_Mobi");
            viewString.Append("lePosition.FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.FormField_P");
            viewString.Append("osition_Mobile]),[Karenbic.DataAccess.FormField_MobilePosition],FormField_Mobile");
            viewString.Append("Position_Source,FormField_MobilePosition_Target) \r\n                RELATIONSHIP(");
            viewString.Append("CREATEREF(Context.FormField_Position_Tablet, ROW(T13.[FormField_TabletPosition.F");
            viewString.Append("ormField_TabletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Tabl");
            viewString.Append("et]),[Karenbic.DataAccess.FormField_TabletPosition],FormField_TabletPosition_Sou");
            viewString.Append("rce,FormField_TabletPosition_Target) \r\n            WHEN T13._from7 THEN [Karenbi");
            viewString.Append("c.DataAccess.FormField_RadioButtonGroup](T13.FormField_Id, T13.FormField_Title, ");
            viewString.Append("T13.FormField_ShowCustomer, T13.FormField_ShowAdmin, T13.FormField_Description, ");
            viewString.Append("T13.FormField_PictureHelpFile, T13.FormField_CanDelete, T13.[FormField_RadioButt");
            viewString.Append("onGroup.IsRequired], T13.[FormField_RadioButtonGroup.ShowInFactor], T13.[FormFie");
            viewString.Append("ld_RadioButtonGroup.FactorOrder]) WITH \r\n                RELATIONSHIP(CREATEREF(");
            viewString.Append("Context.FormField_Position_Desktop, ROW(T13.[FormField_DesktopPosition.FormField");
            viewString.Append("_DesktopPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Desktop]),[");
            viewString.Append("Karenbic.DataAccess.FormField_DesktopPosition],FormField_DesktopPosition_Source,");
            viewString.Append("FormField_DesktopPosition_Target) \r\n                RELATIONSHIP(CREATEREF(Conte");
            viewString.Append("xt.Forms, ROW(T13.[FormField_Form.FormField_Form_Target.Id]),[Karenbic.DataAcces");
            viewString.Append("s.Form]),[Karenbic.DataAccess.FormField_Form],FormField_Form_Source,FormField_Fo");
            viewString.Append("rm_Target) \r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_M");
            viewString.Append("obile, ROW(T13.[FormField_MobilePosition.FormField_MobilePosition_Target.Id]),[K");
            viewString.Append("arenbic.DataAccess.FormField_Position_Mobile]),[Karenbic.DataAccess.FormField_Mo");
            viewString.Append("bilePosition],FormField_MobilePosition_Source,FormField_MobilePosition_Target) \r");
            viewString.Append("\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Tablet, ROW(T");
            viewString.Append("13.[FormField_TabletPosition.FormField_TabletPosition_Target.Id]),[Karenbic.Data");
            viewString.Append("Access.FormField_Position_Tablet]),[Karenbic.DataAccess.FormField_TabletPosition");
            viewString.Append("],FormField_TabletPosition_Source,FormField_TabletPosition_Target) \r\n           ");
            viewString.Append(" WHEN T13._from9 THEN [Karenbic.DataAccess.FormField_CheckBox](T13.FormField_Id,");
            viewString.Append(" T13.FormField_Title, T13.FormField_ShowCustomer, T13.FormField_ShowAdmin, T13.F");
            viewString.Append("ormField_Description, T13.FormField_PictureHelpFile, T13.FormField_CanDelete, T1");
            viewString.Append("3.[FormField_CheckBox.ShowInFactor], T13.[FormField_CheckBox.FactorOrder]) WITH ");
            viewString.Append("\r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Desktop, ROW");
            viewString.Append("(T13.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id]),[Karenbic.");
            viewString.Append("DataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess.FormField_DesktopPo");
            viewString.Append("sition],FormField_DesktopPosition_Source,FormField_DesktopPosition_Target) \r\n   ");
            viewString.Append("             RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[FormField_Form.FormF");
            viewString.Append("ield_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.FormField");
            viewString.Append("_Form],FormField_Form_Source,FormField_Form_Target) \r\n                RELATIONSH");
            viewString.Append("IP(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[FormField_MobilePositio");
            viewString.Append("n.FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_M");
            viewString.Append("obile]),[Karenbic.DataAccess.FormField_MobilePosition],FormField_MobilePosition_");
            viewString.Append("Source,FormField_MobilePosition_Target) \r\n                RELATIONSHIP(CREATEREF");
            viewString.Append("(Context.FormField_Position_Tablet, ROW(T13.[FormField_TabletPosition.FormField_");
            viewString.Append("TabletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Tablet]),[Kar");
            viewString.Append("enbic.DataAccess.FormField_TabletPosition],FormField_TabletPosition_Source,FormF");
            viewString.Append("ield_TabletPosition_Target) \r\n            WHEN T13._from10 THEN [Karenbic.DataAc");
            viewString.Append("cess.FormField_ColorPicker](T13.FormField_Id, T13.FormField_Title, T13.FormField");
            viewString.Append("_ShowCustomer, T13.FormField_ShowAdmin, T13.FormField_Description, T13.FormField");
            viewString.Append("_PictureHelpFile, T13.FormField_CanDelete, T13.[FormField_ColorPicker.IsRequired");
            viewString.Append("]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Desk");
            viewString.Append("top, ROW(T13.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id]),[K");
            viewString.Append("arenbic.DataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess.FormField_D");
            viewString.Append("esktopPosition],FormField_DesktopPosition_Source,FormField_DesktopPosition_Targe");
            viewString.Append("t) \r\n                RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[FormField_Fo");
            viewString.Append("rm.FormField_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.F");
            viewString.Append("ormField_Form],FormField_Form_Source,FormField_Form_Target) \r\n                RE");
            viewString.Append("LATIONSHIP(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[FormField_Mobil");
            viewString.Append("ePosition.FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.FormField_Po");
            viewString.Append("sition_Mobile]),[Karenbic.DataAccess.FormField_MobilePosition],FormField_MobileP");
            viewString.Append("osition_Source,FormField_MobilePosition_Target) \r\n                RELATIONSHIP(C");
            viewString.Append("REATEREF(Context.FormField_Position_Tablet, ROW(T13.[FormField_TabletPosition.Fo");
            viewString.Append("rmField_TabletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Table");
            viewString.Append("t]),[Karenbic.DataAccess.FormField_TabletPosition],FormField_TabletPosition_Sour");
            viewString.Append("ce,FormField_TabletPosition_Target) \r\n            WHEN T13._from4 THEN [Karenbic");
            viewString.Append(".DataAccess.FormField_DatePicker](T13.FormField_Id, T13.FormField_Title, T13.For");
            viewString.Append("mField_ShowCustomer, T13.FormField_ShowAdmin, T13.FormField_Description, T13.For");
            viewString.Append("mField_PictureHelpFile, T13.FormField_CanDelete, T13.[FormField_DatePicker.IsReq");
            viewString.Append("uired], T13.[FormField_DatePicker.Limits], T13.[FormField_DatePicker.Min], T13.[");
            viewString.Append("FormField_DatePicker.Max], T13.[FormField_DatePicker.ShowInFactor], T13.[FormFie");
            viewString.Append("ld_DatePicker.FactorOrder]) WITH \r\n                RELATIONSHIP(CREATEREF(Contex");
            viewString.Append("t.FormField_Position_Desktop, ROW(T13.[FormField_DesktopPosition.FormField_Deskt");
            viewString.Append("opPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Desktop]),[Karenb");
            viewString.Append("ic.DataAccess.FormField_DesktopPosition],FormField_DesktopPosition_Source,FormFi");
            viewString.Append("eld_DesktopPosition_Target) \r\n                RELATIONSHIP(CREATEREF(Context.For");
            viewString.Append("ms, ROW(T13.[FormField_Form.FormField_Form_Target.Id]),[Karenbic.DataAccess.Form");
            viewString.Append("]),[Karenbic.DataAccess.FormField_Form],FormField_Form_Source,FormField_Form_Tar");
            viewString.Append("get) \r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Mobile,");
            viewString.Append(" ROW(T13.[FormField_MobilePosition.FormField_MobilePosition_Target.Id]),[Karenbi");
            viewString.Append("c.DataAccess.FormField_Position_Mobile]),[Karenbic.DataAccess.FormField_MobilePo");
            viewString.Append("sition],FormField_MobilePosition_Source,FormField_MobilePosition_Target) \r\n     ");
            viewString.Append("           RELATIONSHIP(CREATEREF(Context.FormField_Position_Tablet, ROW(T13.[Fo");
            viewString.Append("rmField_TabletPosition.FormField_TabletPosition_Target.Id]),[Karenbic.DataAccess");
            viewString.Append(".FormField_Position_Tablet]),[Karenbic.DataAccess.FormField_TabletPosition],Form");
            viewString.Append("Field_TabletPosition_Source,FormField_TabletPosition_Target) \r\n            WHEN ");
            viewString.Append("T13._from5 THEN [Karenbic.DataAccess.FormField_FileUploader](T13.FormField_Id, T");
            viewString.Append("13.FormField_Title, T13.FormField_ShowCustomer, T13.FormField_ShowAdmin, T13.For");
            viewString.Append("mField_Description, T13.FormField_PictureHelpFile, T13.FormField_CanDelete, T13.");
            viewString.Append("[FormField_FileUploader.IsRequired], T13.[FormField_FileUploader.SizeLimits], T1");
            viewString.Append("3.[FormField_FileUploader.MinSize], T13.[FormField_FileUploader.MaxSize]) WITH \r");
            viewString.Append("\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Desktop, ROW(");
            viewString.Append("T13.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id]),[Karenbic.D");
            viewString.Append("ataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess.FormField_DesktopPos");
            viewString.Append("ition],FormField_DesktopPosition_Source,FormField_DesktopPosition_Target) \r\n    ");
            viewString.Append("            RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[FormField_Form.FormFi");
            viewString.Append("eld_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.FormField_");
            viewString.Append("Form],FormField_Form_Source,FormField_Form_Target) \r\n                RELATIONSHI");
            viewString.Append("P(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[FormField_MobilePosition");
            viewString.Append(".FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Mo");
            viewString.Append("bile]),[Karenbic.DataAccess.FormField_MobilePosition],FormField_MobilePosition_S");
            viewString.Append("ource,FormField_MobilePosition_Target) \r\n                RELATIONSHIP(CREATEREF(");
            viewString.Append("Context.FormField_Position_Tablet, ROW(T13.[FormField_TabletPosition.FormField_T");
            viewString.Append("abletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Tablet]),[Kare");
            viewString.Append("nbic.DataAccess.FormField_TabletPosition],FormField_TabletPosition_Source,FormFi");
            viewString.Append("eld_TabletPosition_Target) \r\n            WHEN T13._from0 THEN [Karenbic.DataAcce");
            viewString.Append("ss.FormField_Numeric](T13.FormField_Id, T13.FormField_Title, T13.FormField_ShowC");
            viewString.Append("ustomer, T13.FormField_ShowAdmin, T13.FormField_Description, T13.FormField_Pictu");
            viewString.Append("reHelpFile, T13.FormField_CanDelete, T13.[FormField_Numeric.IsInt], T13.[FormFie");
            viewString.Append("ld_Numeric.IsFloat], T13.[FormField_Numeric.Defualt], T13.[FormField_Numeric.IsR");
            viewString.Append("equired], T13.[FormField_Numeric.Limits], T13.[FormField_Numeric.Min], T13.[Form");
            viewString.Append("Field_Numeric.Max], T13.[FormField_Numeric.ShowInFactor], T13.[FormField_Numeric");
            viewString.Append(".FactorOrder]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.FormField_P");
            viewString.Append("osition_Desktop, ROW(T13.[FormField_DesktopPosition.FormField_DesktopPosition_Ta");
            viewString.Append("rget.Id]),[Karenbic.DataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess");
            viewString.Append(".FormField_DesktopPosition],FormField_DesktopPosition_Source,FormField_DesktopPo");
            viewString.Append("sition_Target) \r\n                RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[");
            viewString.Append("FormField_Form.FormField_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.");
            viewString.Append("DataAccess.FormField_Form],FormField_Form_Source,FormField_Form_Target) \r\n      ");
            viewString.Append("          RELATIONSHIP(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[For");
            viewString.Append("mField_MobilePosition.FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.");
            viewString.Append("FormField_Position_Mobile]),[Karenbic.DataAccess.FormField_MobilePosition],FormF");
            viewString.Append("ield_MobilePosition_Source,FormField_MobilePosition_Target) \r\n                RE");
            viewString.Append("LATIONSHIP(CREATEREF(Context.FormField_Position_Tablet, ROW(T13.[FormField_Table");
            viewString.Append("tPosition.FormField_TabletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Po");
            viewString.Append("sition_Tablet]),[Karenbic.DataAccess.FormField_TabletPosition],FormField_TabletP");
            viewString.Append("osition_Source,FormField_TabletPosition_Target) \r\n            WHEN T13._from1 TH");
            viewString.Append("EN [Karenbic.DataAccess.FormField_TextArea](T13.FormField_Id, T13.FormField_Titl");
            viewString.Append("e, T13.FormField_ShowCustomer, T13.FormField_ShowAdmin, T13.FormField_Descriptio");
            viewString.Append("n, T13.FormField_PictureHelpFile, T13.FormField_CanDelete, T13.[FormField_TextAr");
            viewString.Append("ea.IsRequired], T13.[FormField_TextArea.CharacterLimits], T13.[FormField_TextAre");
            viewString.Append("a.MinCharacters], T13.[FormField_TextArea.MaxCharacters], T13.[FormField_TextAre");
            viewString.Append("a.ShowInFactor], T13.[FormField_TextArea.FactorOrder], T13.[FormField_TextArea.H");
            viewString.Append("eight]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.FormField_Position");
            viewString.Append("_Desktop, ROW(T13.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id");
            viewString.Append("]),[Karenbic.DataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess.FormFi");
            viewString.Append("eld_DesktopPosition],FormField_DesktopPosition_Source,FormField_DesktopPosition_");
            viewString.Append("Target) \r\n                RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[FormFie");
            viewString.Append("ld_Form.FormField_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAcc");
            viewString.Append("ess.FormField_Form],FormField_Form_Source,FormField_Form_Target) \r\n             ");
            viewString.Append("   RELATIONSHIP(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[FormField_");
            viewString.Append("MobilePosition.FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.FormFie");
            viewString.Append("ld_Position_Mobile]),[Karenbic.DataAccess.FormField_MobilePosition],FormField_Mo");
            viewString.Append("bilePosition_Source,FormField_MobilePosition_Target) \r\n                RELATIONS");
            viewString.Append("HIP(CREATEREF(Context.FormField_Position_Tablet, ROW(T13.[FormField_TabletPositi");
            viewString.Append("on.FormField_TabletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_");
            viewString.Append("Tablet]),[Karenbic.DataAccess.FormField_TabletPosition],FormField_TabletPosition");
            viewString.Append("_Source,FormField_TabletPosition_Target) \r\n            WHEN T13._from2 THEN [Kar");
            viewString.Append("enbic.DataAccess.FormField_TextBox](T13.FormField_Id, T13.FormField_Title, T13.F");
            viewString.Append("ormField_ShowCustomer, T13.FormField_ShowAdmin, T13.FormField_Description, T13.F");
            viewString.Append("ormField_PictureHelpFile, T13.FormField_CanDelete, T13.[FormField_TextBox.Defual");
            viewString.Append("t], T13.[FormField_TextBox.IsRequired], T13.[FormField_TextBox.CharacterLimits],");
            viewString.Append(" T13.[FormField_TextBox.MinCharacters], T13.[FormField_TextBox.MaxCharacters], T");
            viewString.Append("13.[FormField_TextBox.ShowInFactor], T13.[FormField_TextBox.FactorOrder]) WITH \r");
            viewString.Append("\n                RELATIONSHIP(CREATEREF(Context.FormField_Position_Desktop, ROW(");
            viewString.Append("T13.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id]),[Karenbic.D");
            viewString.Append("ataAccess.FormField_Position_Desktop]),[Karenbic.DataAccess.FormField_DesktopPos");
            viewString.Append("ition],FormField_DesktopPosition_Source,FormField_DesktopPosition_Target) \r\n    ");
            viewString.Append("            RELATIONSHIP(CREATEREF(Context.Forms, ROW(T13.[FormField_Form.FormFi");
            viewString.Append("eld_Form_Target.Id]),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.FormField_");
            viewString.Append("Form],FormField_Form_Source,FormField_Form_Target) \r\n                RELATIONSHI");
            viewString.Append("P(CREATEREF(Context.FormField_Position_Mobile, ROW(T13.[FormField_MobilePosition");
            viewString.Append(".FormField_MobilePosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Mo");
            viewString.Append("bile]),[Karenbic.DataAccess.FormField_MobilePosition],FormField_MobilePosition_S");
            viewString.Append("ource,FormField_MobilePosition_Target) \r\n                RELATIONSHIP(CREATEREF(");
            viewString.Append("Context.FormField_Position_Tablet, ROW(T13.[FormField_TabletPosition.FormField_T");
            viewString.Append("abletPosition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Tablet]),[Kare");
            viewString.Append("nbic.DataAccess.FormField_TabletPosition],FormField_TabletPosition_Source,FormFi");
            viewString.Append("eld_TabletPosition_Target) \r\n            ELSE [Karenbic.DataAccess.FormField_Web");
            viewString.Append("Url](T13.FormField_Id, T13.FormField_Title, T13.FormField_ShowCustomer, T13.Form");
            viewString.Append("Field_ShowAdmin, T13.FormField_Description, T13.FormField_PictureHelpFile, T13.F");
            viewString.Append("ormField_CanDelete, T13.[FormField_WebUrl.IsRequired]) WITH \r\n                RE");
            viewString.Append("LATIONSHIP(CREATEREF(Context.FormField_Position_Desktop, ROW(T13.[FormField_Desk");
            viewString.Append("topPosition.FormField_DesktopPosition_Target.Id]),[Karenbic.DataAccess.FormField");
            viewString.Append("_Position_Desktop]),[Karenbic.DataAccess.FormField_DesktopPosition],FormField_De");
            viewString.Append("sktopPosition_Source,FormField_DesktopPosition_Target) \r\n                RELATIO");
            viewString.Append("NSHIP(CREATEREF(Context.Forms, ROW(T13.[FormField_Form.FormField_Form_Target.Id]");
            viewString.Append("),[Karenbic.DataAccess.Form]),[Karenbic.DataAccess.FormField_Form],FormField_For");
            viewString.Append("m_Source,FormField_Form_Target) \r\n                RELATIONSHIP(CREATEREF(Context");
            viewString.Append(".FormField_Position_Mobile, ROW(T13.[FormField_MobilePosition.FormField_MobilePo");
            viewString.Append("sition_Target.Id]),[Karenbic.DataAccess.FormField_Position_Mobile]),[Karenbic.Da");
            viewString.Append("taAccess.FormField_MobilePosition],FormField_MobilePosition_Source,FormField_Mob");
            viewString.Append("ilePosition_Target) \r\n                RELATIONSHIP(CREATEREF(Context.FormField_P");
            viewString.Append("osition_Tablet, ROW(T13.[FormField_TabletPosition.FormField_TabletPosition_Targe");
            viewString.Append("t.Id]),[Karenbic.DataAccess.FormField_Position_Tablet]),[Karenbic.DataAccess.For");
            viewString.Append("mField_TabletPosition],FormField_TabletPosition_Source,FormField_TabletPosition_");
            viewString.Append("Target) \r\n        END\r\n    FROM (\r\n        SELECT T1.FormField_Id, T1.FormField_");
            viewString.Append("Title, T1.FormField_ShowCustomer, T1.FormField_ShowAdmin, T1.FormField_Descripti");
            viewString.Append("on, T1.FormField_PictureHelpFile, T1.FormField_CanDelete, T10.[FormField_CheckBo");
            viewString.Append("xGroup.ShowInFactor], T10.[FormField_CheckBoxGroup.FactorOrder], T8.[FormField_D");
            viewString.Append("ropDown.IsRequired], T8.[FormField_DropDown.ShowInFactor], T8.[FormField_DropDow");
            viewString.Append("n.FactorOrder], T9.[FormField_RadioButtonGroup.IsRequired], T9.[FormField_RadioB");
            viewString.Append("uttonGroup.ShowInFactor], T9.[FormField_RadioButtonGroup.FactorOrder], T11.[Form");
            viewString.Append("Field_CheckBox.ShowInFactor], T11.[FormField_CheckBox.FactorOrder], T5.[FormFiel");
            viewString.Append("d_ColorPicker.IsRequired], T6.[FormField_DatePicker.IsRequired], T6.[FormField_D");
            viewString.Append("atePicker.Limits], T6.[FormField_DatePicker.Min], T6.[FormField_DatePicker.Max],");
            viewString.Append(" T6.[FormField_DatePicker.ShowInFactor], T6.[FormField_DatePicker.FactorOrder], ");
            viewString.Append("T7.[FormField_FileUploader.IsRequired], T7.[FormField_FileUploader.SizeLimits], ");
            viewString.Append("T7.[FormField_FileUploader.MinSize], T7.[FormField_FileUploader.MaxSize], T12.[F");
            viewString.Append("ormField_Numeric.IsInt], T12.[FormField_Numeric.IsFloat], T12.[FormField_Numeric");
            viewString.Append(".Defualt], T12.[FormField_Numeric.IsRequired], T12.[FormField_Numeric.Limits], T");
            viewString.Append("12.[FormField_Numeric.Min], T12.[FormField_Numeric.Max], T12.[FormField_Numeric.");
            viewString.Append("ShowInFactor], T12.[FormField_Numeric.FactorOrder], T2.[FormField_TextArea.IsReq");
            viewString.Append("uired], T2.[FormField_TextArea.CharacterLimits], T2.[FormField_TextArea.MinChara");
            viewString.Append("cters], T2.[FormField_TextArea.MaxCharacters], T2.[FormField_TextArea.ShowInFact");
            viewString.Append("or], T2.[FormField_TextArea.FactorOrder], T2.[FormField_TextArea.Height], T4.[Fo");
            viewString.Append("rmField_TextBox.Defualt], T4.[FormField_TextBox.IsRequired], T4.[FormField_TextB");
            viewString.Append("ox.CharacterLimits], T4.[FormField_TextBox.MinCharacters], T4.[FormField_TextBox");
            viewString.Append(".MaxCharacters], T4.[FormField_TextBox.ShowInFactor], T4.[FormField_TextBox.Fact");
            viewString.Append("orOrder], T3.[FormField_WebUrl.IsRequired], (T12._from0 AND T12._from0 IS NOT NU");
            viewString.Append("LL) AS _from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, (T4._from2 AND T");
            viewString.Append("4._from2 IS NOT NULL) AS _from2, T1._from3, (T6._from4 AND T6._from4 IS NOT NULL");
            viewString.Append(") AS _from4, (T7._from5 AND T7._from5 IS NOT NULL) AS _from5, (T8._from6 AND T8.");
            viewString.Append("_from6 IS NOT NULL) AS _from6, (T9._from7 AND T9._from7 IS NOT NULL) AS _from7, ");
            viewString.Append("(T10._from8 AND T10._from8 IS NOT NULL) AS _from8, (T11._from9 AND T11._from9 IS");
            viewString.Append(" NOT NULL) AS _from9, (T5._from10 AND T5._from10 IS NOT NULL) AS _from10, (T3._f");
            viewString.Append("rom11 AND T3._from11 IS NOT NULL) AS _from11, T1.[FormField_DesktopPosition.Form");
            viewString.Append("Field_DesktopPosition_Target.Id], T1.[FormField_Form.FormField_Form_Target.Id], ");
            viewString.Append("T1.[FormField_MobilePosition.FormField_MobilePosition_Target.Id], T1.[FormField_");
            viewString.Append("TabletPosition.FormField_TabletPosition_Target.Id]\r\n        FROM  (\r\n           ");
            viewString.Append(" SELECT \r\n                T.Id AS FormField_Id, \r\n                T.Title AS For");
            viewString.Append("mField_Title, \r\n                T.ShowCustomer AS FormField_ShowCustomer, \r\n    ");
            viewString.Append("            T.ShowAdmin AS FormField_ShowAdmin, \r\n                T.Description ");
            viewString.Append("AS FormField_Description, \r\n                T.PictureHelpFile AS FormField_Pictu");
            viewString.Append("reHelpFile, \r\n                T.CanDelete AS FormField_CanDelete, \r\n            ");
            viewString.Append("    True AS _from3, \r\n                T.DesktopPosition_Id AS [FormField_Desktop");
            viewString.Append("Position.FormField_DesktopPosition_Target.Id], \r\n                T.Form_Id AS [F");
            viewString.Append("ormField_Form.FormField_Form_Target.Id], \r\n                T.MobilePosition_Id A");
            viewString.Append("S [FormField_MobilePosition.FormField_MobilePosition_Target.Id], \r\n             ");
            viewString.Append("   T.TabletPosition_Id AS [FormField_TabletPosition.FormField_TabletPosition_Tar");
            viewString.Append("get.Id]\r\n            FROM CodeFirstDatabase.FormField AS T) AS T1\r\n            L");
            viewString.Append("EFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS FormField_Id, \r\n ");
            viewString.Append("               T.IsRequired AS [FormField_TextArea.IsRequired], \r\n              ");
            viewString.Append("  T.CharacterLimits AS [FormField_TextArea.CharacterLimits], \r\n                T");
            viewString.Append(".MinCharacters AS [FormField_TextArea.MinCharacters], \r\n                T.MaxCha");
            viewString.Append("racters AS [FormField_TextArea.MaxCharacters], \r\n                T.ShowInFactor ");
            viewString.Append("AS [FormField_TextArea.ShowInFactor], \r\n                T.FactorOrder AS [FormFi");
            viewString.Append("eld_TextArea.FactorOrder], \r\n                T.Height AS [FormField_TextArea.Hei");
            viewString.Append("ght], \r\n                True AS _from1\r\n            FROM CodeFirstDatabase.tbl_F");
            viewString.Append("ormField_TextArea AS T) AS T2\r\n            ON T1.FormField_Id = T2.FormField_Id\r");
            viewString.Append("\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS For");
            viewString.Append("mField_Id, \r\n                T.IsRequired AS [FormField_WebUrl.IsRequired], \r\n  ");
            viewString.Append("              True AS _from11\r\n            FROM CodeFirstDatabase.tbl_FormField_");
            viewString.Append("WebUrl AS T) AS T3\r\n            ON T1.FormField_Id = T3.FormField_Id\r\n          ");
            viewString.Append("  LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS FormField_Id, ");
            viewString.Append("\r\n                T.Defualt AS [FormField_TextBox.Defualt], \r\n                T.");
            viewString.Append("IsRequired AS [FormField_TextBox.IsRequired], \r\n                T.CharacterLimit");
            viewString.Append("s AS [FormField_TextBox.CharacterLimits], \r\n                T.MinCharacters AS [");
            viewString.Append("FormField_TextBox.MinCharacters], \r\n                T.MaxCharacters AS [FormFiel");
            viewString.Append("d_TextBox.MaxCharacters], \r\n                T.ShowInFactor AS [FormField_TextBox");
            viewString.Append(".ShowInFactor], \r\n                T.FactorOrder AS [FormField_TextBox.FactorOrde");
            viewString.Append("r], \r\n                True AS _from2\r\n            FROM CodeFirstDatabase.tbl_For");
            viewString.Append("mField_TextBox AS T) AS T4\r\n            ON T1.FormField_Id = T4.FormField_Id\r\n  ");
            viewString.Append("          LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS FormFi");
            viewString.Append("eld_Id, \r\n                T.IsRequired AS [FormField_ColorPicker.IsRequired], \r\n");
            viewString.Append("                True AS _from10\r\n            FROM CodeFirstDatabase.tbl_FormFiel");
            viewString.Append("d_ColorPicker AS T) AS T5\r\n            ON T1.FormField_Id = T5.FormField_Id\r\n   ");
            viewString.Append("         LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS FormFie");
            viewString.Append("ld_Id, \r\n                T.IsRequired AS [FormField_DatePicker.IsRequired], \r\n  ");
            viewString.Append("              T.Limits AS [FormField_DatePicker.Limits], \r\n                T.Min");
            viewString.Append(" AS [FormField_DatePicker.Min], \r\n                T.Max AS [FormField_DatePicker");
            viewString.Append(".Max], \r\n                T.ShowInFactor AS [FormField_DatePicker.ShowInFactor], ");
            viewString.Append("\r\n                T.FactorOrder AS [FormField_DatePicker.FactorOrder], \r\n       ");
            viewString.Append("         True AS _from4\r\n            FROM CodeFirstDatabase.tbl_FormField_DatePi");
            viewString.Append("cker AS T) AS T6\r\n            ON T1.FormField_Id = T6.FormField_Id\r\n            ");
            viewString.Append("LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS FormField_Id, \r\n");
            viewString.Append("                T.IsRequired AS [FormField_FileUploader.IsRequired], \r\n         ");
            viewString.Append("       T.SizeLimits AS [FormField_FileUploader.SizeLimits], \r\n                T.");
            viewString.Append("MinSize AS [FormField_FileUploader.MinSize], \r\n                T.MaxSize AS [For");
            viewString.Append("mField_FileUploader.MaxSize], \r\n                True AS _from5\r\n            FROM");
            viewString.Append(" CodeFirstDatabase.tbl_FormField_FileUploader AS T) AS T7\r\n            ON T1.For");
            viewString.Append("mField_Id = T7.FormField_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r");
            viewString.Append("\n                T.Id AS FormField_Id, \r\n                T.IsRequired AS [FormFi");
            viewString.Append("eld_DropDown.IsRequired], \r\n                T.ShowInFactor AS [FormField_DropDow");
            viewString.Append("n.ShowInFactor], \r\n                T.FactorOrder AS [FormField_DropDown.FactorOr");
            viewString.Append("der], \r\n                True AS _from6\r\n            FROM CodeFirstDatabase.tbl_F");
            viewString.Append("ormField_DropDown AS T) AS T8\r\n            ON T1.FormField_Id = T8.FormField_Id\r");
            viewString.Append("\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS For");
            viewString.Append("mField_Id, \r\n                T.IsRequired AS [FormField_RadioButtonGroup.IsRequi");
            viewString.Append("red], \r\n                T.ShowInFactor AS [FormField_RadioButtonGroup.ShowInFact");
            viewString.Append("or], \r\n                T.FactorOrder AS [FormField_RadioButtonGroup.FactorOrder]");
            viewString.Append(", \r\n                True AS _from7\r\n            FROM CodeFirstDatabase.tbl_FormF");
            viewString.Append("ield_RadioButtonGroup AS T) AS T9\r\n            ON T1.FormField_Id = T9.FormField");
            viewString.Append("_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS");
            viewString.Append(" FormField_Id, \r\n                T.ShowInFactor AS [FormField_CheckBoxGroup.Show");
            viewString.Append("InFactor], \r\n                T.FactorOrder AS [FormField_CheckBoxGroup.FactorOrd");
            viewString.Append("er], \r\n                True AS _from8\r\n            FROM CodeFirstDatabase.tbl_Fo");
            viewString.Append("rmField_CheckBoxGroup AS T) AS T10\r\n            ON T1.FormField_Id = T10.FormFie");
            viewString.Append("ld_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id ");
            viewString.Append("AS FormField_Id, \r\n                T.ShowInFactor AS [FormField_CheckBox.ShowInF");
            viewString.Append("actor], \r\n                T.FactorOrder AS [FormField_CheckBox.FactorOrder], \r\n ");
            viewString.Append("               True AS _from9\r\n            FROM CodeFirstDatabase.tbl_FormField_");
            viewString.Append("CheckBox AS T) AS T11\r\n            ON T1.FormField_Id = T11.FormField_Id\r\n      ");
            viewString.Append("      LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS FormField_");
            viewString.Append("Id, \r\n                T.IsInt AS [FormField_Numeric.IsInt], \r\n                T.");
            viewString.Append("IsFloat AS [FormField_Numeric.IsFloat], \r\n                T.Defualt AS [FormFiel");
            viewString.Append("d_Numeric.Defualt], \r\n                T.IsRequired AS [FormField_Numeric.IsRequi");
            viewString.Append("red], \r\n                T.Limits AS [FormField_Numeric.Limits], \r\n              ");
            viewString.Append("  T.Min AS [FormField_Numeric.Min], \r\n                T.Max AS [FormField_Numeri");
            viewString.Append("c.Max], \r\n                T.ShowInFactor AS [FormField_Numeric.ShowInFactor], \r\n");
            viewString.Append("                T.FactorOrder AS [FormField_Numeric.FactorOrder], \r\n            ");
            viewString.Append("    True AS _from0\r\n            FROM CodeFirstDatabase.tbl_FormFiled_Numeric AS ");
            viewString.Append("T) AS T12\r\n            ON T1.FormField_Id = T12.FormField_Id\r\n    ) AS T13");
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormFields", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Context.FormField_Position_Desktop
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_Position_Desktop", @"
    SELECT VALUE -- Constructing FormField_Position_Desktop
        [Karenbic.DataAccess.FormField_Position_Desktop](T1.[FormField_Position_Desktop.Id], T1.[FormField_Position_Desktop.SizeX], T1.[FormField_Position_Desktop.SizeY], T1.[FormField_Position_Desktop.Row], T1.[FormField_Position_Desktop.Column])
    FROM (
        SELECT 
            T.Id AS [FormField_Position_Desktop.Id], 
            T.SizeX AS [FormField_Position_Desktop.SizeX], 
            T.SizeY AS [FormField_Position_Desktop.SizeY], 
            T.[Row] AS [FormField_Position_Desktop.Row], 
            T.Column AS [FormField_Position_Desktop.Column], 
            True AS _from0
        FROM CodeFirstDatabase.FormField_Position_Desktop AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FormField_Position_Mobile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_Position_Mobile", @"
    SELECT VALUE -- Constructing FormField_Position_Mobile
        [Karenbic.DataAccess.FormField_Position_Mobile](T1.[FormField_Position_Mobile.Id], T1.[FormField_Position_Mobile.SizeY], T1.[FormField_Position_Mobile.Row])
    FROM (
        SELECT 
            T.Id AS [FormField_Position_Mobile.Id], 
            T.SizeY AS [FormField_Position_Mobile.SizeY], 
            T.[Row] AS [FormField_Position_Mobile.Row], 
            True AS _from0
        FROM CodeFirstDatabase.FormField_Position_Mobile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.Order_Values
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(13796);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Order_Values\r\n        CASE\r\n            WHEN ");
            viewString.Append("(NOT(T13._from0) AND NOT(T13._from1) AND NOT(T13._from2) AND NOT(T13._from3) AND");
            viewString.Append(" NOT(T13._from4) AND NOT(T13._from5) AND NOT(T13._from6) AND NOT(T13._from7) AND");
            viewString.Append(" NOT(T13._from9) AND NOT(T13._from10) AND NOT(T13._from11)) THEN [Karenbic.DataA");
            viewString.Append("ccess.Order_Value](T13.[Order_Value.Id]) WITH \r\n                RELATIONSHIP(CRE");
            viewString.Append("ATEREF(Context.Orders, ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),");
            viewString.Append("[Karenbic.DataAccess.Order]),[Karenbic.DataAccess.Order_Value_Order],Order_Value");
            viewString.Append("_Order_Source,Order_Value_Order_Target) \r\n                RELATIONSHIP(CREATEREF");
            viewString.Append("(Context.FormFields, ROW(T13.[FormField_Orders_Value.FormField_Orders_Value_Sour");
            viewString.Append("ce.Id]),[Karenbic.DataAccess.FormField]),[Karenbic.DataAccess.FormField_Orders_V");
            viewString.Append("alue],FormField_Orders_Value_Target,FormField_Orders_Value_Source) \r\n           ");
            viewString.Append(" WHEN T13._from0 THEN [Karenbic.DataAccess.Order_Value_Checkbox](T13.[Order_Valu");
            viewString.Append("e.Id], T13.[Order_Value_Checkbox.Value]) WITH \r\n                RELATIONSHIP(CRE");
            viewString.Append("ATEREF(Context.Orders, ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),");
            viewString.Append("[Karenbic.DataAccess.Order]),[Karenbic.DataAccess.Order_Value_Order],Order_Value");
            viewString.Append("_Order_Source,Order_Value_Order_Target) \r\n                RELATIONSHIP(CREATEREF");
            viewString.Append("(Context.FormFields, ROW(T13.[FormField_Orders_Value.FormField_Orders_Value_Sour");
            viewString.Append("ce.Id]),[Karenbic.DataAccess.FormField]),[Karenbic.DataAccess.FormField_Orders_V");
            viewString.Append("alue],FormField_Orders_Value_Target,FormField_Orders_Value_Source) \r\n           ");
            viewString.Append(" WHEN T13._from9 THEN [Karenbic.DataAccess.Order_Value_CheckboxGroup](T13.[Order");
            viewString.Append("_Value.Id]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.Orders, ROW(T1");
            viewString.Append("3.[Order_Value_Order.Order_Value_Order_Target.Id]),[Karenbic.DataAccess.Order]),");
            viewString.Append("[Karenbic.DataAccess.Order_Value_Order],Order_Value_Order_Source,Order_Value_Ord");
            viewString.Append("er_Target) \r\n                RELATIONSHIP(CREATEREF(Context.FormFields, ROW(T13.");
            viewString.Append("[FormField_Orders_Value.FormField_Orders_Value_Source.Id]),[Karenbic.DataAccess.");
            viewString.Append("FormField]),[Karenbic.DataAccess.FormField_Orders_Value],FormField_Orders_Value_");
            viewString.Append("Target,FormField_Orders_Value_Source) \r\n            WHEN T13._from1 THEN [Karenb");
            viewString.Append("ic.DataAccess.Order_Value_ColorPicker](T13.[Order_Value.Id], T13.[Order_Value_Co");
            viewString.Append("lorPicker.Value]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.Orders, ");
            viewString.Append("ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),[Karenbic.DataAccess.Or");
            viewString.Append("der]),[Karenbic.DataAccess.Order_Value_Order],Order_Value_Order_Source,Order_Val");
            viewString.Append("ue_Order_Target) \r\n                RELATIONSHIP(CREATEREF(Context.FormFields, RO");
            viewString.Append("W(T13.[FormField_Orders_Value.FormField_Orders_Value_Source.Id]),[Karenbic.DataA");
            viewString.Append("ccess.FormField]),[Karenbic.DataAccess.FormField_Orders_Value],FormField_Orders_");
            viewString.Append("Value_Target,FormField_Orders_Value_Source) \r\n            WHEN T13._from2 THEN [");
            viewString.Append("Karenbic.DataAccess.Order_Value_DatePicker](T13.[Order_Value.Id], T13.[Order_Val");
            viewString.Append("ue_DatePicker.Value]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.Orde");
            viewString.Append("rs, ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),[Karenbic.DataAcces");
            viewString.Append("s.Order]),[Karenbic.DataAccess.Order_Value_Order],Order_Value_Order_Source,Order");
            viewString.Append("_Value_Order_Target) \r\n                RELATIONSHIP(CREATEREF(Context.FormFields");
            viewString.Append(", ROW(T13.[FormField_Orders_Value.FormField_Orders_Value_Source.Id]),[Karenbic.D");
            viewString.Append("ataAccess.FormField]),[Karenbic.DataAccess.FormField_Orders_Value],FormField_Ord");
            viewString.Append("ers_Value_Target,FormField_Orders_Value_Source) \r\n            WHEN T13._from10 T");
            viewString.Append("HEN [Karenbic.DataAccess.Order_Value_DropDown](T13.[Order_Value.Id]) WITH \r\n    ");
            viewString.Append("            RELATIONSHIP(CREATEREF(Context.Orders, ROW(T13.[Order_Value_Order.Or");
            viewString.Append("der_Value_Order_Target.Id]),[Karenbic.DataAccess.Order]),[Karenbic.DataAccess.Or");
            viewString.Append("der_Value_Order],Order_Value_Order_Source,Order_Value_Order_Target) \r\n          ");
            viewString.Append("      RELATIONSHIP(CREATEREF(Context.FormFields, ROW(T13.[FormField_Orders_Value");
            viewString.Append(".FormField_Orders_Value_Source.Id]),[Karenbic.DataAccess.FormField]),[Karenbic.D");
            viewString.Append("ataAccess.FormField_Orders_Value],FormField_Orders_Value_Target,FormField_Orders");
            viewString.Append("_Value_Source) \r\n                RELATIONSHIP(CREATEREF(Context.FormField_DropDo");
            viewString.Append("wn_Items, ROW(T13.[FormField_DropDown_Item_Orders_Value.FormField_DropDown_Item_");
            viewString.Append("Orders_Value_Source.Id]),[Karenbic.DataAccess.FormField_DropDown_Item]),[Karenbi");
            viewString.Append("c.DataAccess.FormField_DropDown_Item_Orders_Value],FormField_DropDown_Item_Order");
            viewString.Append("s_Value_Target,FormField_DropDown_Item_Orders_Value_Source) \r\n            WHEN T");
            viewString.Append("13._from3 THEN [Karenbic.DataAccess.Order_Value_FileUploader](T13.[Order_Value.I");
            viewString.Append("d], T13.[Order_Value_FileUploader.FileName]) WITH \r\n                RELATIONSHIP");
            viewString.Append("(CREATEREF(Context.Orders, ROW(T13.[Order_Value_Order.Order_Value_Order_Target.I");
            viewString.Append("d]),[Karenbic.DataAccess.Order]),[Karenbic.DataAccess.Order_Value_Order],Order_V");
            viewString.Append("alue_Order_Source,Order_Value_Order_Target) \r\n                RELATIONSHIP(CREAT");
            viewString.Append("EREF(Context.FormFields, ROW(T13.[FormField_Orders_Value.FormField_Orders_Value_");
            viewString.Append("Source.Id]),[Karenbic.DataAccess.FormField]),[Karenbic.DataAccess.FormField_Orde");
            viewString.Append("rs_Value],FormField_Orders_Value_Target,FormField_Orders_Value_Source) \r\n       ");
            viewString.Append("     WHEN T13._from4 THEN [Karenbic.DataAccess.Order_Value_Numeric](T13.[Order_V");
            viewString.Append("alue.Id], T13.[Order_Value_Numeric.Value]) WITH \r\n                RELATIONSHIP(C");
            viewString.Append("REATEREF(Context.Orders, ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]");
            viewString.Append("),[Karenbic.DataAccess.Order]),[Karenbic.DataAccess.Order_Value_Order],Order_Val");
            viewString.Append("ue_Order_Source,Order_Value_Order_Target) \r\n                RELATIONSHIP(CREATER");
            viewString.Append("EF(Context.FormFields, ROW(T13.[FormField_Orders_Value.FormField_Orders_Value_So");
            viewString.Append("urce.Id]),[Karenbic.DataAccess.FormField]),[Karenbic.DataAccess.FormField_Orders");
            viewString.Append("_Value],FormField_Orders_Value_Target,FormField_Orders_Value_Source) \r\n         ");
            viewString.Append("   WHEN T13._from11 THEN [Karenbic.DataAccess.Order_Value_RadioButtonGroup](T13.");
            viewString.Append("[Order_Value.Id]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.Orders, ");
            viewString.Append("ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),[Karenbic.DataAccess.Or");
            viewString.Append("der]),[Karenbic.DataAccess.Order_Value_Order],Order_Value_Order_Source,Order_Val");
            viewString.Append("ue_Order_Target) \r\n                RELATIONSHIP(CREATEREF(Context.FormFields, RO");
            viewString.Append("W(T13.[FormField_Orders_Value.FormField_Orders_Value_Source.Id]),[Karenbic.DataA");
            viewString.Append("ccess.FormField]),[Karenbic.DataAccess.FormField_Orders_Value],FormField_Orders_");
            viewString.Append("Value_Target,FormField_Orders_Value_Source) \r\n                RELATIONSHIP(CREAT");
            viewString.Append("EREF(Context.FormField_RadioButtonGroup_Items, ROW(T13.[FormField_RadioButtonGro");
            viewString.Append("up_Item_Orders_Value.FormField_RadioButtonGroup_Item_Orders_Value_Source.Id]),[K");
            viewString.Append("arenbic.DataAccess.FormField_RadioButtonGroup_Item]),[Karenbic.DataAccess.FormFi");
            viewString.Append("eld_RadioButtonGroup_Item_Orders_Value],FormField_RadioButtonGroup_Item_Orders_V");
            viewString.Append("alue_Target,FormField_RadioButtonGroup_Item_Orders_Value_Source) \r\n            W");
            viewString.Append("HEN T13._from5 THEN [Karenbic.DataAccess.Order_Value_TextArea](T13.[Order_Value.");
            viewString.Append("Id], T13.[Order_Value_TextArea.Value]) WITH \r\n                RELATIONSHIP(CREAT");
            viewString.Append("EREF(Context.Orders, ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),[K");
            viewString.Append("arenbic.DataAccess.Order]),[Karenbic.DataAccess.Order_Value_Order],Order_Value_O");
            viewString.Append("rder_Source,Order_Value_Order_Target) \r\n                RELATIONSHIP(CREATEREF(C");
            viewString.Append("ontext.FormFields, ROW(T13.[FormField_Orders_Value.FormField_Orders_Value_Source");
            viewString.Append(".Id]),[Karenbic.DataAccess.FormField]),[Karenbic.DataAccess.FormField_Orders_Val");
            viewString.Append("ue],FormField_Orders_Value_Target,FormField_Orders_Value_Source) \r\n            W");
            viewString.Append("HEN T13._from6 THEN [Karenbic.DataAccess.Order_Value_TextBox](T13.[Order_Value.I");
            viewString.Append("d], T13.[Order_Value_TextBox.Value]) WITH \r\n                RELATIONSHIP(CREATER");
            viewString.Append("EF(Context.Orders, ROW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),[Kar");
            viewString.Append("enbic.DataAccess.Order]),[Karenbic.DataAccess.Order_Value_Order],Order_Value_Ord");
            viewString.Append("er_Source,Order_Value_Order_Target) \r\n                RELATIONSHIP(CREATEREF(Con");
            viewString.Append("text.FormFields, ROW(T13.[FormField_Orders_Value.FormField_Orders_Value_Source.I");
            viewString.Append("d]),[Karenbic.DataAccess.FormField]),[Karenbic.DataAccess.FormField_Orders_Value");
            viewString.Append("],FormField_Orders_Value_Target,FormField_Orders_Value_Source) \r\n            ELS");
            viewString.Append("E [Karenbic.DataAccess.Order_Value_WebUrl](T13.[Order_Value.Id], T13.[Order_Valu");
            viewString.Append("e_WebUrl.Value]) WITH \r\n                RELATIONSHIP(CREATEREF(Context.Orders, R");
            viewString.Append("OW(T13.[Order_Value_Order.Order_Value_Order_Target.Id]),[Karenbic.DataAccess.Ord");
            viewString.Append("er]),[Karenbic.DataAccess.Order_Value_Order],Order_Value_Order_Source,Order_Valu");
            viewString.Append("e_Order_Target) \r\n                RELATIONSHIP(CREATEREF(Context.FormFields, ROW");
            viewString.Append("(T13.[FormField_Orders_Value.FormField_Orders_Value_Source.Id]),[Karenbic.DataAc");
            viewString.Append("cess.FormField]),[Karenbic.DataAccess.FormField_Orders_Value],FormField_Orders_V");
            viewString.Append("alue_Target,FormField_Orders_Value_Source) \r\n        END\r\n    FROM (\r\n        SE");
            viewString.Append("LECT T1.[Order_Value.Id], T12.[Order_Value_Checkbox.Value], T2.[Order_Value_Colo");
            viewString.Append("rPicker.Value], T4.[Order_Value_DatePicker.Value], T5.[Order_Value_FileUploader.");
            viewString.Append("FileName], T6.[Order_Value_Numeric.Value], T7.[Order_Value_TextArea.Value], T8.[");
            viewString.Append("Order_Value_TextBox.Value], T9.[Order_Value_WebUrl.Value], (T12._from0 AND T12._");
            viewString.Append("from0 IS NOT NULL) AS _from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, (");
            viewString.Append("T4._from2 AND T4._from2 IS NOT NULL) AS _from2, (T5._from3 AND T5._from3 IS NOT ");
            viewString.Append("NULL) AS _from3, (T6._from4 AND T6._from4 IS NOT NULL) AS _from4, (T7._from5 AND");
            viewString.Append(" T7._from5 IS NOT NULL) AS _from5, (T8._from6 AND T8._from6 IS NOT NULL) AS _fro");
            viewString.Append("m6, (T9._from7 AND T9._from7 IS NOT NULL) AS _from7, T1._from8, (T11._from9 AND ");
            viewString.Append("T11._from9 IS NOT NULL) AS _from9, (T10._from10 AND T10._from10 IS NOT NULL) AS ");
            viewString.Append("_from10, (T3._from11 AND T3._from11 IS NOT NULL) AS _from11, T1.[Order_Value_Ord");
            viewString.Append("er.Order_Value_Order_Target.Id], T1.[FormField_Orders_Value.FormField_Orders_Val");
            viewString.Append("ue_Source.Id], T3.[FormField_RadioButtonGroup_Item_Orders_Value.FormField_RadioB");
            viewString.Append("uttonGroup_Item_Orders_Value_Source.Id], T10.[FormField_DropDown_Item_Orders_Val");
            viewString.Append("ue.FormField_DropDown_Item_Orders_Value_Source.Id]\r\n        FROM  (\r\n           ");
            viewString.Append(" SELECT \r\n                T.Id AS [Order_Value.Id], \r\n                True AS _f");
            viewString.Append("rom8, \r\n                T.Order_Id AS [Order_Value_Order.Order_Value_Order_Targe");
            viewString.Append("t.Id], \r\n                T.Field_Id AS [FormField_Orders_Value.FormField_Orders_");
            viewString.Append("Value_Source.Id]\r\n            FROM CodeFirstDatabase.Order_Value AS T) AS T1\r\n  ");
            viewString.Append("          LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS [Order");
            viewString.Append("_Value.Id], \r\n                T.[Value] AS [Order_Value_ColorPicker.Value], \r\n  ");
            viewString.Append("              True AS _from1\r\n            FROM CodeFirstDatabase.tbl_Order_Value");
            viewString.Append("_ColorPicker AS T) AS T2\r\n            ON T1.[Order_Value.Id] = T2.[Order_Value.I");
            viewString.Append("d]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS ");
            viewString.Append("[Order_Value.Id], \r\n                True AS _from11, \r\n                T.Value_I");
            viewString.Append("d AS [FormField_RadioButtonGroup_Item_Orders_Value.FormField_RadioButtonGroup_It");
            viewString.Append("em_Orders_Value_Source.Id]\r\n            FROM CodeFirstDatabase.tbl_Order_Value_R");
            viewString.Append("adioButtonGroup AS T) AS T3\r\n            ON T1.[Order_Value.Id] = T3.[Order_Valu");
            viewString.Append("e.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id ");
            viewString.Append("AS [Order_Value.Id], \r\n                T.[Value] AS [Order_Value_DatePicker.Valu");
            viewString.Append("e], \r\n                True AS _from2\r\n            FROM CodeFirstDatabase.tbl_Ord");
            viewString.Append("er_Value_DatePicker AS T) AS T4\r\n            ON T1.[Order_Value.Id] = T4.[Order_");
            viewString.Append("Value.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                T");
            viewString.Append(".Id AS [Order_Value.Id], \r\n                T.FileName AS [Order_Value_FileUpload");
            viewString.Append("er.FileName], \r\n                True AS _from3\r\n            FROM CodeFirstDataba");
            viewString.Append("se.tbl_Order_Value_FileUploader AS T) AS T5\r\n            ON T1.[Order_Value.Id] ");
            viewString.Append("= T5.[Order_Value.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n     ");
            viewString.Append("           T.Id AS [Order_Value.Id], \r\n                T.[Value] AS [Order_Value");
            viewString.Append("_Numeric.Value], \r\n                True AS _from4\r\n            FROM CodeFirstDat");
            viewString.Append("abase.tbl_Order_Value_Numeric AS T) AS T6\r\n            ON T1.[Order_Value.Id] = ");
            viewString.Append("T6.[Order_Value.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n       ");
            viewString.Append("         T.Id AS [Order_Value.Id], \r\n                T.[Value] AS [Order_Value_T");
            viewString.Append("extArea.Value], \r\n                True AS _from5\r\n            FROM CodeFirstData");
            viewString.Append("base.tbl_Order_Value_TextArea AS T) AS T7\r\n            ON T1.[Order_Value.Id] = ");
            viewString.Append("T7.[Order_Value.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n       ");
            viewString.Append("         T.Id AS [Order_Value.Id], \r\n                T.[Value] AS [Order_Value_T");
            viewString.Append("extBox.Value], \r\n                True AS _from6\r\n            FROM CodeFirstDatab");
            viewString.Append("ase.tbl_Order_Value_TextBox AS T) AS T8\r\n            ON T1.[Order_Value.Id] = T8");
            viewString.Append(".[Order_Value.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n         ");
            viewString.Append("       T.Id AS [Order_Value.Id], \r\n                T.[Value] AS [Order_Value_Web");
            viewString.Append("Url.Value], \r\n                True AS _from7\r\n            FROM CodeFirstDatabase");
            viewString.Append(".tbl_Order_Value_WebUrl AS T) AS T9\r\n            ON T1.[Order_Value.Id] = T9.[Or");
            viewString.Append("der_Value.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n             ");
            viewString.Append("   T.Id AS [Order_Value.Id], \r\n                True AS _from10, \r\n              ");
            viewString.Append("  T.Value_Id AS [FormField_DropDown_Item_Orders_Value.FormField_DropDown_Item_Or");
            viewString.Append("ders_Value_Source.Id]\r\n            FROM CodeFirstDatabase.tbl_Order_Value_DropDo");
            viewString.Append("wn AS T) AS T10\r\n            ON T1.[Order_Value.Id] = T10.[Order_Value.Id]\r\n    ");
            viewString.Append("        LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS [Order_V");
            viewString.Append("alue.Id], \r\n                True AS _from9\r\n            FROM CodeFirstDatabase.t");
            viewString.Append("bl_Order_Value_CheckboxGroup AS T) AS T11\r\n            ON T1.[Order_Value.Id] = ");
            viewString.Append("T11.[Order_Value.Id]\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n      ");
            viewString.Append("          T.Id AS [Order_Value.Id], \r\n                T.[Value] AS [Order_Value_");
            viewString.Append("Checkbox.Value], \r\n                True AS _from0\r\n            FROM CodeFirstDat");
            viewString.Append("abase.tbl_Order_Value_Checkbox AS T) AS T12\r\n            ON T1.[Order_Value.Id] ");
            viewString.Append("= T12.[Order_Value.Id]\r\n    ) AS T13");
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Order_Values", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Context.FormField_CheckBoxGroup_Items
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_CheckBoxGroup_Items", @"
    SELECT VALUE -- Constructing FormField_CheckBoxGroup_Items
        [Karenbic.DataAccess.FormField_CheckBoxGroup_Item](T1.[FormField_CheckBoxGroup_Item.Id], T1.[FormField_CheckBoxGroup_Item.Title], T1.[FormField_CheckBoxGroup_Item.Order], T1.[FormField_CheckBoxGroup_Item.ShowCustomer], T1.[FormField_CheckBoxGroup_Item.ShowAdmin], T1.[FormField_CheckBoxGroup_Item.CanDelete]) WITH 
        RELATIONSHIP(CREATEREF(Context.FormFields, ROW(T1.[FormField_CheckBoxGroup_Item_CheckBoxGroup.FormField_CheckBoxGroup_Item_CheckBoxGroup_Target.Id]),[Karenbic.DataAccess.FormField_CheckBoxGroup]),[Karenbic.DataAccess.FormField_CheckBoxGroup_Item_CheckBoxGroup],FormField_CheckBoxGroup_Item_CheckBoxGroup_Source,FormField_CheckBoxGroup_Item_CheckBoxGroup_Target) 
    FROM (
        SELECT 
            T.Id AS [FormField_CheckBoxGroup_Item.Id], 
            T.Title AS [FormField_CheckBoxGroup_Item.Title], 
            T.[Order] AS [FormField_CheckBoxGroup_Item.Order], 
            T.ShowCustomer AS [FormField_CheckBoxGroup_Item.ShowCustomer], 
            T.ShowAdmin AS [FormField_CheckBoxGroup_Item.ShowAdmin], 
            T.CanDelete AS [FormField_CheckBoxGroup_Item.CanDelete], 
            True AS _from0, 
            T.CheckBoxGroup_Id AS [FormField_CheckBoxGroup_Item_CheckBoxGroup.FormField_CheckBoxGroup_Item_CheckBoxGroup_Target.Id]
        FROM CodeFirstDatabase.FormField_CheckBoxGroup_Item AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FormField_Position_Tablet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_Position_Tablet", @"
    SELECT VALUE -- Constructing FormField_Position_Tablet
        [Karenbic.DataAccess.FormField_Position_Tablet](T1.[FormField_Position_Tablet.Id], T1.[FormField_Position_Tablet.SizeX], T1.[FormField_Position_Tablet.SizeY], T1.[FormField_Position_Tablet.Row], T1.[FormField_Position_Tablet.Column])
    FROM (
        SELECT 
            T.Id AS [FormField_Position_Tablet.Id], 
            T.SizeX AS [FormField_Position_Tablet.SizeX], 
            T.SizeY AS [FormField_Position_Tablet.SizeY], 
            T.[Row] AS [FormField_Position_Tablet.Row], 
            T.Column AS [FormField_Position_Tablet.Column], 
            True AS _from0
        FROM CodeFirstDatabase.FormField_Position_Tablet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FormField_DropDown_Items
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_DropDown_Items", @"
    SELECT VALUE -- Constructing FormField_DropDown_Items
        [Karenbic.DataAccess.FormField_DropDown_Item](T1.[FormField_DropDown_Item.Id], T1.[FormField_DropDown_Item.Title], T1.[FormField_DropDown_Item.Order], T1.[FormField_DropDown_Item.ShowCustomer], T1.[FormField_DropDown_Item.ShowAdmin], T1.[FormField_DropDown_Item.CanDelete]) WITH 
        RELATIONSHIP(CREATEREF(Context.FormFields, ROW(T1.[FormField_DropDown_Item_DropDown.FormField_DropDown_Item_DropDown_Target.Id]),[Karenbic.DataAccess.FormField_DropDown]),[Karenbic.DataAccess.FormField_DropDown_Item_DropDown],FormField_DropDown_Item_DropDown_Source,FormField_DropDown_Item_DropDown_Target) 
    FROM (
        SELECT 
            T.Id AS [FormField_DropDown_Item.Id], 
            T.Title AS [FormField_DropDown_Item.Title], 
            T.[Order] AS [FormField_DropDown_Item.Order], 
            T.ShowCustomer AS [FormField_DropDown_Item.ShowCustomer], 
            T.ShowAdmin AS [FormField_DropDown_Item.ShowAdmin], 
            T.CanDelete AS [FormField_DropDown_Item.CanDelete], 
            True AS _from0, 
            T.DropDown_Id AS [FormField_DropDown_Item_DropDown.FormField_DropDown_Item_DropDown_Target.Id]
        FROM CodeFirstDatabase.FormField_DropDown_Item AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FormField_RadioButtonGroup_Items
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_RadioButtonGroup_Items", "\r\n    SELECT VALUE -- Constructing FormField_RadioButtonGroup_Items\r\n        [Kar" +
                    "enbic.DataAccess.FormField_RadioButtonGroup_Item](T1.[FormField_RadioButtonGroup" +
                    "_Item.Id], T1.[FormField_RadioButtonGroup_Item.Title], T1.[FormField_RadioButton" +
                    "Group_Item.Order], T1.[FormField_RadioButtonGroup_Item.ShowCustomer], T1.[FormFi" +
                    "eld_RadioButtonGroup_Item.ShowAdmin], T1.[FormField_RadioButtonGroup_Item.CanDel" +
                    "ete]) WITH \r\n        RELATIONSHIP(CREATEREF(Context.FormFields, ROW(T1.[FormFiel" +
                    "d_RadioButtonGroup_Item_RadioButtonGroup.FormField_RadioButtonGroup_Item_RadioBu" +
                    "ttonGroup_Target.Id]),[Karenbic.DataAccess.FormField_RadioButtonGroup]),[Karenbi" +
                    "c.DataAccess.FormField_RadioButtonGroup_Item_RadioButtonGroup],FormField_RadioBu" +
                    "ttonGroup_Item_RadioButtonGroup_Source,FormField_RadioButtonGroup_Item_RadioButt" +
                    "onGroup_Target) \r\n    FROM (\r\n        SELECT \r\n            T.Id AS [FormField_Ra" +
                    "dioButtonGroup_Item.Id], \r\n            T.Title AS [FormField_RadioButtonGroup_It" +
                    "em.Title], \r\n            T.[Order] AS [FormField_RadioButtonGroup_Item.Order], \r" +
                    "\n            T.ShowCustomer AS [FormField_RadioButtonGroup_Item.ShowCustomer], \r" +
                    "\n            T.ShowAdmin AS [FormField_RadioButtonGroup_Item.ShowAdmin], \r\n     " +
                    "       T.CanDelete AS [FormField_RadioButtonGroup_Item.CanDelete], \r\n           " +
                    " True AS _from0, \r\n            T.RadioButtonGroup_Id AS [FormField_RadioButtonGr" +
                    "oup_Item_RadioButtonGroup.FormField_RadioButtonGroup_Item_RadioButtonGroup_Targe" +
                    "t.Id]\r\n        FROM CodeFirstDatabase.FormField_RadioButtonGroup_Item AS T\r\n    " +
                    ") AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FileFormats
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FileFormats", @"
    SELECT VALUE -- Constructing FileFormats
        [Karenbic.DataAccess.FileFormat](T1.FileFormat_Id, T1.FileFormat_Title, T1.FileFormat_Extention)
    FROM (
        SELECT 
            T.Id AS FileFormat_Id, 
            T.Title AS FileFormat_Title, 
            T.Extention AS FileFormat_Extention, 
            True AS _from0
        FROM CodeFirstDatabase.FileFormat AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FormGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormGroups", @"
    SELECT VALUE -- Constructing FormGroups
        [Karenbic.DataAccess.FormGroup](T1.FormGroup_Id, T1.FormGroup_Portal, T1.FormGroup_IsShow, T1.FormGroup_Title, T1.FormGroup_Column, T1.FormGroup_Priority)
    FROM (
        SELECT 
            T.Id AS FormGroup_Id, 
            CAST(T.Portal AS [Karenbic.DataAccess.Portal]) AS FormGroup_Portal, 
            T.IsShow AS FormGroup_IsShow, 
            T.Title AS FormGroup_Title, 
            T.Column AS FormGroup_Column, 
            T.Priority AS FormGroup_Priority, 
            True AS _from0
        FROM CodeFirstDatabase.FormGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.DesignOrder_Designs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignOrder_Designs", @"
    SELECT VALUE -- Constructing DesignOrder_Designs
        [Karenbic.DataAccess.DesignOrder_Design](T1.[DesignOrder_Design.Id], T1.[DesignOrder_Design.RegisterDate], T1.[DesignOrder_Design.Description], T1.[DesignOrder_Design.IsReview]) WITH 
        RELATIONSHIP(CREATEREF(Context.Orders, ROW(T1.[DesignOrder_Design_Order.DesignOrder_Design_Order_Target.Id]),[Karenbic.DataAccess.DesignOrder]),[Karenbic.DataAccess.DesignOrder_Design_Order],DesignOrder_Design_Order_Source,DesignOrder_Design_Order_Target) 
    FROM (
        SELECT 
            T.Id AS [DesignOrder_Design.Id], 
            T.RegisterDate AS [DesignOrder_Design.RegisterDate], 
            T.Description AS [DesignOrder_Design.Description], 
            T.IsReview AS [DesignOrder_Design.IsReview], 
            True AS _from0, 
            T.Order_Id AS [DesignOrder_Design_Order.DesignOrder_Design_Order_Target.Id]
        FROM CodeFirstDatabase.DesignOrder_Design AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.DesignOrder_Design_Files
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignOrder_Design_Files", @"
    SELECT VALUE -- Constructing DesignOrder_Design_Files
        [Karenbic.DataAccess.DesignOrder_Design_File](T1.[DesignOrder_Design_File.Id], T1.[DesignOrder_Design_File.PictureFile], T1.[DesignOrder_Design_File.State], T1.[DesignOrder_Design_File.TempState], T1.[DesignOrder_Design_File.CustomerDescription]) WITH 
        RELATIONSHIP(CREATEREF(Context.DesignOrder_Designs, ROW(T1.[DesignOrder_Design_File_Design.DesignOrder_Design_File_Design_Target.Id]),[Karenbic.DataAccess.DesignOrder_Design]),[Karenbic.DataAccess.DesignOrder_Design_File_Design],DesignOrder_Design_File_Design_Source,DesignOrder_Design_File_Design_Target) 
    FROM (
        SELECT 
            T.Id AS [DesignOrder_Design_File.Id], 
            T.PictureFile AS [DesignOrder_Design_File.PictureFile], 
            CAST(T.State AS [Karenbic.DataAccess.DesignOrder_Design_File_State]) AS [DesignOrder_Design_File.State], 
            CAST(T.TempState AS [Karenbic.DataAccess.DesignOrder_Design_File_State]) AS [DesignOrder_Design_File.TempState], 
            T.CustomerDescription AS [DesignOrder_Design_File.CustomerDescription], 
            True AS _from0, 
            T.Design_Id AS [DesignOrder_Design_File_Design.DesignOrder_Design_File_Design_Target.Id]
        FROM CodeFirstDatabase.DesignOrder_Design_File AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.FinalDesignFactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FinalDesignFactors", @"
    SELECT VALUE -- Constructing FinalDesignFactors
        [Karenbic.DataAccess.FinalDesignFactor](T1.FinalDesignFactor_Id, T1.FinalDesignFactor_Price, T1.FinalDesignFactor_RegisterDate, T1.FinalDesignFactor_IsPaid, T1.FinalDesignFactor_PaidDate) WITH 
        RELATIONSHIP(CREATEREF(Context.Payments, ROW(T1.[DesignPayment_FinalFactors.DesignPayment_FinalFactors_Source.Id]),[Karenbic.DataAccess.DesignPayment]),[Karenbic.DataAccess.DesignPayment_FinalFactors],DesignPayment_FinalFactors_Target,DesignPayment_FinalFactors_Source) 
    FROM (
        SELECT 
            T.Id AS FinalDesignFactor_Id, 
            T.Price AS FinalDesignFactor_Price, 
            T.RegisterDate AS FinalDesignFactor_RegisterDate, 
            T.IsPaid AS FinalDesignFactor_IsPaid, 
            T.PaidDate AS FinalDesignFactor_PaidDate, 
            True AS _from0, 
            T.Payment_Id AS [DesignPayment_FinalFactors.DesignPayment_FinalFactors_Source.Id]
        FROM CodeFirstDatabase.FinalDesignFactor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.Payments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2235);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Payments\r\n        CASE\r\n            WHEN (NOT");
            viewString.Append("(T4._from1) AND NOT(T4._from2)) THEN [Karenbic.DataAccess.Payment](T4.Payment_Id");
            viewString.Append(", T4.Payment_Money, T4.Payment_RegisterDate, T4.Payment_IsComplete, T4.Payment_I");
            viewString.Append("sPaid, T4.Payment_RefId, T4.Payment_ResCode, T4.Payment_SaleOrderId, T4.Payment_");
            viewString.Append("SaleReferenceId)\r\n            WHEN T4._from1 THEN [Karenbic.DataAccess.DesignPay");
            viewString.Append("ment](T4.Payment_Id, T4.Payment_Money, T4.Payment_RegisterDate, T4.Payment_IsCom");
            viewString.Append("plete, T4.Payment_IsPaid, T4.Payment_RefId, T4.Payment_ResCode, T4.Payment_SaleO");
            viewString.Append("rderId, T4.Payment_SaleReferenceId)\r\n            ELSE [Karenbic.DataAccess.Print");
            viewString.Append("Payment](T4.Payment_Id, T4.Payment_Money, T4.Payment_RegisterDate, T4.Payment_Is");
            viewString.Append("Complete, T4.Payment_IsPaid, T4.Payment_RefId, T4.Payment_ResCode, T4.Payment_Sa");
            viewString.Append("leOrderId, T4.Payment_SaleReferenceId)\r\n        END\r\n    FROM (\r\n        SELECT ");
            viewString.Append("T1.Payment_Id, T1.Payment_Money, T1.Payment_RegisterDate, T1.Payment_IsComplete,");
            viewString.Append(" T1.Payment_IsPaid, T1.Payment_RefId, T1.Payment_ResCode, T1.Payment_SaleOrderId");
            viewString.Append(", T1.Payment_SaleReferenceId, T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) A");
            viewString.Append("S _from1, (T3._from2 AND T3._from2 IS NOT NULL) AS _from2\r\n        FROM  (\r\n    ");
            viewString.Append("        SELECT \r\n                T.Id AS Payment_Id, \r\n                T.Money A");
            viewString.Append("S Payment_Money, \r\n                T.RegisterDate AS Payment_RegisterDate, \r\n   ");
            viewString.Append("             T.IsComplete AS Payment_IsComplete, \r\n                T.IsPaid AS P");
            viewString.Append("ayment_IsPaid, \r\n                T.RefId AS Payment_RefId, \r\n                T.R");
            viewString.Append("esCode AS Payment_ResCode, \r\n                T.SaleOrderId AS Payment_SaleOrderI");
            viewString.Append("d, \r\n                T.SaleReferenceId AS Payment_SaleReferenceId, \r\n           ");
            viewString.Append("     True AS _from0\r\n            FROM CodeFirstDatabase.Payment AS T) AS T1\r\n   ");
            viewString.Append("         LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS Payment");
            viewString.Append("_Id, \r\n                True AS _from1\r\n            FROM CodeFirstDatabase.tbl_De");
            viewString.Append("signPayment AS T) AS T2\r\n            ON T1.Payment_Id = T2.Payment_Id\r\n         ");
            viewString.Append("   LEFT OUTER JOIN (\r\n            SELECT \r\n                T.Id AS Payment_Id, \r");
            viewString.Append("\n                True AS _from2\r\n            FROM CodeFirstDatabase.tbl_PrintPay");
            viewString.Append("ment AS T) AS T3\r\n            ON T1.Payment_Id = T3.Payment_Id\r\n    ) AS T4");
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Payments", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for Context.FinalDesignPaymentItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FinalDesignPaymentItems", @"
    SELECT VALUE -- Constructing FinalDesignPaymentItems
        [Karenbic.DataAccess.FinalDesignPaymentItem](T1.FinalDesignPaymentItem_id, T1.FinalDesignPaymentItem_FactorId) WITH 
        RELATIONSHIP(CREATEREF(Context.Payments, ROW(T1.[DesignPayment_FinalItems.DesignPayment_FinalItems_Source.Id]),[Karenbic.DataAccess.DesignPayment]),[Karenbic.DataAccess.DesignPayment_FinalItems],DesignPayment_FinalItems_Target,DesignPayment_FinalItems_Source) 
    FROM (
        SELECT 
            T.id AS FinalDesignPaymentItem_id, 
            T.FactorId AS FinalDesignPaymentItem_FactorId, 
            True AS _from0, 
            T.Payment_Id AS [DesignPayment_FinalItems.DesignPayment_FinalItems_Source.Id]
        FROM CodeFirstDatabase.FinalDesignPaymentItem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.PrepaymentDesignFactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.PrepaymentDesignFactors", @"
    SELECT VALUE -- Constructing PrepaymentDesignFactors
        [Karenbic.DataAccess.PrepaymentDesignFactor](T1.PrepaymentDesignFactor_Id, T1.PrepaymentDesignFactor_Price, T1.PrepaymentDesignFactor_RegisterDate, T1.PrepaymentDesignFactor_IsPaid, T1.PrepaymentDesignFactor_PaidDate) WITH 
        RELATIONSHIP(CREATEREF(Context.Payments, ROW(T1.[DesignPayment_PrepaymentFactors.DesignPayment_PrepaymentFactors_Source.Id]),[Karenbic.DataAccess.DesignPayment]),[Karenbic.DataAccess.DesignPayment_PrepaymentFactors],DesignPayment_PrepaymentFactors_Target,DesignPayment_PrepaymentFactors_Source) 
    FROM (
        SELECT 
            T.Id AS PrepaymentDesignFactor_Id, 
            T.Price AS PrepaymentDesignFactor_Price, 
            T.RegisterDate AS PrepaymentDesignFactor_RegisterDate, 
            T.IsPaid AS PrepaymentDesignFactor_IsPaid, 
            T.PaidDate AS PrepaymentDesignFactor_PaidDate, 
            True AS _from0, 
            T.Payment_Id AS [DesignPayment_PrepaymentFactors.DesignPayment_PrepaymentFactors_Source.Id]
        FROM CodeFirstDatabase.PrepaymentDesignFactor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.PrepaymentDesignPaymentItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.PrepaymentDesignPaymentItems", @"
    SELECT VALUE -- Constructing PrepaymentDesignPaymentItems
        [Karenbic.DataAccess.PrepaymentDesignPaymentItem](T1.PrepaymentDesignPaymentItem_id, T1.PrepaymentDesignPaymentItem_FactorId) WITH 
        RELATIONSHIP(CREATEREF(Context.Payments, ROW(T1.[DesignPayment_PrepaymentItems.DesignPayment_PrepaymentItems_Source.Id]),[Karenbic.DataAccess.DesignPayment]),[Karenbic.DataAccess.DesignPayment_PrepaymentItems],DesignPayment_PrepaymentItems_Target,DesignPayment_PrepaymentItems_Source) 
    FROM (
        SELECT 
            T.id AS PrepaymentDesignPaymentItem_id, 
            T.FactorId AS PrepaymentDesignPaymentItem_FactorId, 
            True AS _from0, 
            T.Payment_Id AS [DesignPayment_PrepaymentItems.DesignPayment_PrepaymentItems_Source.Id]
        FROM CodeFirstDatabase.PrepaymentDesignPaymentItem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.PrintFactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.PrintFactors", @"
    SELECT VALUE -- Constructing PrintFactors
        [Karenbic.DataAccess.PrintFactor](T1.PrintFactor_Id, T1.PrintFactor_Price, T1.PrintFactor_RegisterDate, T1.PrintFactor_IsPaid, T1.PrintFactor_PaidDate) WITH 
        RELATIONSHIP(CREATEREF(Context.Payments, ROW(T1.[PrintFactor_Payment.PrintFactor_Payment_Target.Id]),[Karenbic.DataAccess.PrintPayment]),[Karenbic.DataAccess.PrintFactor_Payment],PrintFactor_Payment_Source,PrintFactor_Payment_Target) 
    FROM (
        SELECT 
            T.Id AS PrintFactor_Id, 
            T.Price AS PrintFactor_Price, 
            T.RegisterDate AS PrintFactor_RegisterDate, 
            T.IsPaid AS PrintFactor_IsPaid, 
            T.PaidDate AS PrintFactor_PaidDate, 
            True AS _from0, 
            T.Payment_Id AS [PrintFactor_Payment.PrintFactor_Payment_Target.Id]
        FROM CodeFirstDatabase.PrintFactor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.PrintPaymentItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.PrintPaymentItems", @"
    SELECT VALUE -- Constructing PrintPaymentItems
        [Karenbic.DataAccess.PrintPaymentItem](T1.PrintPaymentItem_id, T1.PrintPaymentItem_FactorId) WITH 
        RELATIONSHIP(CREATEREF(Context.Payments, ROW(T1.[PrintPaymentItem_Payment.PrintPaymentItem_Payment_Target.Id]),[Karenbic.DataAccess.PrintPayment]),[Karenbic.DataAccess.PrintPaymentItem_Payment],PrintPaymentItem_Payment_Source,PrintPaymentItem_Payment_Target) 
    FROM (
        SELECT 
            T.id AS PrintPaymentItem_id, 
            T.FactorId AS PrintPaymentItem_FactorId, 
            True AS _from0, 
            T.Payment_Id AS [PrintPaymentItem_Payment.PrintPaymentItem_Payment_Target.Id]
        FROM CodeFirstDatabase.PrintPaymentItem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.City_Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.City_Customers", @"
    SELECT VALUE -- Constructing City_Customers
        [Karenbic.DataAccess.City_Customers](T3.[City_Customers.City_Customers_Source], T3.[City_Customers.City_Customers_Target])
    FROM (
        SELECT -- Constructing City_Customers_Source
            CreateRef(Context.Cities, row(T2.[City_Customers.City_Customers_Source.Id]), [Karenbic.DataAccess.City]) AS [City_Customers.City_Customers_Source], 
            T2.[City_Customers.City_Customers_Target]
        FROM (
            SELECT -- Constructing City_Customers_Target
                T1.[City_Customers.City_Customers_Source.Id], 
                CreateRef(Context.Customers, row(T1.[City_Customers.City_Customers_Target.Id]), [Karenbic.DataAccess.Customer]) AS [City_Customers.City_Customers_Target]
            FROM (
                SELECT 
                    T.City_Id AS [City_Customers.City_Customers_Source.Id], 
                    T.Id AS [City_Customers.City_Customers_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Customer AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.City_Province
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.City_Province", @"
    SELECT VALUE -- Constructing City_Province
        [Karenbic.DataAccess.City_Province](T3.[City_Province.City_Province_Source], T3.[City_Province.City_Province_Target])
    FROM (
        SELECT -- Constructing City_Province_Source
            CreateRef(Context.Cities, row(T2.[City_Province.City_Province_Source.Id]), [Karenbic.DataAccess.City]) AS [City_Province.City_Province_Source], 
            T2.[City_Province.City_Province_Target]
        FROM (
            SELECT -- Constructing City_Province_Target
                T1.[City_Province.City_Province_Source.Id], 
                CreateRef(Context.Province, row(T1.[City_Province.City_Province_Target.Id]), [Karenbic.DataAccess.Province]) AS [City_Province.City_Province_Target]
            FROM (
                SELECT 
                    T.Id AS [City_Province.City_Province_Source.Id], 
                    T.Province_Id AS [City_Province.City_Province_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.City AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.CustomerGroup_Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.CustomerGroup_Customers", @"
    SELECT VALUE -- Constructing CustomerGroup_Customers
        [Karenbic.DataAccess.CustomerGroup_Customers](T3.[CustomerGroup_Customers.CustomerGroup_Customers_Source], T3.[CustomerGroup_Customers.CustomerGroup_Customers_Target])
    FROM (
        SELECT -- Constructing CustomerGroup_Customers_Source
            CreateRef(Context.CustomerGroups, row(T2.[CustomerGroup_Customers.CustomerGroup_Customers_Source.Id]), [Karenbic.DataAccess.CustomerGroup]) AS [CustomerGroup_Customers.CustomerGroup_Customers_Source], 
            T2.[CustomerGroup_Customers.CustomerGroup_Customers_Target]
        FROM (
            SELECT -- Constructing CustomerGroup_Customers_Target
                T1.[CustomerGroup_Customers.CustomerGroup_Customers_Source.Id], 
                CreateRef(Context.Customers, row(T1.[CustomerGroup_Customers.CustomerGroup_Customers_Target.Id]), [Karenbic.DataAccess.Customer]) AS [CustomerGroup_Customers.CustomerGroup_Customers_Target]
            FROM (
                SELECT 
                    T.Group_Id AS [CustomerGroup_Customers.CustomerGroup_Customers_Source.Id], 
                    T.Id AS [CustomerGroup_Customers.CustomerGroup_Customers_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Customer AS T
                WHERE T.Group_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.CustomerMessage_Sender
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.CustomerMessage_Sender", @"
    SELECT VALUE -- Constructing CustomerMessage_Sender
        [Karenbic.DataAccess.CustomerMessage_Sender](T3.[CustomerMessage_Sender.CustomerMessage_Sender_Source], T3.[CustomerMessage_Sender.CustomerMessage_Sender_Target])
    FROM (
        SELECT -- Constructing CustomerMessage_Sender_Source
            CreateRef(Context.Messages, row(T2.[CustomerMessage_Sender.CustomerMessage_Sender_Source.Id]), [Karenbic.DataAccess.CustomerMessage]) AS [CustomerMessage_Sender.CustomerMessage_Sender_Source], 
            T2.[CustomerMessage_Sender.CustomerMessage_Sender_Target]
        FROM (
            SELECT -- Constructing CustomerMessage_Sender_Target
                T1.[CustomerMessage_Sender.CustomerMessage_Sender_Source.Id], 
                CreateRef(Context.Customers, row(T1.[CustomerMessage_Sender.CustomerMessage_Sender_Target.Id]), [Karenbic.DataAccess.Customer]) AS [CustomerMessage_Sender.CustomerMessage_Sender_Target]
            FROM (
                SELECT 
                    T.Id AS [CustomerMessage_Sender.CustomerMessage_Sender_Source.Id], 
                    T.Sender_Id AS [CustomerMessage_Sender.CustomerMessage_Sender_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.tbl_CustomerMessage AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_DesktopPosition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_DesktopPosition", @"
    SELECT VALUE -- Constructing FormField_DesktopPosition
        [Karenbic.DataAccess.FormField_DesktopPosition](T3.[FormField_DesktopPosition.FormField_DesktopPosition_Source], T3.[FormField_DesktopPosition.FormField_DesktopPosition_Target])
    FROM (
        SELECT -- Constructing FormField_DesktopPosition_Source
            CreateRef(Context.FormFields, row(T2.[FormField_DesktopPosition.FormField_DesktopPosition_Source.Id]), [Karenbic.DataAccess.FormField]) AS [FormField_DesktopPosition.FormField_DesktopPosition_Source], 
            T2.[FormField_DesktopPosition.FormField_DesktopPosition_Target]
        FROM (
            SELECT -- Constructing FormField_DesktopPosition_Target
                T1.[FormField_DesktopPosition.FormField_DesktopPosition_Source.Id], 
                CreateRef(Context.FormField_Position_Desktop, row(T1.[FormField_DesktopPosition.FormField_DesktopPosition_Target.Id]), [Karenbic.DataAccess.FormField_Position_Desktop]) AS [FormField_DesktopPosition.FormField_DesktopPosition_Target]
            FROM (
                SELECT 
                    T.Id AS [FormField_DesktopPosition.FormField_DesktopPosition_Source.Id], 
                    T.DesktopPosition_Id AS [FormField_DesktopPosition.FormField_DesktopPosition_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.FormField AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_Form
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_Form", @"
    SELECT VALUE -- Constructing FormField_Form
        [Karenbic.DataAccess.FormField_Form](T3.[FormField_Form.FormField_Form_Source], T3.[FormField_Form.FormField_Form_Target])
    FROM (
        SELECT -- Constructing FormField_Form_Source
            CreateRef(Context.FormFields, row(T2.[FormField_Form.FormField_Form_Source.Id]), [Karenbic.DataAccess.FormField]) AS [FormField_Form.FormField_Form_Source], 
            T2.[FormField_Form.FormField_Form_Target]
        FROM (
            SELECT -- Constructing FormField_Form_Target
                T1.[FormField_Form.FormField_Form_Source.Id], 
                CreateRef(Context.Forms, row(T1.[FormField_Form.FormField_Form_Target.Id]), [Karenbic.DataAccess.Form]) AS [FormField_Form.FormField_Form_Target]
            FROM (
                SELECT 
                    T.Id AS [FormField_Form.FormField_Form_Source.Id], 
                    T.Form_Id AS [FormField_Form.FormField_Form_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.FormField AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_MobilePosition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_MobilePosition", @"
    SELECT VALUE -- Constructing FormField_MobilePosition
        [Karenbic.DataAccess.FormField_MobilePosition](T3.[FormField_MobilePosition.FormField_MobilePosition_Source], T3.[FormField_MobilePosition.FormField_MobilePosition_Target])
    FROM (
        SELECT -- Constructing FormField_MobilePosition_Source
            CreateRef(Context.FormFields, row(T2.[FormField_MobilePosition.FormField_MobilePosition_Source.Id]), [Karenbic.DataAccess.FormField]) AS [FormField_MobilePosition.FormField_MobilePosition_Source], 
            T2.[FormField_MobilePosition.FormField_MobilePosition_Target]
        FROM (
            SELECT -- Constructing FormField_MobilePosition_Target
                T1.[FormField_MobilePosition.FormField_MobilePosition_Source.Id], 
                CreateRef(Context.FormField_Position_Mobile, row(T1.[FormField_MobilePosition.FormField_MobilePosition_Target.Id]), [Karenbic.DataAccess.FormField_Position_Mobile]) AS [FormField_MobilePosition.FormField_MobilePosition_Target]
            FROM (
                SELECT 
                    T.Id AS [FormField_MobilePosition.FormField_MobilePosition_Source.Id], 
                    T.MobilePosition_Id AS [FormField_MobilePosition.FormField_MobilePosition_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.FormField AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.Order_Value_Order
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Order_Value_Order", @"
    SELECT VALUE -- Constructing Order_Value_Order
        [Karenbic.DataAccess.Order_Value_Order](T3.[Order_Value_Order.Order_Value_Order_Source], T3.[Order_Value_Order.Order_Value_Order_Target])
    FROM (
        SELECT -- Constructing Order_Value_Order_Source
            CreateRef(Context.Order_Values, row(T2.[Order_Value_Order.Order_Value_Order_Source.Id]), [Karenbic.DataAccess.Order_Value]) AS [Order_Value_Order.Order_Value_Order_Source], 
            T2.[Order_Value_Order.Order_Value_Order_Target]
        FROM (
            SELECT -- Constructing Order_Value_Order_Target
                T1.[Order_Value_Order.Order_Value_Order_Source.Id], 
                CreateRef(Context.Orders, row(T1.[Order_Value_Order.Order_Value_Order_Target.Id]), [Karenbic.DataAccess.Order]) AS [Order_Value_Order.Order_Value_Order_Target]
            FROM (
                SELECT 
                    T.Id AS [Order_Value_Order.Order_Value_Order_Source.Id], 
                    T.Order_Id AS [Order_Value_Order.Order_Value_Order_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Order_Value AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_CheckBoxGroup_Item_CheckBoxGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_CheckBoxGroup_Item_CheckBoxGroup", "\r\n    SELECT VALUE -- Constructing FormField_CheckBoxGroup_Item_CheckBoxGroup\r\n  " +
                    "      [Karenbic.DataAccess.FormField_CheckBoxGroup_Item_CheckBoxGroup](T3.[FormF" +
                    "ield_CheckBoxGroup_Item_CheckBoxGroup.FormField_CheckBoxGroup_Item_CheckBoxGroup" +
                    "_Source], T3.[FormField_CheckBoxGroup_Item_CheckBoxGroup.FormField_CheckBoxGroup" +
                    "_Item_CheckBoxGroup_Target])\r\n    FROM (\r\n        SELECT -- Constructing FormFie" +
                    "ld_CheckBoxGroup_Item_CheckBoxGroup_Source\r\n            CreateRef(Context.FormFi" +
                    "eld_CheckBoxGroup_Items, row(T2.[FormField_CheckBoxGroup_Item_CheckBoxGroup.Form" +
                    "Field_CheckBoxGroup_Item_CheckBoxGroup_Source.Id]), [Karenbic.DataAccess.FormFie" +
                    "ld_CheckBoxGroup_Item]) AS [FormField_CheckBoxGroup_Item_CheckBoxGroup.FormField" +
                    "_CheckBoxGroup_Item_CheckBoxGroup_Source], \r\n            T2.[FormField_CheckBoxG" +
                    "roup_Item_CheckBoxGroup.FormField_CheckBoxGroup_Item_CheckBoxGroup_Target]\r\n    " +
                    "    FROM (\r\n            SELECT -- Constructing FormField_CheckBoxGroup_Item_Chec" +
                    "kBoxGroup_Target\r\n                T1.[FormField_CheckBoxGroup_Item_CheckBoxGroup" +
                    ".FormField_CheckBoxGroup_Item_CheckBoxGroup_Source.Id], \r\n                Create" +
                    "Ref(Context.FormFields, row(T1.[FormField_CheckBoxGroup_Item_CheckBoxGroup.FormF" +
                    "ield_CheckBoxGroup_Item_CheckBoxGroup_Target.Id]), [Karenbic.DataAccess.FormFiel" +
                    "d_CheckBoxGroup]) AS [FormField_CheckBoxGroup_Item_CheckBoxGroup.FormField_Check" +
                    "BoxGroup_Item_CheckBoxGroup_Target]\r\n            FROM (\r\n                SELECT " +
                    "\r\n                    T.Id AS [FormField_CheckBoxGroup_Item_CheckBoxGroup.FormFi" +
                    "eld_CheckBoxGroup_Item_CheckBoxGroup_Source.Id], \r\n                    T.CheckBo" +
                    "xGroup_Id AS [FormField_CheckBoxGroup_Item_CheckBoxGroup.FormField_CheckBoxGroup" +
                    "_Item_CheckBoxGroup_Target.Id], \r\n                    True AS _from0\r\n          " +
                    "      FROM CodeFirstDatabase.FormField_CheckBoxGroup_Item AS T\r\n            ) AS" +
                    " T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_CheckBoxGroup_Item_Orders_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_CheckBoxGroup_Item_Orders_Value", "\r\n    SELECT VALUE -- Constructing FormField_CheckBoxGroup_Item_Orders_Value\r\n   " +
                    "     [Karenbic.DataAccess.FormField_CheckBoxGroup_Item_Orders_Value](T3.[FormFie" +
                    "ld_CheckBoxGroup_Item_Orders_Value.FormField_CheckBoxGroup_Item_Orders_Value_Sou" +
                    "rce], T3.[FormField_CheckBoxGroup_Item_Orders_Value.FormField_CheckBoxGroup_Item" +
                    "_Orders_Value_Target])\r\n    FROM (\r\n        SELECT -- Constructing FormField_Che" +
                    "ckBoxGroup_Item_Orders_Value_Source\r\n            CreateRef(Context.FormField_Che" +
                    "ckBoxGroup_Items, row(T2.[FormField_CheckBoxGroup_Item_Orders_Value.FormField_Ch" +
                    "eckBoxGroup_Item_Orders_Value_Source.Id]), [Karenbic.DataAccess.FormField_CheckB" +
                    "oxGroup_Item]) AS [FormField_CheckBoxGroup_Item_Orders_Value.FormField_CheckBoxG" +
                    "roup_Item_Orders_Value_Source], \r\n            T2.[FormField_CheckBoxGroup_Item_O" +
                    "rders_Value.FormField_CheckBoxGroup_Item_Orders_Value_Target]\r\n        FROM (\r\n " +
                    "           SELECT -- Constructing FormField_CheckBoxGroup_Item_Orders_Value_Targ" +
                    "et\r\n                T1.[FormField_CheckBoxGroup_Item_Orders_Value.FormField_Chec" +
                    "kBoxGroup_Item_Orders_Value_Source.Id], \r\n                CreateRef(Context.Orde" +
                    "r_Values, row(T1.[FormField_CheckBoxGroup_Item_Orders_Value.FormField_CheckBoxGr" +
                    "oup_Item_Orders_Value_Target.Id]), [Karenbic.DataAccess.Order_Value_CheckboxGrou" +
                    "p]) AS [FormField_CheckBoxGroup_Item_Orders_Value.FormField_CheckBoxGroup_Item_O" +
                    "rders_Value_Target]\r\n            FROM (\r\n                SELECT \r\n              " +
                    "      T.Order_Value_CheckBoxGroup_Id AS [FormField_CheckBoxGroup_Item_Orders_Val" +
                    "ue.FormField_CheckBoxGroup_Item_Orders_Value_Source.Id], \r\n                    T" +
                    ".FormField_CheckBoxGroup_Item_Id AS [FormField_CheckBoxGroup_Item_Orders_Value.F" +
                    "ormField_CheckBoxGroup_Item_Orders_Value_Target.Id], \r\n                    True " +
                    "AS _from0\r\n                FROM CodeFirstDatabase.FormField_CheckBoxGroup_ItemOr" +
                    "der_Value_CheckboxGroup AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_DropDown_Item_DropDown
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_DropDown_Item_DropDown", "\r\n    SELECT VALUE -- Constructing FormField_DropDown_Item_DropDown\r\n        [Kar" +
                    "enbic.DataAccess.FormField_DropDown_Item_DropDown](T3.[FormField_DropDown_Item_D" +
                    "ropDown.FormField_DropDown_Item_DropDown_Source], T3.[FormField_DropDown_Item_Dr" +
                    "opDown.FormField_DropDown_Item_DropDown_Target])\r\n    FROM (\r\n        SELECT -- " +
                    "Constructing FormField_DropDown_Item_DropDown_Source\r\n            CreateRef(Cont" +
                    "ext.FormField_DropDown_Items, row(T2.[FormField_DropDown_Item_DropDown.FormField" +
                    "_DropDown_Item_DropDown_Source.Id]), [Karenbic.DataAccess.FormField_DropDown_Ite" +
                    "m]) AS [FormField_DropDown_Item_DropDown.FormField_DropDown_Item_DropDown_Source" +
                    "], \r\n            T2.[FormField_DropDown_Item_DropDown.FormField_DropDown_Item_Dr" +
                    "opDown_Target]\r\n        FROM (\r\n            SELECT -- Constructing FormField_Dro" +
                    "pDown_Item_DropDown_Target\r\n                T1.[FormField_DropDown_Item_DropDown" +
                    ".FormField_DropDown_Item_DropDown_Source.Id], \r\n                CreateRef(Contex" +
                    "t.FormFields, row(T1.[FormField_DropDown_Item_DropDown.FormField_DropDown_Item_D" +
                    "ropDown_Target.Id]), [Karenbic.DataAccess.FormField_DropDown]) AS [FormField_Dro" +
                    "pDown_Item_DropDown.FormField_DropDown_Item_DropDown_Target]\r\n            FROM (" +
                    "\r\n                SELECT \r\n                    T.Id AS [FormField_DropDown_Item_" +
                    "DropDown.FormField_DropDown_Item_DropDown_Source.Id], \r\n                    T.Dr" +
                    "opDown_Id AS [FormField_DropDown_Item_DropDown.FormField_DropDown_Item_DropDown_" +
                    "Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFirst" +
                    "Database.FormField_DropDown_Item AS T\r\n            ) AS T1\r\n        ) AS T2\r\n   " +
                    " ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_DropDown_Item_Orders_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_DropDown_Item_Orders_Value", "\r\n    SELECT VALUE -- Constructing FormField_DropDown_Item_Orders_Value\r\n        " +
                    "[Karenbic.DataAccess.FormField_DropDown_Item_Orders_Value](T3.[FormField_DropDow" +
                    "n_Item_Orders_Value.FormField_DropDown_Item_Orders_Value_Source], T3.[FormField_" +
                    "DropDown_Item_Orders_Value.FormField_DropDown_Item_Orders_Value_Target])\r\n    FR" +
                    "OM (\r\n        SELECT -- Constructing FormField_DropDown_Item_Orders_Value_Source" +
                    "\r\n            CreateRef(Context.FormField_DropDown_Items, row(T2.[FormField_Drop" +
                    "Down_Item_Orders_Value.FormField_DropDown_Item_Orders_Value_Source.Id]), [Karenb" +
                    "ic.DataAccess.FormField_DropDown_Item]) AS [FormField_DropDown_Item_Orders_Value" +
                    ".FormField_DropDown_Item_Orders_Value_Source], \r\n            T2.[FormField_DropD" +
                    "own_Item_Orders_Value.FormField_DropDown_Item_Orders_Value_Target]\r\n        FROM" +
                    " (\r\n            SELECT -- Constructing FormField_DropDown_Item_Orders_Value_Targ" +
                    "et\r\n                T1.[FormField_DropDown_Item_Orders_Value.FormField_DropDown_" +
                    "Item_Orders_Value_Source.Id], \r\n                CreateRef(Context.Order_Values, " +
                    "row(T1.[FormField_DropDown_Item_Orders_Value.FormField_DropDown_Item_Orders_Valu" +
                    "e_Target.Id]), [Karenbic.DataAccess.Order_Value_DropDown]) AS [FormField_DropDow" +
                    "n_Item_Orders_Value.FormField_DropDown_Item_Orders_Value_Target]\r\n            FR" +
                    "OM (\r\n                SELECT \r\n                    T.Value_Id AS [FormField_Drop" +
                    "Down_Item_Orders_Value.FormField_DropDown_Item_Orders_Value_Source.Id], \r\n      " +
                    "              T.Id AS [FormField_DropDown_Item_Orders_Value.FormField_DropDown_I" +
                    "tem_Orders_Value_Target.Id], \r\n                    True AS _from0\r\n             " +
                    "   FROM CodeFirstDatabase.tbl_Order_Value_DropDown AS T\r\n                WHERE T" +
                    ".Value_Id IS NOT NULL\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_RadioButtonGroup_Item_Orders_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_RadioButtonGroup_Item_Orders_Value", "\r\n    SELECT VALUE -- Constructing FormField_RadioButtonGroup_Item_Orders_Value\r\n" +
                    "        [Karenbic.DataAccess.FormField_RadioButtonGroup_Item_Orders_Value](T3.[F" +
                    "ormField_RadioButtonGroup_Item_Orders_Value.FormField_RadioButtonGroup_Item_Orde" +
                    "rs_Value_Source], T3.[FormField_RadioButtonGroup_Item_Orders_Value.FormField_Rad" +
                    "ioButtonGroup_Item_Orders_Value_Target])\r\n    FROM (\r\n        SELECT -- Construc" +
                    "ting FormField_RadioButtonGroup_Item_Orders_Value_Source\r\n            CreateRef(" +
                    "Context.FormField_RadioButtonGroup_Items, row(T2.[FormField_RadioButtonGroup_Ite" +
                    "m_Orders_Value.FormField_RadioButtonGroup_Item_Orders_Value_Source.Id]), [Karenb" +
                    "ic.DataAccess.FormField_RadioButtonGroup_Item]) AS [FormField_RadioButtonGroup_I" +
                    "tem_Orders_Value.FormField_RadioButtonGroup_Item_Orders_Value_Source], \r\n       " +
                    "     T2.[FormField_RadioButtonGroup_Item_Orders_Value.FormField_RadioButtonGroup" +
                    "_Item_Orders_Value_Target]\r\n        FROM (\r\n            SELECT -- Constructing F" +
                    "ormField_RadioButtonGroup_Item_Orders_Value_Target\r\n                T1.[FormFiel" +
                    "d_RadioButtonGroup_Item_Orders_Value.FormField_RadioButtonGroup_Item_Orders_Valu" +
                    "e_Source.Id], \r\n                CreateRef(Context.Order_Values, row(T1.[FormFiel" +
                    "d_RadioButtonGroup_Item_Orders_Value.FormField_RadioButtonGroup_Item_Orders_Valu" +
                    "e_Target.Id]), [Karenbic.DataAccess.Order_Value_RadioButtonGroup]) AS [FormField" +
                    "_RadioButtonGroup_Item_Orders_Value.FormField_RadioButtonGroup_Item_Orders_Value" +
                    "_Target]\r\n            FROM (\r\n                SELECT \r\n                    T.Val" +
                    "ue_Id AS [FormField_RadioButtonGroup_Item_Orders_Value.FormField_RadioButtonGrou" +
                    "p_Item_Orders_Value_Source.Id], \r\n                    T.Id AS [FormField_RadioBu" +
                    "ttonGroup_Item_Orders_Value.FormField_RadioButtonGroup_Item_Orders_Value_Target." +
                    "Id], \r\n                    True AS _from0\r\n                FROM CodeFirstDatabas" +
                    "e.tbl_Order_Value_RadioButtonGroup AS T\r\n                WHERE T.Value_Id IS NOT" +
                    " NULL\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_RadioButtonGroup_Item_RadioButtonGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_RadioButtonGroup_Item_RadioButtonGroup", "\r\n    SELECT VALUE -- Constructing FormField_RadioButtonGroup_Item_RadioButtonGro" +
                    "up\r\n        [Karenbic.DataAccess.FormField_RadioButtonGroup_Item_RadioButtonGrou" +
                    "p](T3.[FormField_RadioButtonGroup_Item_RadioButtonGroup.FormField_RadioButtonGro" +
                    "up_Item_RadioButtonGroup_Source], T3.[FormField_RadioButtonGroup_Item_RadioButto" +
                    "nGroup.FormField_RadioButtonGroup_Item_RadioButtonGroup_Target])\r\n    FROM (\r\n  " +
                    "      SELECT -- Constructing FormField_RadioButtonGroup_Item_RadioButtonGroup_So" +
                    "urce\r\n            CreateRef(Context.FormField_RadioButtonGroup_Items, row(T2.[Fo" +
                    "rmField_RadioButtonGroup_Item_RadioButtonGroup.FormField_RadioButtonGroup_Item_R" +
                    "adioButtonGroup_Source.Id]), [Karenbic.DataAccess.FormField_RadioButtonGroup_Ite" +
                    "m]) AS [FormField_RadioButtonGroup_Item_RadioButtonGroup.FormField_RadioButtonGr" +
                    "oup_Item_RadioButtonGroup_Source], \r\n            T2.[FormField_RadioButtonGroup_" +
                    "Item_RadioButtonGroup.FormField_RadioButtonGroup_Item_RadioButtonGroup_Target]\r\n" +
                    "        FROM (\r\n            SELECT -- Constructing FormField_RadioButtonGroup_It" +
                    "em_RadioButtonGroup_Target\r\n                T1.[FormField_RadioButtonGroup_Item_" +
                    "RadioButtonGroup.FormField_RadioButtonGroup_Item_RadioButtonGroup_Source.Id], \r\n" +
                    "                CreateRef(Context.FormFields, row(T1.[FormField_RadioButtonGroup" +
                    "_Item_RadioButtonGroup.FormField_RadioButtonGroup_Item_RadioButtonGroup_Target.I" +
                    "d]), [Karenbic.DataAccess.FormField_RadioButtonGroup]) AS [FormField_RadioButton" +
                    "Group_Item_RadioButtonGroup.FormField_RadioButtonGroup_Item_RadioButtonGroup_Tar" +
                    "get]\r\n            FROM (\r\n                SELECT \r\n                    T.Id AS [" +
                    "FormField_RadioButtonGroup_Item_RadioButtonGroup.FormField_RadioButtonGroup_Item" +
                    "_RadioButtonGroup_Source.Id], \r\n                    T.RadioButtonGroup_Id AS [Fo" +
                    "rmField_RadioButtonGroup_Item_RadioButtonGroup.FormField_RadioButtonGroup_Item_R" +
                    "adioButtonGroup_Target.Id], \r\n                    True AS _from0\r\n              " +
                    "  FROM CodeFirstDatabase.FormField_RadioButtonGroup_Item AS T\r\n            ) AS " +
                    "T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_Orders_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_Orders_Value", @"
    SELECT VALUE -- Constructing FormField_Orders_Value
        [Karenbic.DataAccess.FormField_Orders_Value](T3.[FormField_Orders_Value.FormField_Orders_Value_Source], T3.[FormField_Orders_Value.FormField_Orders_Value_Target])
    FROM (
        SELECT -- Constructing FormField_Orders_Value_Source
            CreateRef(Context.FormFields, row(T2.[FormField_Orders_Value.FormField_Orders_Value_Source.Id]), [Karenbic.DataAccess.FormField]) AS [FormField_Orders_Value.FormField_Orders_Value_Source], 
            T2.[FormField_Orders_Value.FormField_Orders_Value_Target]
        FROM (
            SELECT -- Constructing FormField_Orders_Value_Target
                T1.[FormField_Orders_Value.FormField_Orders_Value_Source.Id], 
                CreateRef(Context.Order_Values, row(T1.[FormField_Orders_Value.FormField_Orders_Value_Target.Id]), [Karenbic.DataAccess.Order_Value]) AS [FormField_Orders_Value.FormField_Orders_Value_Target]
            FROM (
                SELECT 
                    T.Field_Id AS [FormField_Orders_Value.FormField_Orders_Value_Source.Id], 
                    T.Id AS [FormField_Orders_Value.FormField_Orders_Value_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Order_Value AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormField_TabletPosition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormField_TabletPosition", @"
    SELECT VALUE -- Constructing FormField_TabletPosition
        [Karenbic.DataAccess.FormField_TabletPosition](T3.[FormField_TabletPosition.FormField_TabletPosition_Source], T3.[FormField_TabletPosition.FormField_TabletPosition_Target])
    FROM (
        SELECT -- Constructing FormField_TabletPosition_Source
            CreateRef(Context.FormFields, row(T2.[FormField_TabletPosition.FormField_TabletPosition_Source.Id]), [Karenbic.DataAccess.FormField]) AS [FormField_TabletPosition.FormField_TabletPosition_Source], 
            T2.[FormField_TabletPosition.FormField_TabletPosition_Target]
        FROM (
            SELECT -- Constructing FormField_TabletPosition_Target
                T1.[FormField_TabletPosition.FormField_TabletPosition_Source.Id], 
                CreateRef(Context.FormField_Position_Tablet, row(T1.[FormField_TabletPosition.FormField_TabletPosition_Target.Id]), [Karenbic.DataAccess.FormField_Position_Tablet]) AS [FormField_TabletPosition.FormField_TabletPosition_Target]
            FROM (
                SELECT 
                    T.Id AS [FormField_TabletPosition.FormField_TabletPosition_Source.Id], 
                    T.TabletPosition_Id AS [FormField_TabletPosition.FormField_TabletPosition_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.FormField AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FileFormat_FileUploaders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FileFormat_FileUploaders", @"
    SELECT VALUE -- Constructing FileFormat_FileUploaders
        [Karenbic.DataAccess.FileFormat_FileUploaders](T3.[FileFormat_FileUploaders.FileFormat_FileUploaders_Source], T3.[FileFormat_FileUploaders.FileFormat_FileUploaders_Target])
    FROM (
        SELECT -- Constructing FileFormat_FileUploaders_Source
            CreateRef(Context.FileFormats, row(T2.[FileFormat_FileUploaders.FileFormat_FileUploaders_Source.Id]), [Karenbic.DataAccess.FileFormat]) AS [FileFormat_FileUploaders.FileFormat_FileUploaders_Source], 
            T2.[FileFormat_FileUploaders.FileFormat_FileUploaders_Target]
        FROM (
            SELECT -- Constructing FileFormat_FileUploaders_Target
                T1.[FileFormat_FileUploaders.FileFormat_FileUploaders_Source.Id], 
                CreateRef(Context.FormFields, row(T1.[FileFormat_FileUploaders.FileFormat_FileUploaders_Target.Id]), [Karenbic.DataAccess.FormField_FileUploader]) AS [FileFormat_FileUploaders.FileFormat_FileUploaders_Target]
            FROM (
                SELECT 
                    T.FormField_FileUploader_Id AS [FileFormat_FileUploaders.FileFormat_FileUploaders_Source.Id], 
                    T.FileFormat_Id AS [FileFormat_FileUploaders.FileFormat_FileUploaders_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.FileFormatFormField_FileUploader AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.FormGroup_Forms
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.FormGroup_Forms", @"
    SELECT VALUE -- Constructing FormGroup_Forms
        [Karenbic.DataAccess.FormGroup_Forms](T3.[FormGroup_Forms.FormGroup_Forms_Source], T3.[FormGroup_Forms.FormGroup_Forms_Target])
    FROM (
        SELECT -- Constructing FormGroup_Forms_Source
            CreateRef(Context.FormGroups, row(T2.[FormGroup_Forms.FormGroup_Forms_Source.Id]), [Karenbic.DataAccess.FormGroup]) AS [FormGroup_Forms.FormGroup_Forms_Source], 
            T2.[FormGroup_Forms.FormGroup_Forms_Target]
        FROM (
            SELECT -- Constructing FormGroup_Forms_Target
                T1.[FormGroup_Forms.FormGroup_Forms_Source.Id], 
                CreateRef(Context.Forms, row(T1.[FormGroup_Forms.FormGroup_Forms_Target.Id]), [Karenbic.DataAccess.Form]) AS [FormGroup_Forms.FormGroup_Forms_Target]
            FROM (
                SELECT 
                    T.Group_Id AS [FormGroup_Forms.FormGroup_Forms_Source.Id], 
                    T.Id AS [FormGroup_Forms.FormGroup_Forms_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Form AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.Form_Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Form_Orders", @"
    SELECT VALUE -- Constructing Form_Orders
        [Karenbic.DataAccess.Form_Orders](T3.[Form_Orders.Form_Orders_Source], T3.[Form_Orders.Form_Orders_Target])
    FROM (
        SELECT -- Constructing Form_Orders_Source
            CreateRef(Context.Forms, row(T2.[Form_Orders.Form_Orders_Source.Id]), [Karenbic.DataAccess.Form]) AS [Form_Orders.Form_Orders_Source], 
            T2.[Form_Orders.Form_Orders_Target]
        FROM (
            SELECT -- Constructing Form_Orders_Target
                T1.[Form_Orders.Form_Orders_Source.Id], 
                CreateRef(Context.Orders, row(T1.[Form_Orders.Form_Orders_Target.Id]), [Karenbic.DataAccess.Order]) AS [Form_Orders.Form_Orders_Target]
            FROM (
                SELECT 
                    T.Form_Id AS [Form_Orders.Form_Orders_Source.Id], 
                    T.Id AS [Form_Orders.Form_Orders_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.[Order] AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.DesignOrder_Design_File_Design
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignOrder_Design_File_Design", "\r\n    SELECT VALUE -- Constructing DesignOrder_Design_File_Design\r\n        [Karen" +
                    "bic.DataAccess.DesignOrder_Design_File_Design](T3.[DesignOrder_Design_File_Desig" +
                    "n.DesignOrder_Design_File_Design_Source], T3.[DesignOrder_Design_File_Design.Des" +
                    "ignOrder_Design_File_Design_Target])\r\n    FROM (\r\n        SELECT -- Constructing" +
                    " DesignOrder_Design_File_Design_Source\r\n            CreateRef(Context.DesignOrde" +
                    "r_Design_Files, row(T2.[DesignOrder_Design_File_Design.DesignOrder_Design_File_D" +
                    "esign_Source.Id]), [Karenbic.DataAccess.DesignOrder_Design_File]) AS [DesignOrde" +
                    "r_Design_File_Design.DesignOrder_Design_File_Design_Source], \r\n            T2.[D" +
                    "esignOrder_Design_File_Design.DesignOrder_Design_File_Design_Target]\r\n        FR" +
                    "OM (\r\n            SELECT -- Constructing DesignOrder_Design_File_Design_Target\r\n" +
                    "                T1.[DesignOrder_Design_File_Design.DesignOrder_Design_File_Desig" +
                    "n_Source.Id], \r\n                CreateRef(Context.DesignOrder_Designs, row(T1.[D" +
                    "esignOrder_Design_File_Design.DesignOrder_Design_File_Design_Target.Id]), [Karen" +
                    "bic.DataAccess.DesignOrder_Design]) AS [DesignOrder_Design_File_Design.DesignOrd" +
                    "er_Design_File_Design_Target]\r\n            FROM (\r\n                SELECT \r\n    " +
                    "                T.Id AS [DesignOrder_Design_File_Design.DesignOrder_Design_File_" +
                    "Design_Source.Id], \r\n                    T.Design_Id AS [DesignOrder_Design_File" +
                    "_Design.DesignOrder_Design_File_Design_Target.Id], \r\n                    True AS" +
                    " _from0\r\n                FROM CodeFirstDatabase.DesignOrder_Design_File AS T\r\n  " +
                    "          ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.DesignOrder_Design_Order
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignOrder_Design_Order", @"
    SELECT VALUE -- Constructing DesignOrder_Design_Order
        [Karenbic.DataAccess.DesignOrder_Design_Order](T3.[DesignOrder_Design_Order.DesignOrder_Design_Order_Source], T3.[DesignOrder_Design_Order.DesignOrder_Design_Order_Target])
    FROM (
        SELECT -- Constructing DesignOrder_Design_Order_Source
            CreateRef(Context.DesignOrder_Designs, row(T2.[DesignOrder_Design_Order.DesignOrder_Design_Order_Source.Id]), [Karenbic.DataAccess.DesignOrder_Design]) AS [DesignOrder_Design_Order.DesignOrder_Design_Order_Source], 
            T2.[DesignOrder_Design_Order.DesignOrder_Design_Order_Target]
        FROM (
            SELECT -- Constructing DesignOrder_Design_Order_Target
                T1.[DesignOrder_Design_Order.DesignOrder_Design_Order_Source.Id], 
                CreateRef(Context.Orders, row(T1.[DesignOrder_Design_Order.DesignOrder_Design_Order_Target.Id]), [Karenbic.DataAccess.DesignOrder]) AS [DesignOrder_Design_Order.DesignOrder_Design_Order_Target]
            FROM (
                SELECT 
                    T.Id AS [DesignOrder_Design_Order.DesignOrder_Design_Order_Source.Id], 
                    T.Order_Id AS [DesignOrder_Design_Order.DesignOrder_Design_Order_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.DesignOrder_Design AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.DesignPayment_FinalFactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignPayment_FinalFactors", @"
    SELECT VALUE -- Constructing DesignPayment_FinalFactors
        [Karenbic.DataAccess.DesignPayment_FinalFactors](T3.[DesignPayment_FinalFactors.DesignPayment_FinalFactors_Source], T3.[DesignPayment_FinalFactors.DesignPayment_FinalFactors_Target])
    FROM (
        SELECT -- Constructing DesignPayment_FinalFactors_Source
            CreateRef(Context.Payments, row(T2.[DesignPayment_FinalFactors.DesignPayment_FinalFactors_Source.Id]), [Karenbic.DataAccess.DesignPayment]) AS [DesignPayment_FinalFactors.DesignPayment_FinalFactors_Source], 
            T2.[DesignPayment_FinalFactors.DesignPayment_FinalFactors_Target]
        FROM (
            SELECT -- Constructing DesignPayment_FinalFactors_Target
                T1.[DesignPayment_FinalFactors.DesignPayment_FinalFactors_Source.Id], 
                CreateRef(Context.FinalDesignFactors, row(T1.[DesignPayment_FinalFactors.DesignPayment_FinalFactors_Target.Id]), [Karenbic.DataAccess.FinalDesignFactor]) AS [DesignPayment_FinalFactors.DesignPayment_FinalFactors_Target]
            FROM (
                SELECT 
                    T.Payment_Id AS [DesignPayment_FinalFactors.DesignPayment_FinalFactors_Source.Id], 
                    T.Id AS [DesignPayment_FinalFactors.DesignPayment_FinalFactors_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.FinalDesignFactor AS T
                WHERE T.Payment_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.DesignPayment_FinalItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignPayment_FinalItems", @"
    SELECT VALUE -- Constructing DesignPayment_FinalItems
        [Karenbic.DataAccess.DesignPayment_FinalItems](T3.[DesignPayment_FinalItems.DesignPayment_FinalItems_Source], T3.[DesignPayment_FinalItems.DesignPayment_FinalItems_Target])
    FROM (
        SELECT -- Constructing DesignPayment_FinalItems_Source
            CreateRef(Context.Payments, row(T2.[DesignPayment_FinalItems.DesignPayment_FinalItems_Source.Id]), [Karenbic.DataAccess.DesignPayment]) AS [DesignPayment_FinalItems.DesignPayment_FinalItems_Source], 
            T2.[DesignPayment_FinalItems.DesignPayment_FinalItems_Target]
        FROM (
            SELECT -- Constructing DesignPayment_FinalItems_Target
                T1.[DesignPayment_FinalItems.DesignPayment_FinalItems_Source.Id], 
                CreateRef(Context.FinalDesignPaymentItems, row(T1.[DesignPayment_FinalItems.DesignPayment_FinalItems_Target.id]), [Karenbic.DataAccess.FinalDesignPaymentItem]) AS [DesignPayment_FinalItems.DesignPayment_FinalItems_Target]
            FROM (
                SELECT 
                    T.Payment_Id AS [DesignPayment_FinalItems.DesignPayment_FinalItems_Source.Id], 
                    T.id AS [DesignPayment_FinalItems.DesignPayment_FinalItems_Target.id], 
                    True AS _from0
                FROM CodeFirstDatabase.FinalDesignPaymentItem AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.DesignPayment_PrepaymentFactors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignPayment_PrepaymentFactors", "\r\n    SELECT VALUE -- Constructing DesignPayment_PrepaymentFactors\r\n        [Kare" +
                    "nbic.DataAccess.DesignPayment_PrepaymentFactors](T3.[DesignPayment_PrepaymentFac" +
                    "tors.DesignPayment_PrepaymentFactors_Source], T3.[DesignPayment_PrepaymentFactor" +
                    "s.DesignPayment_PrepaymentFactors_Target])\r\n    FROM (\r\n        SELECT -- Constr" +
                    "ucting DesignPayment_PrepaymentFactors_Source\r\n            CreateRef(Context.Pay" +
                    "ments, row(T2.[DesignPayment_PrepaymentFactors.DesignPayment_PrepaymentFactors_S" +
                    "ource.Id]), [Karenbic.DataAccess.DesignPayment]) AS [DesignPayment_PrepaymentFac" +
                    "tors.DesignPayment_PrepaymentFactors_Source], \r\n            T2.[DesignPayment_Pr" +
                    "epaymentFactors.DesignPayment_PrepaymentFactors_Target]\r\n        FROM (\r\n       " +
                    "     SELECT -- Constructing DesignPayment_PrepaymentFactors_Target\r\n            " +
                    "    T1.[DesignPayment_PrepaymentFactors.DesignPayment_PrepaymentFactors_Source.I" +
                    "d], \r\n                CreateRef(Context.PrepaymentDesignFactors, row(T1.[DesignP" +
                    "ayment_PrepaymentFactors.DesignPayment_PrepaymentFactors_Target.Id]), [Karenbic." +
                    "DataAccess.PrepaymentDesignFactor]) AS [DesignPayment_PrepaymentFactors.DesignPa" +
                    "yment_PrepaymentFactors_Target]\r\n            FROM (\r\n                SELECT \r\n  " +
                    "                  T.Payment_Id AS [DesignPayment_PrepaymentFactors.DesignPayment" +
                    "_PrepaymentFactors_Source.Id], \r\n                    T.Id AS [DesignPayment_Prep" +
                    "aymentFactors.DesignPayment_PrepaymentFactors_Target.Id], \r\n                    " +
                    "True AS _from0\r\n                FROM CodeFirstDatabase.PrepaymentDesignFactor AS" +
                    " T\r\n                WHERE T.Payment_Id IS NOT NULL\r\n            ) AS T1\r\n       " +
                    " ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.DesignPayment_PrepaymentItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.DesignPayment_PrepaymentItems", "\r\n    SELECT VALUE -- Constructing DesignPayment_PrepaymentItems\r\n        [Karenb" +
                    "ic.DataAccess.DesignPayment_PrepaymentItems](T3.[DesignPayment_PrepaymentItems.D" +
                    "esignPayment_PrepaymentItems_Source], T3.[DesignPayment_PrepaymentItems.DesignPa" +
                    "yment_PrepaymentItems_Target])\r\n    FROM (\r\n        SELECT -- Constructing Desig" +
                    "nPayment_PrepaymentItems_Source\r\n            CreateRef(Context.Payments, row(T2." +
                    "[DesignPayment_PrepaymentItems.DesignPayment_PrepaymentItems_Source.Id]), [Karen" +
                    "bic.DataAccess.DesignPayment]) AS [DesignPayment_PrepaymentItems.DesignPayment_P" +
                    "repaymentItems_Source], \r\n            T2.[DesignPayment_PrepaymentItems.DesignPa" +
                    "yment_PrepaymentItems_Target]\r\n        FROM (\r\n            SELECT -- Constructin" +
                    "g DesignPayment_PrepaymentItems_Target\r\n                T1.[DesignPayment_Prepay" +
                    "mentItems.DesignPayment_PrepaymentItems_Source.Id], \r\n                CreateRef(" +
                    "Context.PrepaymentDesignPaymentItems, row(T1.[DesignPayment_PrepaymentItems.Desi" +
                    "gnPayment_PrepaymentItems_Target.id]), [Karenbic.DataAccess.PrepaymentDesignPaym" +
                    "entItem]) AS [DesignPayment_PrepaymentItems.DesignPayment_PrepaymentItems_Target" +
                    "]\r\n            FROM (\r\n                SELECT \r\n                    T.Payment_Id" +
                    " AS [DesignPayment_PrepaymentItems.DesignPayment_PrepaymentItems_Source.Id], \r\n " +
                    "                   T.id AS [DesignPayment_PrepaymentItems.DesignPayment_Prepayme" +
                    "ntItems_Target.id], \r\n                    True AS _from0\r\n                FROM C" +
                    "odeFirstDatabase.PrepaymentDesignPaymentItem AS T\r\n            ) AS T1\r\n        " +
                    ") AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.PrintPaymentItem_Payment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.PrintPaymentItem_Payment", @"
    SELECT VALUE -- Constructing PrintPaymentItem_Payment
        [Karenbic.DataAccess.PrintPaymentItem_Payment](T3.[PrintPaymentItem_Payment.PrintPaymentItem_Payment_Source], T3.[PrintPaymentItem_Payment.PrintPaymentItem_Payment_Target])
    FROM (
        SELECT -- Constructing PrintPaymentItem_Payment_Source
            CreateRef(Context.PrintPaymentItems, row(T2.[PrintPaymentItem_Payment.PrintPaymentItem_Payment_Source.id]), [Karenbic.DataAccess.PrintPaymentItem]) AS [PrintPaymentItem_Payment.PrintPaymentItem_Payment_Source], 
            T2.[PrintPaymentItem_Payment.PrintPaymentItem_Payment_Target]
        FROM (
            SELECT -- Constructing PrintPaymentItem_Payment_Target
                T1.[PrintPaymentItem_Payment.PrintPaymentItem_Payment_Source.id], 
                CreateRef(Context.Payments, row(T1.[PrintPaymentItem_Payment.PrintPaymentItem_Payment_Target.Id]), [Karenbic.DataAccess.PrintPayment]) AS [PrintPaymentItem_Payment.PrintPaymentItem_Payment_Target]
            FROM (
                SELECT 
                    T.id AS [PrintPaymentItem_Payment.PrintPaymentItem_Payment_Source.id], 
                    T.Payment_Id AS [PrintPaymentItem_Payment.PrintPaymentItem_Payment_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.PrintPaymentItem AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.PrintFactor_Payment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.PrintFactor_Payment", @"
    SELECT VALUE -- Constructing PrintFactor_Payment
        [Karenbic.DataAccess.PrintFactor_Payment](T3.[PrintFactor_Payment.PrintFactor_Payment_Source], T3.[PrintFactor_Payment.PrintFactor_Payment_Target])
    FROM (
        SELECT -- Constructing PrintFactor_Payment_Source
            CreateRef(Context.PrintFactors, row(T2.[PrintFactor_Payment.PrintFactor_Payment_Source.Id]), [Karenbic.DataAccess.PrintFactor]) AS [PrintFactor_Payment.PrintFactor_Payment_Source], 
            T2.[PrintFactor_Payment.PrintFactor_Payment_Target]
        FROM (
            SELECT -- Constructing PrintFactor_Payment_Target
                T1.[PrintFactor_Payment.PrintFactor_Payment_Source.Id], 
                CreateRef(Context.Payments, row(T1.[PrintFactor_Payment.PrintFactor_Payment_Target.Id]), [Karenbic.DataAccess.PrintPayment]) AS [PrintFactor_Payment.PrintFactor_Payment_Target]
            FROM (
                SELECT 
                    T.Id AS [PrintFactor_Payment.PrintFactor_Payment_Source.Id], 
                    T.Payment_Id AS [PrintFactor_Payment.PrintFactor_Payment_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.PrintFactor AS T
                WHERE T.Payment_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.Customer_Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Customer_Orders", @"
    SELECT VALUE -- Constructing Customer_Orders
        [Karenbic.DataAccess.Customer_Orders](T3.[Customer_Orders.Customer_Orders_Source], T3.[Customer_Orders.Customer_Orders_Target])
    FROM (
        SELECT -- Constructing Customer_Orders_Source
            CreateRef(Context.Customers, row(T2.[Customer_Orders.Customer_Orders_Source.Id]), [Karenbic.DataAccess.Customer]) AS [Customer_Orders.Customer_Orders_Source], 
            T2.[Customer_Orders.Customer_Orders_Target]
        FROM (
            SELECT -- Constructing Customer_Orders_Target
                T1.[Customer_Orders.Customer_Orders_Source.Id], 
                CreateRef(Context.Orders, row(T1.[Customer_Orders.Customer_Orders_Target.Id]), [Karenbic.DataAccess.Order]) AS [Customer_Orders.Customer_Orders_Target]
            FROM (
                SELECT 
                    T.Customer_Id AS [Customer_Orders.Customer_Orders_Source.Id], 
                    T.Id AS [Customer_Orders.Customer_Orders_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.[Order] AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.AdminMessage_Customer_Customer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.AdminMessage_Customer_Customer", "\r\n    SELECT VALUE -- Constructing AdminMessage_Customer_Customer\r\n        [Karen" +
                    "bic.DataAccess.AdminMessage_Customer_Customer](T3.[AdminMessage_Customer_Custome" +
                    "r.AdminMessage_Customer_Customer_Source], T3.[AdminMessage_Customer_Customer.Adm" +
                    "inMessage_Customer_Customer_Target])\r\n    FROM (\r\n        SELECT -- Constructing" +
                    " AdminMessage_Customer_Customer_Source\r\n            CreateRef(Context.Messages, " +
                    "row(T2.[AdminMessage_Customer_Customer.AdminMessage_Customer_Customer_Source.Id]" +
                    "), [Karenbic.DataAccess.AdminMessage_Customer]) AS [AdminMessage_Customer_Custom" +
                    "er.AdminMessage_Customer_Customer_Source], \r\n            T2.[AdminMessage_Custom" +
                    "er_Customer.AdminMessage_Customer_Customer_Target]\r\n        FROM (\r\n            " +
                    "SELECT -- Constructing AdminMessage_Customer_Customer_Target\r\n                T1" +
                    ".[AdminMessage_Customer_Customer.AdminMessage_Customer_Customer_Source.Id], \r\n  " +
                    "              CreateRef(Context.Customers, row(T1.[AdminMessage_Customer_Custome" +
                    "r.AdminMessage_Customer_Customer_Target.Id]), [Karenbic.DataAccess.Customer]) AS" +
                    " [AdminMessage_Customer_Customer.AdminMessage_Customer_Customer_Target]\r\n       " +
                    "     FROM (\r\n                SELECT \r\n                    T.Id AS [AdminMessage_" +
                    "Customer_Customer.AdminMessage_Customer_Customer_Source.Id], \r\n                 " +
                    "   T.Customer_Id AS [AdminMessage_Customer_Customer.AdminMessage_Customer_Custom" +
                    "er_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFi" +
                    "rstDatabase.tbl_AdminMessage_Customer AS T\r\n            ) AS T1\r\n        ) AS T2" +
                    "\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.AdminMessage_Admin_AdminMessages_Customer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.AdminMessage_Admin_AdminMessages_Customer", "\r\n    SELECT VALUE -- Constructing AdminMessage_Admin_AdminMessages_Customer\r\n   " +
                    "     [Karenbic.DataAccess.AdminMessage_Admin_AdminMessages_Customer](T3.[AdminMe" +
                    "ssage_Admin_AdminMessages_Customer.AdminMessage_Admin_AdminMessages_Customer_Sou" +
                    "rce], T3.[AdminMessage_Admin_AdminMessages_Customer.AdminMessage_Admin_AdminMess" +
                    "ages_Customer_Target])\r\n    FROM (\r\n        SELECT -- Constructing AdminMessage_" +
                    "Admin_AdminMessages_Customer_Source\r\n            CreateRef(Context.Messages, row" +
                    "(T2.[AdminMessage_Admin_AdminMessages_Customer.AdminMessage_Admin_AdminMessages_" +
                    "Customer_Source.Id]), [Karenbic.DataAccess.AdminMessage_Admin]) AS [AdminMessage" +
                    "_Admin_AdminMessages_Customer.AdminMessage_Admin_AdminMessages_Customer_Source]," +
                    " \r\n            T2.[AdminMessage_Admin_AdminMessages_Customer.AdminMessage_Admin_" +
                    "AdminMessages_Customer_Target]\r\n        FROM (\r\n            SELECT -- Constructi" +
                    "ng AdminMessage_Admin_AdminMessages_Customer_Target\r\n                T1.[AdminMe" +
                    "ssage_Admin_AdminMessages_Customer.AdminMessage_Admin_AdminMessages_Customer_Sou" +
                    "rce.Id], \r\n                CreateRef(Context.Messages, row(T1.[AdminMessage_Admi" +
                    "n_AdminMessages_Customer.AdminMessage_Admin_AdminMessages_Customer_Target.Id]), " +
                    "[Karenbic.DataAccess.AdminMessage_Customer]) AS [AdminMessage_Admin_AdminMessage" +
                    "s_Customer.AdminMessage_Admin_AdminMessages_Customer_Target]\r\n            FROM (" +
                    "\r\n                SELECT \r\n                    T.AdminMessage_Admin_Id AS [Admin" +
                    "Message_Admin_AdminMessages_Customer.AdminMessage_Admin_AdminMessages_Customer_S" +
                    "ource.Id], \r\n                    T.Id AS [AdminMessage_Admin_AdminMessages_Custo" +
                    "mer.AdminMessage_Admin_AdminMessages_Customer_Target.Id], \r\n                    " +
                    "True AS _from0\r\n                FROM CodeFirstDatabase.tbl_AdminMessage_Customer" +
                    " AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.AdminMessage_Admin_CustomerGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.AdminMessage_Admin_CustomerGroups", "\r\n    SELECT VALUE -- Constructing AdminMessage_Admin_CustomerGroups\r\n        [Ka" +
                    "renbic.DataAccess.AdminMessage_Admin_CustomerGroups](T3.[AdminMessage_Admin_Cust" +
                    "omerGroups.AdminMessage_Admin_CustomerGroups_Source], T3.[AdminMessage_Admin_Cus" +
                    "tomerGroups.AdminMessage_Admin_CustomerGroups_Target])\r\n    FROM (\r\n        SELE" +
                    "CT -- Constructing AdminMessage_Admin_CustomerGroups_Source\r\n            CreateR" +
                    "ef(Context.Messages, row(T2.[AdminMessage_Admin_CustomerGroups.AdminMessage_Admi" +
                    "n_CustomerGroups_Source.Id]), [Karenbic.DataAccess.AdminMessage_Admin]) AS [Admi" +
                    "nMessage_Admin_CustomerGroups.AdminMessage_Admin_CustomerGroups_Source], \r\n     " +
                    "       T2.[AdminMessage_Admin_CustomerGroups.AdminMessage_Admin_CustomerGroups_T" +
                    "arget]\r\n        FROM (\r\n            SELECT -- Constructing AdminMessage_Admin_Cu" +
                    "stomerGroups_Target\r\n                T1.[AdminMessage_Admin_CustomerGroups.Admin" +
                    "Message_Admin_CustomerGroups_Source.Id], \r\n                CreateRef(Context.Cus" +
                    "tomerGroups, row(T1.[AdminMessage_Admin_CustomerGroups.AdminMessage_Admin_Custom" +
                    "erGroups_Target.Id]), [Karenbic.DataAccess.CustomerGroup]) AS [AdminMessage_Admi" +
                    "n_CustomerGroups.AdminMessage_Admin_CustomerGroups_Target]\r\n            FROM (\r\n" +
                    "                SELECT \r\n                    T.CustomerGroup_Id AS [AdminMessage" +
                    "_Admin_CustomerGroups.AdminMessage_Admin_CustomerGroups_Source.Id], \r\n          " +
                    "          T.AdminMessages_Admin_Id AS [AdminMessage_Admin_CustomerGroups.AdminMe" +
                    "ssage_Admin_CustomerGroups_Target.Id], \r\n                    True AS _from0\r\n   " +
                    "             FROM CodeFirstDatabase.AdminMessage_AdminCustomerGroup AS T\r\n      " +
                    "      ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Context.AdminMessage_Admin_Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.AdminMessage_Admin_Customers", "\r\n    SELECT VALUE -- Constructing AdminMessage_Admin_Customers\r\n        [Karenbi" +
                    "c.DataAccess.AdminMessage_Admin_Customers](T3.[AdminMessage_Admin_Customers.Admi" +
                    "nMessage_Admin_Customers_Source], T3.[AdminMessage_Admin_Customers.AdminMessage_" +
                    "Admin_Customers_Target])\r\n    FROM (\r\n        SELECT -- Constructing AdminMessag" +
                    "e_Admin_Customers_Source\r\n            CreateRef(Context.Messages, row(T2.[AdminM" +
                    "essage_Admin_Customers.AdminMessage_Admin_Customers_Source.Id]), [Karenbic.DataA" +
                    "ccess.AdminMessage_Admin]) AS [AdminMessage_Admin_Customers.AdminMessage_Admin_C" +
                    "ustomers_Source], \r\n            T2.[AdminMessage_Admin_Customers.AdminMessage_Ad" +
                    "min_Customers_Target]\r\n        FROM (\r\n            SELECT -- Constructing AdminM" +
                    "essage_Admin_Customers_Target\r\n                T1.[AdminMessage_Admin_Customers." +
                    "AdminMessage_Admin_Customers_Source.Id], \r\n                CreateRef(Context.Cus" +
                    "tomers, row(T1.[AdminMessage_Admin_Customers.AdminMessage_Admin_Customers_Target" +
                    ".Id]), [Karenbic.DataAccess.Customer]) AS [AdminMessage_Admin_Customers.AdminMes" +
                    "sage_Admin_Customers_Target]\r\n            FROM (\r\n                SELECT \r\n     " +
                    "               T.Customer_Id AS [AdminMessage_Admin_Customers.AdminMessage_Admin" +
                    "_Customers_Source.Id], \r\n                    T.AdminMessages_Admin_Id AS [AdminM" +
                    "essage_Admin_Customers.AdminMessage_Admin_Customers_Target.Id], \r\n              " +
                    "      True AS _from0\r\n                FROM CodeFirstDatabase.AdminMessage_AdminC" +
                    "ustomer AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PriceList
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PriceList", @"
    SELECT VALUE -- Constructing PriceList
        [CodeFirstDatabaseSchema.PriceList](T1.PriceList_Id, T1.PriceList_Portal, T1.PriceList_Title, T1.PriceList_Order, T1.PriceList_PictureFile)
    FROM (
        SELECT 
            T.Id AS PriceList_Id, 
            CAST(T.Portal AS [Edm.Int32]) AS PriceList_Portal, 
            T.Title AS PriceList_Title, 
            T.[Order] AS PriceList_Order, 
            T.PictureFile AS PriceList_PictureFile, 
            True AS _from0
        FROM Context.PriceLists AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.PriceLists
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.PriceLists", @"
    SELECT VALUE -- Constructing PriceLists
        [Karenbic.DataAccess.PriceList](T1.PriceList_Id, T1.PriceList_Portal, T1.PriceList_Title, T1.PriceList_Order, T1.PriceList_PictureFile)
    FROM (
        SELECT 
            T.Id AS PriceList_Id, 
            CAST(T.Portal AS [Karenbic.DataAccess.Portal]) AS PriceList_Portal, 
            T.Title AS PriceList_Title, 
            T.[Order] AS PriceList_Order, 
            T.PictureFile AS PriceList_PictureFile, 
            True AS _from0
        FROM CodeFirstDatabase.PriceList AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Setting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Setting", @"
    SELECT VALUE -- Constructing Setting
        [CodeFirstDatabaseSchema.Setting](T1.Setting_Id, T1.Setting_PreDesignOrderText, T1.Setting_PrePrintOrderText)
    FROM (
        SELECT 
            T.Id AS Setting_Id, 
            T.PreDesignOrderText AS Setting_PreDesignOrderText, 
            T.PrePrintOrderText AS Setting_PrePrintOrderText, 
            True AS _from0
        FROM Context.Setting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Context.Setting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Context.Setting", @"
    SELECT VALUE -- Constructing Setting
        [Karenbic.DataAccess.Setting](T1.Setting_Id, T1.Setting_PreDesignOrderText, T1.Setting_PrePrintOrderText)
    FROM (
        SELECT 
            T.Id AS Setting_Id, 
            T.PreDesignOrderText AS Setting_PreDesignOrderText, 
            T.PrePrintOrderText AS Setting_PrePrintOrderText, 
            True AS _from0
        FROM CodeFirstDatabase.Setting AS T
    ) AS T1");
        }
    }
}
